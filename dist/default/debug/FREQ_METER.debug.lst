

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Oct 11 13:40:59 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68   000000                     
    69                           ; Generated 23/03/2023 GMT
    70                           ; 
    71                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution. Publication is not required when
    85                           ;        this file is used in an embedded application.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F4620 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103   000000                     
   104                           	psect	idataBANK0
   105   002A4E                     __pidataBANK0:
   106                           	callstack 0
   107                           
   108                           ;initializer for _port_reg
   109   002A4E  80                 	db	128
   110   002A4F  0F                 	db	15
   111   002A50  81                 	db	129
   112   002A51  0F                 	db	15
   113   002A52  82                 	db	130
   114   002A53  0F                 	db	15
   115   002A54  83                 	db	131
   116   002A55  0F                 	db	15
   117   002A56  84                 	db	132
   118   002A57  0F                 	db	15
   119                           
   120                           ;initializer for _lat_reg
   121   002A58  89                 	db	137
   122   002A59  0F                 	db	15
   123   002A5A  8A                 	db	138
   124   002A5B  0F                 	db	15
   125   002A5C  8B                 	db	139
   126   002A5D  0F                 	db	15
   127   002A5E  8C                 	db	140
   128   002A5F  0F                 	db	15
   129   002A60  8D                 	db	141
   130   002A61  0F                 	db	15
   131                           
   132                           ;initializer for _tris_reg
   133   002A62  92                 	db	146
   134   002A63  0F                 	db	15
   135   002A64  93                 	db	147
   136   002A65  0F                 	db	15
   137   002A66  94                 	db	148
   138   002A67  0F                 	db	15
   139   002A68  95                 	db	149
   140   002A69  0F                 	db	15
   141   002A6A  96                 	db	150
   142   002A6B  0F                 	db	15
   143                           
   144                           ;initializer for _timer0_obj
   145   002A6C  20                 	db	low _SET_FLAG
   146   002A6D  20                 	db	high _SET_FLAG
   147   002A6E  01                 	db	1
   148   002A6F  00                 	db	0
   149   002A70  01                 	db	1
   150   002A71  03                 	db	3
   151   002A72  00                 	db	0
   152   002A73  0BDC               	dw	3036
   153                           
   154                           ;initializer for _lcd_4bit
   155   002A75  03                 	db	3
   156   002A76  23                 	db	35
   157   002A77  2B                 	db	43
   158   002A78  33                 	db	51
   159   002A79  3B                 	db	59
   160   002A7A  0B                 	db	11
   161   000000                     _TMR1L	set	4046
   162   000000                     _TMR1H	set	4047
   163   000000                     _TMR0L	set	4054
   164   000000                     _TMR0H	set	4055
   165   000000                     _PORTE	set	3972
   166   000000                     _PORTD	set	3971
   167   000000                     _PORTC	set	3970
   168   000000                     _PORTB	set	3969
   169   000000                     _PORTA	set	3968
   170   000000                     _LATA	set	3977
   171   000000                     _TRISA	set	3986
   172   000000                     _PIE1bits	set	3997
   173   000000                     _INTCONbits	set	4082
   174   000000                     _TRISE	set	3990
   175   000000                     _TRISD	set	3989
   176   000000                     _TRISC	set	3988
   177   000000                     _TRISB	set	3987
   178   000000                     _LATE	set	3981
   179   000000                     _LATD	set	3980
   180   000000                     _LATC	set	3979
   181   000000                     _LATB	set	3978
   182   000000                     _T1CONbits	set	4045
   183   000000                     _T0CONbits	set	4053
   184   000000                     _PIR1bits	set	3998
   185                           
   186                           	psect	smallconst
   187   001000                     __psmallconst:
   188                           	callstack 0
   189   001000  00                 	db	0
   190   001001                     STR_5:
   191   001001  46                 	db	70	;'F'
   192   001002  72                 	db	114	;'r'
   193   001003  65                 	db	101	;'e'
   194   001004  71                 	db	113	;'q'
   195   001005  75                 	db	117	;'u'
   196   001006  65                 	db	101	;'e'
   197   001007  6E                 	db	110	;'n'
   198   001008  63                 	db	99	;'c'
   199   001009  79                 	db	121	;'y'
   200   00100A  20                 	db	32
   201   00100B  3D                 	db	61	;'='
   202   00100C  20                 	db	32
   203   00100D  00                 	db	0
   204   00100E                     STR_4:
   205   00100E  6C                 	db	108	;'l'
   206   00100F  6F                 	db	111	;'o'
   207   001010  61                 	db	97	;'a'
   208   001011  64                 	db	100	;'d'
   209   001012  69                 	db	105	;'i'
   210   001013  6E                 	db	110	;'n'
   211   001014  67                 	db	103	;'g'
   212   001015  00                 	db	0
   213   001016                     STR_1:
   214   001016  25                 	db	37
   215   001017  69                 	db	105	;'i'
   216   001018  00                 	db	0
   217   001019  00                 	db	0	; dummy byte at the end
   218   000000                     
   219                           ; #config settings
   220                           
   221                           	psect	cinit
   222   0027F2                     __pcinit:
   223                           	callstack 0
   224   0027F2                     start_initialization:
   225                           	callstack 0
   226   0027F2                     __initialization:
   227                           	callstack 0
   228                           
   229                           ; Initialize objects allocated to BANK0 (45 bytes)
   230                           ; load TBLPTR registers with __pidataBANK0
   231   0027F2  0E4E               	movlw	low __pidataBANK0
   232   0027F4  6EF6               	movwf	tblptrl,c
   233   0027F6  0E2A               	movlw	high __pidataBANK0
   234   0027F8  6EF7               	movwf	tblptrh,c
   235   0027FA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   236   0027FC  6EF8               	movwf	tblptru,c
   237   0027FE  EE00  F080         	lfsr	0,__pdataBANK0
   238   002802  EE10 F02D          	lfsr	1,45
   239   002806                     copy_data0:
   240   002806  0009               	tblrd		*+
   241   002808  CFF5 FFEE          	movff	tablat,postinc0
   242   00280C  50E5               	movf	postdec1,w,c
   243   00280E  50E1               	movf	fsr1l,w,c
   244   002810  E1FA               	bnz	copy_data0
   245                           
   246                           ; Clear objects allocated to BANK1 (32 bytes)
   247   002812  EE01  F000         	lfsr	0,__pbssBANK1
   248   002816  0E20               	movlw	32
   249   002818                     clear_0:
   250   002818  6AEE               	clrf	postinc0,c
   251   00281A  06E8               	decf	wreg,f,c
   252   00281C  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (39 bytes)
   255   00281E  EE00  F0AD         	lfsr	0,__pbssBANK0
   256   002822  0E27               	movlw	39
   257   002824                     clear_1:
   258   002824  6AEE               	clrf	postinc0,c
   259   002826  06E8               	decf	wreg,f,c
   260   002828  E1FD               	bnz	clear_1
   261                           
   262                           ; Clear objects allocated to COMRAM (14 bytes)
   263   00282A  EE00  F06F         	lfsr	0,__pbssCOMRAM
   264   00282E  0E0E               	movlw	14
   265   002830                     clear_2:
   266   002830  6AEE               	clrf	postinc0,c
   267   002832  06E8               	decf	wreg,f,c
   268   002834  E1FD               	bnz	clear_2
   269   002836                     end_of_initialization:
   270                           	callstack 0
   271   002836                     __end_of__initialization:
   272                           	callstack 0
   273   002836  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   274   002838  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   275   00283A  0100               	movlb	0
   276   00283C  EF19  F013         	goto	_main	;jump to C main() function
   277                           
   278                           	psect	bssCOMRAM
   279   00006F                     __pbssCOMRAM:
   280                           	callstack 0
   281   00006F                     	ds	4
   282   000073                     _width:
   283                           	callstack 0
   284   000073                     	ds	2
   285   000075                     _prec:
   286                           	callstack 0
   287   000075                     	ds	2
   288   000077                     _TIMER0_HUNDLER:
   289                           	callstack 0
   290   000077                     	ds	2
   291   000079                     _flags:
   292                           	callstack 0
   293   000079                     	ds	1
   294   00007A                     _flag:
   295                           	callstack 0
   296   00007A                     	ds	1
   297   00007B                     _freq:
   298                           	callstack 0
   299   00007B                     	ds	2
   300                           
   301                           	psect	bssBANK0
   302   0000AD                     __pbssBANK0:
   303                           	callstack 0
   304   0000AD                     cnvert_uint32_to_string@F3228:
   305                           	callstack 0
   306   0000AD                     	ds	11
   307   0000B8                     	ds	6
   308   0000BE                     _TIMER1_HUNDLER:
   309                           	callstack 0
   310   0000BE                     	ds	2
   311   0000C0                     _arr:
   312                           	callstack 0
   313   0000C0                     	ds	11
   314   0000CB                     _timer1_obj:
   315                           	callstack 0
   316   0000CB                     	ds	9
   317                           
   318                           	psect	dataBANK0
   319   000080                     __pdataBANK0:
   320                           	callstack 0
   321   000080                     _port_reg:
   322                           	callstack 0
   323   000080                     	ds	10
   324   00008A                     _lat_reg:
   325                           	callstack 0
   326   00008A                     	ds	10
   327   000094                     _tris_reg:
   328                           	callstack 0
   329   000094                     	ds	10
   330   00009E                     _timer0_obj:
   331                           	callstack 0
   332   00009E                     	ds	9
   333   0000A7                     _lcd_4bit:
   334                           	callstack 0
   335   0000A7                     	ds	6
   336                           
   337                           	psect	bssBANK1
   338   000100                     __pbssBANK1:
   339                           	callstack 0
   340   000100                     _dbuf:
   341                           	callstack 0
   342   000100                     	ds	32
   343                           
   344                           	psect	cstackBANK0
   345   0000D4                     __pcstackBANK0:
   346                           	callstack 0
   347   0000D4                     gpio_pin_direction_intialize@Pin_Config:
   348                           	callstack 0
   349   0000D4                     gpio_pin_write_logic@Pin_Config:
   350                           	callstack 0
   351   0000D4                     select_cnt_reg_size@timer0:
   352                           	callstack 0
   353   0000D4                     select_timer_mode@timer0:
   354                           	callstack 0
   355   0000D4                     prescaler_timer_status@timer0:
   356                           	callstack 0
   357   0000D4                     set_TIMER0_interrupt@timer0:
   358                           	callstack 0
   359   0000D4                     select_timer_mode@timer1$F836@timer1:
   360                           	callstack 0
   361   0000D4                     select_prescaler_timer@timer1:
   362                           	callstack 0
   363   0000D4                     set_TIMER1_interrupt@timer1:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x0
   367   0000D4                     	ds	2
   368   0000D6                     ??_prescaler_timer_status:
   369   0000D6                     ??_select_prescaler_timer:
   370   0000D6                     ??_gpio_pin_direction_intialize:
   371   0000D6                     gpio_pin_write_logic@logic:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x2
   375   0000D6                     	ds	1
   376   0000D7                     ??_gpio_pin_write_logic:
   377   0000D7                     Timer0_init@timer0:
   378                           	callstack 0
   379   0000D7                     Timer1_init@timer1:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x3
   383   0000D7                     	ds	2
   384   0000D9                     ??_Timer0_init:
   385   0000D9                     ??_Timer1_init:
   386                           
   387                           ; 1 bytes @ 0x5
   388   0000D9                     	ds	3
   389   0000DC                     gpio_pin_direction_intialize@ret:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x8
   393   0000DC                     	ds	1
   394   0000DD                     gpio_pin_write_logic@ret:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x9
   398   0000DD                     	ds	1
   399   0000DE                     send_4_bit_enable@lcd:
   400                           	callstack 0
   401   0000DE                     send_4_bit_help@lcd:
   402                           	callstack 0
   403   0000DE                     gpio_pin_intialize@Pin_Config:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0xA
   407   0000DE                     	ds	2
   408   0000E0                     ??_gpio_pin_intialize:
   409   0000E0                     send_4_bit_enable@ret:
   410                           	callstack 0
   411   0000E0                     send_4_bit_help@data_command:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0xC
   415   0000E0                     	ds	1
   416   0000E1                     send_4_bit_help@ret:
   417                           	callstack 0
   418   0000E1                     gpio_pin_intialize@ret:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0xD
   422   0000E1                     	ds	1
   423   0000E2                     send_4_bit_command@lcd:
   424                           	callstack 0
   425   0000E2                     send_4_bit_char_data@lcd:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0xE
   429   0000E2                     	ds	2
   430   0000E4                     send_4_bit_command@command:
   431                           	callstack 0
   432   0000E4                     send_4_bit_char_data@data:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x10
   436   0000E4                     	ds	1
   437   0000E5                     send_4_bit_command@ret:
   438                           	callstack 0
   439   0000E5                     send_4_bit_char_data@ret:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x11
   443   0000E5                     	ds	1
   444   0000E6                     lcd_pins_4_initialize@lcd:
   445                           	callstack 0
   446   0000E6                     send_4_bit_string_data@lcd:
   447                           	callstack 0
   448   0000E6                     lcd_4_bit_set_cursor@lcd:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x12
   452   0000E6                     	ds	2
   453   0000E8                     ??_lcd_pins_4_initialize:
   454   0000E8                     lcd_4_bit_set_cursor@row:
   455                           	callstack 0
   456   0000E8                     send_4_bit_string_data@data:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x14
   460   0000E8                     	ds	1
   461   0000E9                     lcd_4_bit_set_cursor@column:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x15
   465   0000E9                     	ds	1
   466   0000EA                     lcd_pins_4_initialize@ret:
   467                           	callstack 0
   468   0000EA                     lcd_4_bit_set_cursor@ret:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x16
   472   0000EA                     	ds	1
   473   0000EB                     lcd_pins_4_initialize@cnt_pin:
   474                           	callstack 0
   475   0000EB                     send_4_bit_char_data_pos@lcd:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x17
   479   0000EB                     	ds	1
   480   0000EC                     
   481                           ; 1 bytes @ 0x18
   482   0000EC                     	ds	1
   483   0000ED                     send_4_bit_char_data_pos@row:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x19
   487   0000ED                     	ds	1
   488   0000EE                     send_4_bit_char_data_pos@column:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x1A
   492   0000EE                     	ds	1
   493   0000EF                     send_4_bit_char_data_pos@data:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x1B
   497   0000EF                     	ds	1
   498   0000F0                     send_4_bit_char_data_pos@ret:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x1C
   502   0000F0                     	ds	1
   503   0000F1                     ??_main:
   504                           
   505                           ; 1 bytes @ 0x1D
   506   0000F1                     	ds	1
   507   0000F2                     main@i:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x1E
   511   0000F2                     	ds	1
   512                           
   513                           	psect	cstackCOMRAM
   514   000001                     __pcstackCOMRAM:
   515                           	callstack 0
   516   000001                     ?___awdiv:
   517                           	callstack 0
   518   000001                     ?___awmod:
   519                           	callstack 0
   520   000001                     Timer1_write_value@timer1:
   521                           	callstack 0
   522   000001                     Timer1_read_value@timer1:
   523                           	callstack 0
   524   000001                     ___awdiv@dividend:
   525                           	callstack 0
   526   000001                     ___awmod@dividend:
   527                           	callstack 0
   528   000001                     memset@dest:
   529                           	callstack 0
   530   000001                     fputc@c:
   531                           	callstack 0
   532   000001                     i2gpio_pin_write_logic@Pin_Config:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x0
   536   000001                     	ds	2
   537   000003                     i2gpio_pin_write_logic@logic:
   538                           	callstack 0
   539   000003                     Timer1_write_value@value:
   540                           	callstack 0
   541   000003                     Timer1_read_value@value:
   542                           	callstack 0
   543   000003                     ___awdiv@divisor:
   544                           	callstack 0
   545   000003                     ___awmod@divisor:
   546                           	callstack 0
   547   000003                     memset@c:
   548                           	callstack 0
   549   000003                     fputc@fp:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x2
   553   000003                     	ds	1
   554   000004                     ??i2_gpio_pin_write_logic:
   555                           
   556                           ; 1 bytes @ 0x3
   557   000004                     	ds	1
   558   000005                     ??_fputc:
   559   000005                     ??_Timer1_read_value:
   560   000005                     ___awdiv@counter:
   561                           	callstack 0
   562   000005                     ___awmod@counter:
   563                           	callstack 0
   564   000005                     memset@n:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x4
   568   000005                     	ds	1
   569   000006                     ___awdiv@sign:
   570                           	callstack 0
   571   000006                     ___awmod@sign:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x5
   575   000006                     	ds	1
   576   000007                     ??_memset:
   577   000007                     ?_abs:
   578                           	callstack 0
   579   000007                     ___awdiv@quotient:
   580                           	callstack 0
   581   000007                     abs@a:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x6
   585   000007                     	ds	2
   586   000009                     ??_abs:
   587   000009                     Timer1_read_value@tmr1L:
   588                           	callstack 0
   589   000009                     memset@k:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x8
   593   000009                     	ds	1
   594   00000A                     Timer1_read_value@tmr1H:
   595                           	callstack 0
   596   00000A                     i2gpio_pin_write_logic@ret:
   597                           	callstack 0
   598   00000A                     fputs@s:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x9
   602   00000A                     	ds	1
   603   00000B                     memset@s:
   604                           	callstack 0
   605   00000B                     i2send_4_bit_enable@lcd:
   606                           	callstack 0
   607   00000B                     i2send_4_bit_help@lcd:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0xA
   611   00000B                     	ds	1
   612   00000C                     fputs@fp:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0xB
   616   00000C                     	ds	1
   617   00000D                     i2send_4_bit_enable@ret:
   618                           	callstack 0
   619   00000D                     i2send_4_bit_help@data_command:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0xC
   623   00000D                     	ds	1
   624   00000E                     fputs@c:
   625                           	callstack 0
   626   00000E                     i2send_4_bit_help@ret:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0xD
   630   00000E                     	ds	1
   631   00000F                     fputs@i:
   632                           	callstack 0
   633   00000F                     i2send_4_bit_command@lcd:
   634                           	callstack 0
   635   00000F                     i2send_4_bit_char_data@lcd:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0xE
   639   00000F                     	ds	2
   640   000011                     i2send_4_bit_command@command:
   641                           	callstack 0
   642   000011                     i2send_4_bit_char_data@data:
   643                           	callstack 0
   644   000011                     pad@fp:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x10
   648   000011                     	ds	1
   649   000012                     i2send_4_bit_command@ret:
   650                           	callstack 0
   651   000012                     i2send_4_bit_char_data@ret:
   652                           	callstack 0
   653                           
   654                           ; 1 bytes @ 0x11
   655   000012                     	ds	1
   656   000013                     pad@buf:
   657                           	callstack 0
   658   000013                     i2lcd_4_bit_set_cursor@lcd:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x12
   662   000013                     	ds	2
   663   000015                     i2lcd_4_bit_set_cursor@row:
   664                           	callstack 0
   665   000015                     pad@p:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x14
   669   000015                     	ds	1
   670   000016                     i2lcd_4_bit_set_cursor@column:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x15
   674   000016                     	ds	1
   675   000017                     ??_pad:
   676   000017                     i2lcd_4_bit_set_cursor@ret:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x16
   680   000017                     	ds	1
   681   000018                     send_4_bit_string_data_pos@lcd:
   682                           	callstack 0
   683   000018                     pad@i:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x17
   687   000018                     	ds	2
   688   00001A                     send_4_bit_string_data_pos@row:
   689                           	callstack 0
   690   00001A                     pad@w:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x19
   694   00001A                     	ds	1
   695   00001B                     send_4_bit_string_data_pos@column:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x1A
   699   00001B                     	ds	1
   700   00001C                     send_4_bit_string_data_pos@data:
   701                           	callstack 0
   702   00001C                     dtoa@fp:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x1B
   706   00001C                     	ds	2
   707   00001E                     dtoa@d:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x1D
   711   00001E                     	ds	2
   712   000020                     _dtoa$1640:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x1F
   716   000020                     	ds	2
   717   000022                     dtoa@p:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x21
   721   000022                     	ds	2
   722   000024                     dtoa@w:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x23
   726   000024                     	ds	2
   727   000026                     dtoa@i:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x25
   731   000026                     	ds	2
   732   000028                     dtoa@s:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x27
   736   000028                     	ds	1
   737   000029                     vfpfcnvrt@fp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x28
   741   000029                     	ds	2
   742   00002B                     vfpfcnvrt@fmt:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x2A
   746   00002B                     	ds	2
   747   00002D                     vfpfcnvrt@ap:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x2C
   751   00002D                     	ds	2
   752   00002F                     ??_vfpfcnvrt:
   753                           
   754                           ; 1 bytes @ 0x2E
   755   00002F                     	ds	2
   756   000031                     vfpfcnvrt@convarg:
   757                           	callstack 0
   758                           
   759                           ; 4 bytes @ 0x30
   760   000031                     	ds	4
   761   000035                     vfpfcnvrt@cp:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x34
   765   000035                     	ds	2
   766   000037                     ?_vfprintf:
   767                           	callstack 0
   768   000037                     vfprintf@fp:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x36
   772   000037                     	ds	2
   773   000039                     vfprintf@fmt:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x38
   777   000039                     	ds	2
   778   00003B                     vfprintf@ap:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x3A
   782   00003B                     	ds	2
   783   00003D                     vfprintf@cfmt:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x3C
   787   00003D                     	ds	2
   788   00003F                     ?_sprintf:
   789                           	callstack 0
   790   00003F                     sprintf@s:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x3E
   794   00003F                     	ds	2
   795   000041                     sprintf@fmt:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x40
   799   000041                     	ds	4
   800   000045                     sprintf@ap:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x44
   804   000045                     	ds	2
   805   000047                     sprintf@f:
   806                           	callstack 0
   807                           
   808                           ; 12 bytes @ 0x46
   809   000047                     	ds	12
   810   000053                     cnvert_uint32_to_string@value:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x52
   814   000053                     	ds	2
   815   000055                     cnvert_uint32_to_string@str:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x54
   819   000055                     	ds	2
   820   000057                     cnvert_uint32_to_string@Temp_String:
   821                           	callstack 0
   822                           
   823                           ; 11 bytes @ 0x56
   824   000057                     	ds	11
   825   000062                     cnvert_uint32_to_string@DataCounter:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x61
   829   000062                     	ds	1
   830   000063                     ??_InterruptManager:
   831                           
   832                           ; 1 bytes @ 0x62
   833   000063                     	ds	12
   834                           
   835 ;;
   836 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   837 ;;
   838 ;; *************** function _main *****************
   839 ;; Defined at:
   840 ;;		line 65 in file "freq_meter.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;  i               1   30[BANK0 ] unsigned char 
   845 ;;  ret             1    0        unsigned char 
   846 ;; Return value:  Size  Location     Type
   847 ;;                  2  515[None  ] int 
   848 ;; Registers used:
   849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   856 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   858 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   859 ;;Total ram usage:        2 bytes
   860 ;; Hardware stack levels required when called: 17
   861 ;; This function calls:
   862 ;;		_application_initialize
   863 ;;		_send_4_bit_char_data_pos
   864 ;;		_send_4_bit_string_data
   865 ;; This function is called by:
   866 ;;		Startup code after reset
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text0
   871   002632                     __ptext0:
   872                           	callstack 0
   873   002632                     _main:
   874                           	callstack 14
   875   002632                     
   876                           ;freq_meter.c: 67:     application_initialize();
   877   002632  EC3E  F015         	call	_application_initialize	;wreg free
   878   002636                     
   879                           ;freq_meter.c: 68:     send_4_bit_string_data(&lcd_4bit,"loading");
   880   002636  0EA7               	movlw	low _lcd_4bit
   881   002638  0100               	movlb	0	; () banked
   882   00263A  6FE6               	movwf	send_4_bit_string_data@lcd& (0+255),b
   883   00263C  0E00               	movlw	high _lcd_4bit
   884   00263E  6FE7               	movwf	(send_4_bit_string_data@lcd+1)& (0+255),b
   885   002640  0E0E               	movlw	low STR_4
   886   002642  6FE8               	movwf	send_4_bit_string_data@data& (0+255),b
   887   002644  0E10               	movlw	high STR_4
   888   002646  6FE9               	movwf	(send_4_bit_string_data@data+1)& (0+255),b
   889   002648  EC4D  F013         	call	_send_4_bit_string_data	;wreg free
   890   00264C                     
   891                           ;freq_meter.c: 69:     for(uint8 i = 0; i < 13; i++)
   892   00264C  0E00               	movlw	0
   893   00264E  0100               	movlb	0	; () banked
   894   002650  6FF2               	movwf	main@i& (0+255),b
   895   002652                     l3715:
   896                           
   897                           ; BSR set to: 0
   898                           ;freq_meter.c: 70:     {;freq_meter.c: 71:         send_4_bit_char_data_pos(&lcd_4bit,1,
      +                          i+8,'.');
   899   002652  0EA7               	movlw	low _lcd_4bit
   900   002654  6FEB               	movwf	send_4_bit_char_data_pos@lcd& (0+255),b
   901   002656  0E00               	movlw	high _lcd_4bit
   902   002658  6FEC               	movwf	(send_4_bit_char_data_pos@lcd+1)& (0+255),b
   903   00265A  0E01               	movlw	1
   904   00265C  6FED               	movwf	send_4_bit_char_data_pos@row& (0+255),b
   905   00265E  51F2               	movf	main@i& (0+255),w,b
   906   002660  0F08               	addlw	8
   907   002662  6FEE               	movwf	send_4_bit_char_data_pos@column& (0+255),b
   908   002664  0E2E               	movlw	46
   909   002666  6FEF               	movwf	send_4_bit_char_data_pos@data& (0+255),b
   910   002668  EC6D  F014         	call	_send_4_bit_char_data_pos	;wreg free
   911   00266C                     
   912                           ;freq_meter.c: 72:         _delay((unsigned long)((10)*(4000000UL/4000.0)));
   913   00266C  0E0D               	movlw	13
   914   00266E  0100               	movlb	0	; () banked
   915   002670  6FF1               	movwf	??_main& (0+255),b
   916   002672  0EFB               	movlw	251
   917   002674                     u3417:
   918   002674  2EE8               	decfsz	wreg,f,c
   919   002676  D7FE               	bra	u3417
   920   002678  2FF1               	decfsz	??_main& (0+255),f,b
   921   00267A  D7FC               	bra	u3417
   922   00267C  D000               	nop2	
   923   00267E                     
   924                           ;freq_meter.c: 73:     }
   925   00267E  0100               	movlb	0	; () banked
   926   002680  2BF2               	incf	main@i& (0+255),f,b
   927   002682                     
   928                           ; BSR set to: 0
   929   002682  0E0C               	movlw	12
   930   002684  65F2               	cpfsgt	main@i& (0+255),b
   931   002686  EF47  F013         	goto	u3401
   932   00268A  EF49  F013         	goto	u3400
   933   00268E                     u3401:
   934   00268E  EF29  F013         	goto	l3715
   935   002692                     u3400:
   936   002692                     l518:
   937   002692  EF49  F013         	goto	l518
   938   002696  EF07  F000         	goto	start
   939   00269A                     __end_of_main:
   940                           	callstack 0
   941                           
   942 ;; *************** function _send_4_bit_string_data *****************
   943 ;; Defined at:
   944 ;;		line 98 in file "ECU_layer/LCD/ecu_lcd.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  lcd             2   18[BANK0 ] PTR const struct .
   947 ;;		 -> lcd_4bit(6), 
   948 ;;  data            2   20[BANK0 ] PTR unsigned char 
   949 ;;		 -> STR_4(8), 
   950 ;; Auto vars:     Size  Location     Type
   951 ;;  ret             1    0        unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      unsigned char 
   954 ;; Registers used:
   955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   961 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;Total ram usage:        4 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 15
   968 ;; This function calls:
   969 ;;		_send_4_bit_char_data
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text1
   976   00269A                     __ptext1:
   977                           	callstack 0
   978   00269A                     _send_4_bit_string_data:
   979                           	callstack 15
   980   00269A                     
   981                           ;ECU_layer/LCD/ecu_lcd.c: 101:     if(((void*)0) == lcd)
   982   00269A  0100               	movlb	0	; () banked
   983   00269C  51E6               	movf	send_4_bit_string_data@lcd& (0+255),w,b
   984   00269E  11E7               	iorwf	(send_4_bit_string_data@lcd+1)& (0+255),w,b
   985   0026A0  A4D8               	btfss	status,2,c
   986   0026A2  EF55  F013         	goto	u2991
   987   0026A6  EF57  F013         	goto	u2990
   988   0026AA                     u2991:
   989   0026AA  EF6A  F013         	goto	l3415
   990   0026AE                     u2990:
   991   0026AE                     
   992                           ; BSR set to: 0
   993   0026AE  EF79  F013         	goto	l59
   994   0026B2                     l3411:
   995                           
   996                           ; BSR set to: 0
   997   0026B2  C0E6  F0E2         	movff	send_4_bit_string_data@lcd,send_4_bit_char_data@lcd
   998   0026B6  C0E7  F0E3         	movff	send_4_bit_string_data@lcd+1,send_4_bit_char_data@lcd+1
   999   0026BA  C0E8  FFF6         	movff	send_4_bit_string_data@data,tblptrl
  1000   0026BE  C0E9  FFF7         	movff	send_4_bit_string_data@data+1,tblptrh
  1001   0026C2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1002   0026C2  6AF8               	clrf	tblptru,c
  1003   0026C4                     	endif
  1004   0026C4                     	if	0	;tblptru may be non-zero
  1005   0026C4                     	endif
  1006   0026C4  0008               	tblrd		*
  1007   0026C6  CFF5 F0E4          	movff	tablat,send_4_bit_char_data@data
  1008   0026CA  EC79  F011         	call	_send_4_bit_char_data	;wreg free
  1009   0026CE  0100               	movlb	0	; () banked
  1010   0026D0  4BE8               	infsnz	send_4_bit_string_data@data& (0+255),f,b
  1011   0026D2  2BE9               	incf	(send_4_bit_string_data@data+1)& (0+255),f,b
  1012   0026D4                     l3415:
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;ECU_layer/LCD/ecu_lcd.c: 105:       while(*data){
  1016   0026D4  C0E8  FFF6         	movff	send_4_bit_string_data@data,tblptrl
  1017   0026D8  C0E9  FFF7         	movff	send_4_bit_string_data@data+1,tblptrh
  1018   0026DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1019   0026DC  6AF8               	clrf	tblptru,c
  1020   0026DE                     	endif
  1021   0026DE                     	if	0	;tblptru may be non-zero
  1022   0026DE                     	endif
  1023   0026DE  0008               	tblrd		*
  1024   0026E0  50F5               	movf	tablat,w,c
  1025   0026E2  0900               	iorlw	0
  1026   0026E4  A4D8               	btfss	status,2,c
  1027   0026E6  EF77  F013         	goto	u3001
  1028   0026EA  EF79  F013         	goto	u3000
  1029   0026EE                     u3001:
  1030   0026EE  EF59  F013         	goto	l3411
  1031   0026F2                     u3000:
  1032   0026F2                     l59:
  1033                           
  1034                           ; BSR set to: 0
  1035   0026F2  0012               	return		;funcret
  1036   0026F4                     __end_of_send_4_bit_string_data:
  1037                           	callstack 0
  1038                           
  1039 ;; *************** function _send_4_bit_char_data_pos *****************
  1040 ;; Defined at:
  1041 ;;		line 87 in file "ECU_layer/LCD/ecu_lcd.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;  lcd             2   23[BANK0 ] PTR const struct .
  1044 ;;		 -> lcd_4bit(6), 
  1045 ;;  row             1   25[BANK0 ] unsigned char 
  1046 ;;  column          1   26[BANK0 ] unsigned char 
  1047 ;;  data            1   27[BANK0 ] unsigned char 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  ret             1   28[BANK0 ] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      unsigned char 
  1052 ;; Registers used:
  1053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1059 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;Total ram usage:        6 bytes
  1064 ;; Hardware stack levels used: 1
  1065 ;; Hardware stack levels required when called: 16
  1066 ;; This function calls:
  1067 ;;		_lcd_4_bit_set_cursor
  1068 ;;		_send_4_bit_char_data
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;;		_send_4_bit_custome_char_data_pos
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text2
  1076   0028DA                     __ptext2:
  1077                           	callstack 0
  1078   0028DA                     _send_4_bit_char_data_pos:
  1079                           	callstack 14
  1080   0028DA                     
  1081                           ;ECU_layer/LCD/ecu_lcd.c: 89:     if(((void*)0) == lcd)
  1082   0028DA  0100               	movlb	0	; () banked
  1083   0028DC  51EB               	movf	send_4_bit_char_data_pos@lcd& (0+255),w,b
  1084   0028DE  11EC               	iorwf	(send_4_bit_char_data_pos@lcd+1)& (0+255),w,b
  1085   0028E0  A4D8               	btfss	status,2,c
  1086   0028E2  EF75  F014         	goto	u2981
  1087   0028E6  EF77  F014         	goto	u2980
  1088   0028EA                     u2981:
  1089   0028EA  EF79  F014         	goto	l3401
  1090   0028EE                     u2980:
  1091   0028EE                     
  1092                           ; BSR set to: 0
  1093   0028EE  EF8F  F014         	goto	l51
  1094   0028F2                     l3401:
  1095                           
  1096                           ; BSR set to: 0
  1097                           ;ECU_layer/LCD/ecu_lcd.c: 92:     {;ECU_layer/LCD/ecu_lcd.c: 93:         ret = lcd_4_bit
      +                          _set_cursor(lcd,row,column);
  1098   0028F2  C0EB  F0E6         	movff	send_4_bit_char_data_pos@lcd,lcd_4_bit_set_cursor@lcd
  1099   0028F6  C0EC  F0E7         	movff	send_4_bit_char_data_pos@lcd+1,lcd_4_bit_set_cursor@lcd+1
  1100   0028FA  C0ED  F0E8         	movff	send_4_bit_char_data_pos@row,lcd_4_bit_set_cursor@row
  1101   0028FE  C0EE  F0E9         	movff	send_4_bit_char_data_pos@column,lcd_4_bit_set_cursor@column
  1102   002902  EC7B  F00C         	call	_lcd_4_bit_set_cursor	;wreg free
  1103   002906  0100               	movlb	0	; () banked
  1104   002908  6FF0               	movwf	send_4_bit_char_data_pos@ret& (0+255),b
  1105                           
  1106                           ;ECU_layer/LCD/ecu_lcd.c: 94:         ret = send_4_bit_char_data(lcd, data);
  1107   00290A  C0EB  F0E2         	movff	send_4_bit_char_data_pos@lcd,send_4_bit_char_data@lcd
  1108   00290E  C0EC  F0E3         	movff	send_4_bit_char_data_pos@lcd+1,send_4_bit_char_data@lcd+1
  1109   002912  C0EF  F0E4         	movff	send_4_bit_char_data_pos@data,send_4_bit_char_data@data
  1110   002916  EC79  F011         	call	_send_4_bit_char_data	;wreg free
  1111   00291A  0100               	movlb	0	; () banked
  1112   00291C  6FF0               	movwf	send_4_bit_char_data_pos@ret& (0+255),b
  1113   00291E                     l51:
  1114                           
  1115                           ; BSR set to: 0
  1116   00291E  0012               	return		;funcret
  1117   002920                     __end_of_send_4_bit_char_data_pos:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _send_4_bit_char_data *****************
  1121 ;; Defined at:
  1122 ;;		line 61 in file "ECU_layer/LCD/ecu_lcd.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  lcd             2   14[BANK0 ] PTR const struct .
  1125 ;;		 -> lcd_4bit(6), 
  1126 ;;  data            1   16[BANK0 ] unsigned char 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  ret             1   17[BANK0 ] unsigned char 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  1    wreg      unsigned char 
  1131 ;; Registers used:
  1132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1138 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;Total ram usage:        4 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 14
  1145 ;; This function calls:
  1146 ;;		_gpio_pin_write_logic
  1147 ;;		_send_4_bit_enable
  1148 ;;		_send_4_bit_help
  1149 ;; This function is called by:
  1150 ;;		_send_4_bit_char_data_pos
  1151 ;;		_send_4_bit_string_data
  1152 ;;		_send_4_bit_custome_char_data_pos
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text3
  1157   0022F2                     __ptext3:
  1158                           	callstack 0
  1159   0022F2                     _send_4_bit_char_data:
  1160                           	callstack 15
  1161   0022F2                     
  1162                           ;ECU_layer/LCD/ecu_lcd.c: 63:     if(((void*)0) == lcd)
  1163   0022F2  0100               	movlb	0	; () banked
  1164   0022F4  51E2               	movf	send_4_bit_char_data@lcd& (0+255),w,b
  1165   0022F6  11E3               	iorwf	(send_4_bit_char_data@lcd+1)& (0+255),w,b
  1166   0022F8  A4D8               	btfss	status,2,c
  1167   0022FA  EF81  F011         	goto	u2791
  1168   0022FE  EF83  F011         	goto	u2790
  1169   002302                     u2791:
  1170   002302  EF87  F011         	goto	l3237
  1171   002306                     u2790:
  1172   002306                     
  1173                           ; BSR set to: 0
  1174                           ;ECU_layer/LCD/ecu_lcd.c: 64:         ret = (Std_ReturnType)0x00;
  1175   002306  0E00               	movlw	0
  1176   002308  6FE5               	movwf	send_4_bit_char_data@ret& (0+255),b
  1177   00230A  EFB6  F011         	goto	l3239
  1178   00230E                     l3237:
  1179                           
  1180                           ; BSR set to: 0
  1181                           ;ECU_layer/LCD/ecu_lcd.c: 66:     {;ECU_layer/LCD/ecu_lcd.c: 67:         ret = gpio_pin_
      +                          write_logic(&(lcd->rs_lcd),HIGH);
  1182   00230E  C0E2  F0D4         	movff	send_4_bit_char_data@lcd,gpio_pin_write_logic@Pin_Config
  1183   002312  C0E3  F0D5         	movff	send_4_bit_char_data@lcd+1,gpio_pin_write_logic@Pin_Config+1
  1184   002316  0E01               	movlw	1
  1185   002318  6FD6               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1186   00231A  EC5A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1187   00231E  0100               	movlb	0	; () banked
  1188   002320  6FE5               	movwf	send_4_bit_char_data@ret& (0+255),b
  1189                           
  1190                           ;ECU_layer/LCD/ecu_lcd.c: 68:         ret = send_4_bit_help(lcd,data >> 4);
  1191   002322  C0E2  F0DE         	movff	send_4_bit_char_data@lcd,send_4_bit_help@lcd
  1192   002326  C0E3  F0DF         	movff	send_4_bit_char_data@lcd+1,send_4_bit_help@lcd+1
  1193   00232A  39E4               	swapf	send_4_bit_char_data@data& (0+255),w,b
  1194   00232C  0B0F               	andlw	15
  1195   00232E  6FE0               	movwf	send_4_bit_help@data_command& (0+255),b
  1196   002330  ECA9  F010         	call	_send_4_bit_help	;wreg free
  1197   002334  0100               	movlb	0	; () banked
  1198   002336  6FE5               	movwf	send_4_bit_char_data@ret& (0+255),b
  1199                           
  1200                           ;ECU_layer/LCD/ecu_lcd.c: 69:         ret = send_4_bit_enable(lcd);
  1201   002338  C0E2  F0DE         	movff	send_4_bit_char_data@lcd,send_4_bit_enable@lcd
  1202   00233C  C0E3  F0DF         	movff	send_4_bit_char_data@lcd+1,send_4_bit_enable@lcd+1
  1203   002340  ECA7  F013         	call	_send_4_bit_enable	;wreg free
  1204   002344  0100               	movlb	0	; () banked
  1205   002346  6FE5               	movwf	send_4_bit_char_data@ret& (0+255),b
  1206                           
  1207                           ;ECU_layer/LCD/ecu_lcd.c: 70:         ret = send_4_bit_help(lcd,data);
  1208   002348  C0E2  F0DE         	movff	send_4_bit_char_data@lcd,send_4_bit_help@lcd
  1209   00234C  C0E3  F0DF         	movff	send_4_bit_char_data@lcd+1,send_4_bit_help@lcd+1
  1210   002350  C0E4  F0E0         	movff	send_4_bit_char_data@data,send_4_bit_help@data_command
  1211   002354  ECA9  F010         	call	_send_4_bit_help	;wreg free
  1212   002358  0100               	movlb	0	; () banked
  1213   00235A  6FE5               	movwf	send_4_bit_char_data@ret& (0+255),b
  1214                           
  1215                           ;ECU_layer/LCD/ecu_lcd.c: 71:         ret = send_4_bit_enable(lcd);
  1216   00235C  C0E2  F0DE         	movff	send_4_bit_char_data@lcd,send_4_bit_enable@lcd
  1217   002360  C0E3  F0DF         	movff	send_4_bit_char_data@lcd+1,send_4_bit_enable@lcd+1
  1218   002364  ECA7  F013         	call	_send_4_bit_enable	;wreg free
  1219   002368  0100               	movlb	0	; () banked
  1220   00236A  6FE5               	movwf	send_4_bit_char_data@ret& (0+255),b
  1221   00236C                     l3239:
  1222                           
  1223                           ; BSR set to: 0
  1224                           ;ECU_layer/LCD/ecu_lcd.c: 73:              return ret;
  1225   00236C  51E5               	movf	send_4_bit_char_data@ret& (0+255),w,b
  1226   00236E                     
  1227                           ; BSR set to: 0
  1228   00236E  0012               	return		;funcret
  1229   002370                     __end_of_send_4_bit_char_data:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _lcd_4_bit_set_cursor *****************
  1233 ;; Defined at:
  1234 ;;		line 139 in file "ECU_layer/LCD/ecu_lcd.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  lcd             2   18[BANK0 ] PTR const struct .
  1237 ;;		 -> lcd_4bit(6), 
  1238 ;;  row             1   20[BANK0 ] unsigned char 
  1239 ;;  column          1   21[BANK0 ] unsigned char 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;  ret             1   22[BANK0 ] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      unsigned char 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1251 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;Total ram usage:        5 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 15
  1258 ;; This function calls:
  1259 ;;		_send_4_bit_command
  1260 ;; This function is called by:
  1261 ;;		_send_4_bit_char_data_pos
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text4
  1266   0018F6                     __ptext4:
  1267                           	callstack 0
  1268   0018F6                     _lcd_4_bit_set_cursor:
  1269                           	callstack 14
  1270   0018F6                     
  1271                           ;ECU_layer/LCD/ecu_lcd.c: 140:                     Std_ReturnType ret = (Std_ReturnType)
      +                          0x01;
  1272   0018F6  0E01               	movlw	1
  1273   0018F8  0100               	movlb	0	; () banked
  1274   0018FA  6FEA               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  1275   0018FC                     
  1276                           ; BSR set to: 0
  1277                           ;ECU_layer/LCD/ecu_lcd.c: 141:                  column--;
  1278   0018FC  07E9               	decf	lcd_4_bit_set_cursor@column& (0+255),f,b
  1279   0018FE                     
  1280                           ; BSR set to: 0
  1281                           ;ECU_layer/LCD/ecu_lcd.c: 142:     if(((void*)0) == lcd)
  1282   0018FE  51E6               	movf	lcd_4_bit_set_cursor@lcd& (0+255),w,b
  1283   001900  11E7               	iorwf	(lcd_4_bit_set_cursor@lcd+1)& (0+255),w,b
  1284   001902  A4D8               	btfss	status,2,c
  1285   001904  EF86  F00C         	goto	u2801
  1286   001908  EF88  F00C         	goto	u2800
  1287   00190C                     u2801:
  1288   00190C  EF8C  F00C         	goto	l3251
  1289   001910                     u2800:
  1290   001910                     
  1291                           ; BSR set to: 0
  1292                           ;ECU_layer/LCD/ecu_lcd.c: 143:         ret = (Std_ReturnType)0x00;
  1293   001910  0E00               	movlw	0
  1294   001912  6FEA               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  1295   001914  EFE3  F00C         	goto	l3267
  1296   001918                     l3251:
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;ECU_layer/LCD/ecu_lcd.c: 145:     {;ECU_layer/LCD/ecu_lcd.c: 146:         if(row == 1)
  1300   001918  05E8               	decf	lcd_4_bit_set_cursor@row& (0+255),w,b
  1301   00191A  A4D8               	btfss	status,2,c
  1302   00191C  EF92  F00C         	goto	u2811
  1303   001920  EF94  F00C         	goto	u2810
  1304   001924                     u2811:
  1305   001924  EFA1  F00C         	goto	l3255
  1306   001928                     u2810:
  1307   001928                     
  1308                           ; BSR set to: 0
  1309                           ;ECU_layer/LCD/ecu_lcd.c: 147:         {;ECU_layer/LCD/ecu_lcd.c: 148:             ret =
      +                           send_4_bit_command(lcd,(0x80 + column));
  1310   001928  C0E6  F0E2         	movff	lcd_4_bit_set_cursor@lcd,send_4_bit_command@lcd
  1311   00192C  C0E7  F0E3         	movff	lcd_4_bit_set_cursor@lcd+1,send_4_bit_command@lcd+1
  1312   001930  51E9               	movf	lcd_4_bit_set_cursor@column& (0+255),w,b
  1313   001932  0F80               	addlw	128
  1314   001934  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1315   001936  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1316   00193A  0100               	movlb	0	; () banked
  1317   00193C  6FEA               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  1318                           
  1319                           ;ECU_layer/LCD/ecu_lcd.c: 149:         }
  1320   00193E  EFE3  F00C         	goto	l3267
  1321   001942                     l3255:
  1322                           
  1323                           ; BSR set to: 0
  1324   001942  0E02               	movlw	2
  1325   001944  19E8               	xorwf	lcd_4_bit_set_cursor@row& (0+255),w,b
  1326   001946  A4D8               	btfss	status,2,c
  1327   001948  EFA8  F00C         	goto	u2821
  1328   00194C  EFAA  F00C         	goto	u2820
  1329   001950                     u2821:
  1330   001950  EFB7  F00C         	goto	l3259
  1331   001954                     u2820:
  1332   001954                     
  1333                           ; BSR set to: 0
  1334                           ;ECU_layer/LCD/ecu_lcd.c: 151:         {;ECU_layer/LCD/ecu_lcd.c: 152:             ret =
      +                           send_4_bit_command(lcd,(0xC0 + column));
  1335   001954  C0E6  F0E2         	movff	lcd_4_bit_set_cursor@lcd,send_4_bit_command@lcd
  1336   001958  C0E7  F0E3         	movff	lcd_4_bit_set_cursor@lcd+1,send_4_bit_command@lcd+1
  1337   00195C  51E9               	movf	lcd_4_bit_set_cursor@column& (0+255),w,b
  1338   00195E  0FC0               	addlw	192
  1339   001960  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1340   001962  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1341   001966  0100               	movlb	0	; () banked
  1342   001968  6FEA               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  1343                           
  1344                           ;ECU_layer/LCD/ecu_lcd.c: 153:         }
  1345   00196A  EFE3  F00C         	goto	l3267
  1346   00196E                     l3259:
  1347                           
  1348                           ; BSR set to: 0
  1349   00196E  0E03               	movlw	3
  1350   001970  19E8               	xorwf	lcd_4_bit_set_cursor@row& (0+255),w,b
  1351   001972  A4D8               	btfss	status,2,c
  1352   001974  EFBE  F00C         	goto	u2831
  1353   001978  EFC0  F00C         	goto	u2830
  1354   00197C                     u2831:
  1355   00197C  EFCD  F00C         	goto	l3263
  1356   001980                     u2830:
  1357   001980                     
  1358                           ; BSR set to: 0
  1359                           ;ECU_layer/LCD/ecu_lcd.c: 155:             ret = send_4_bit_command(lcd,(0x94 + column))
      +                          ;
  1360   001980  C0E6  F0E2         	movff	lcd_4_bit_set_cursor@lcd,send_4_bit_command@lcd
  1361   001984  C0E7  F0E3         	movff	lcd_4_bit_set_cursor@lcd+1,send_4_bit_command@lcd+1
  1362   001988  51E9               	movf	lcd_4_bit_set_cursor@column& (0+255),w,b
  1363   00198A  0F94               	addlw	148
  1364   00198C  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1365   00198E  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1366   001992  0100               	movlb	0	; () banked
  1367   001994  6FEA               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  1368                           
  1369                           ;ECU_layer/LCD/ecu_lcd.c: 156:         }
  1370   001996  EFE3  F00C         	goto	l3267
  1371   00199A                     l3263:
  1372                           
  1373                           ; BSR set to: 0
  1374   00199A  0E04               	movlw	4
  1375   00199C  19E8               	xorwf	lcd_4_bit_set_cursor@row& (0+255),w,b
  1376   00199E  A4D8               	btfss	status,2,c
  1377   0019A0  EFD4  F00C         	goto	u2841
  1378   0019A4  EFD6  F00C         	goto	u2840
  1379   0019A8                     u2841:
  1380   0019A8  EFE3  F00C         	goto	l78
  1381   0019AC                     u2840:
  1382   0019AC                     
  1383                           ; BSR set to: 0
  1384                           ;ECU_layer/LCD/ecu_lcd.c: 158:             ret = send_4_bit_command(lcd,(0xD4 + column))
      +                          ;
  1385   0019AC  C0E6  F0E2         	movff	lcd_4_bit_set_cursor@lcd,send_4_bit_command@lcd
  1386   0019B0  C0E7  F0E3         	movff	lcd_4_bit_set_cursor@lcd+1,send_4_bit_command@lcd+1
  1387   0019B4  51E9               	movf	lcd_4_bit_set_cursor@column& (0+255),w,b
  1388   0019B6  0FD4               	addlw	212
  1389   0019B8  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1390   0019BA  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1391   0019BE  0100               	movlb	0	; () banked
  1392   0019C0  6FEA               	movwf	lcd_4_bit_set_cursor@ret& (0+255),b
  1393   0019C2  EFE3  F00C         	goto	l3267
  1394   0019C6                     l78:
  1395   0019C6                     l3267:
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;ECU_layer/LCD/ecu_lcd.c: 162:         return ret;
  1399   0019C6  51EA               	movf	lcd_4_bit_set_cursor@ret& (0+255),w,b
  1400   0019C8                     
  1401                           ; BSR set to: 0
  1402   0019C8  0012               	return		;funcret
  1403   0019CA                     __end_of_lcd_4_bit_set_cursor:
  1404                           	callstack 0
  1405                           
  1406 ;; *************** function _application_initialize *****************
  1407 ;; Defined at:
  1408 ;;		line 80 in file "freq_meter.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;Total ram usage:        0 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 16
  1429 ;; This function calls:
  1430 ;;		_Timer0_init
  1431 ;;		_Timer1_init
  1432 ;;		_lcd_pins_4_initialize
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           
  1438                           	psect	text5
  1439   002A7C                     __ptext5:
  1440                           	callstack 0
  1441   002A7C                     _application_initialize:
  1442                           	callstack 14
  1443   002A7C                     
  1444                           ;freq_meter.c: 81:     Timer0_init(&timer0_obj);
  1445   002A7C  0E9E               	movlw	low _timer0_obj
  1446   002A7E  0100               	movlb	0	; () banked
  1447   002A80  6FD7               	movwf	Timer0_init@timer0& (0+255),b
  1448   002A82  0E00               	movlw	high _timer0_obj
  1449   002A84  6FD8               	movwf	(Timer0_init@timer0+1)& (0+255),b
  1450   002A86  EC36  F011         	call	_Timer0_init	;wreg free
  1451                           
  1452                           ;freq_meter.c: 82:     Timer1_init(&timer1_obj);
  1453   002A8A  0ECB               	movlw	low _timer1_obj
  1454   002A8C  0100               	movlb	0	; () banked
  1455   002A8E  6FD7               	movwf	Timer1_init@timer1& (0+255),b
  1456   002A90  0E00               	movlw	high _timer1_obj
  1457   002A92  6FD8               	movwf	(Timer1_init@timer1+1)& (0+255),b
  1458   002A94  EC11  F00E         	call	_Timer1_init	;wreg free
  1459   002A98                     
  1460                           ;freq_meter.c: 83:     lcd_pins_4_initialize(&lcd_4bit);
  1461   002A98  0EA7               	movlw	low _lcd_4bit
  1462   002A9A  0100               	movlb	0	; () banked
  1463   002A9C  6FE6               	movwf	lcd_pins_4_initialize@lcd& (0+255),b
  1464   002A9E  0E00               	movlw	high _lcd_4bit
  1465   002AA0  6FE7               	movwf	(lcd_pins_4_initialize@lcd+1)& (0+255),b
  1466   002AA2  EC92  F009         	call	_lcd_pins_4_initialize	;wreg free
  1467   002AA6  0012               	return		;funcret
  1468   002AA8                     __end_of_application_initialize:
  1469                           	callstack 0
  1470                           
  1471 ;; *************** function _lcd_pins_4_initialize *****************
  1472 ;; Defined at:
  1473 ;;		line 21 in file "ECU_layer/LCD/ecu_lcd.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  lcd             2   18[BANK0 ] PTR const struct .
  1476 ;;		 -> lcd_4bit(6), 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  cnt_pin         1   23[BANK0 ] unsigned char 
  1479 ;;  ret             1   22[BANK0 ] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      unsigned char 
  1482 ;; Registers used:
  1483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1489 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;Total ram usage:        6 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 15
  1496 ;; This function calls:
  1497 ;;		_gpio_pin_intialize
  1498 ;;		_send_4_bit_command
  1499 ;; This function is called by:
  1500 ;;		_application_initialize
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text6
  1505   001324                     __ptext6:
  1506                           	callstack 0
  1507   001324                     _lcd_pins_4_initialize:
  1508                           	callstack 14
  1509   001324                     
  1510                           ;ECU_layer/LCD/ecu_lcd.c: 23:     if(((void*)0) == lcd)
  1511   001324  0100               	movlb	0	; () banked
  1512   001326  51E6               	movf	lcd_pins_4_initialize@lcd& (0+255),w,b
  1513   001328  11E7               	iorwf	(lcd_pins_4_initialize@lcd+1)& (0+255),w,b
  1514   00132A  A4D8               	btfss	status,2,c
  1515   00132C  EF9A  F009         	goto	u2771
  1516   001330  EF9C  F009         	goto	u2770
  1517   001334                     u2771:
  1518   001334  EF9E  F009         	goto	l3193
  1519   001338                     u2770:
  1520   001338                     
  1521                           ; BSR set to: 0
  1522   001338  EF2F  F00A         	goto	l31
  1523   00133C                     l3193:
  1524                           
  1525                           ; BSR set to: 0
  1526                           ;ECU_layer/LCD/ecu_lcd.c: 26:     {;ECU_layer/LCD/ecu_lcd.c: 27:         ret = gpio_pin_
      +                          intialize(&(lcd->rs_lcd));
  1527   00133C  C0E6  F0DE         	movff	lcd_pins_4_initialize@lcd,gpio_pin_intialize@Pin_Config
  1528   001340  C0E7  F0DF         	movff	lcd_pins_4_initialize@lcd+1,gpio_pin_intialize@Pin_Config+1
  1529   001344  EC6E  F012         	call	_gpio_pin_intialize	;wreg free
  1530   001348  0100               	movlb	0	; () banked
  1531   00134A  6FEA               	movwf	lcd_pins_4_initialize@ret& (0+255),b
  1532                           
  1533                           ;ECU_layer/LCD/ecu_lcd.c: 28:         ret = gpio_pin_intialize(&(lcd->en_lcd));
  1534   00134C  0E05               	movlw	5
  1535   00134E  25E6               	addwf	lcd_pins_4_initialize@lcd& (0+255),w,b
  1536   001350  6FDE               	movwf	gpio_pin_intialize@Pin_Config& (0+255),b
  1537   001352  0E00               	movlw	0
  1538   001354  21E7               	addwfc	(lcd_pins_4_initialize@lcd+1)& (0+255),w,b
  1539   001356  6FDF               	movwf	(gpio_pin_intialize@Pin_Config+1)& (0+255),b
  1540   001358  EC6E  F012         	call	_gpio_pin_intialize	;wreg free
  1541   00135C  0100               	movlb	0	; () banked
  1542   00135E  6FEA               	movwf	lcd_pins_4_initialize@ret& (0+255),b
  1543   001360                     
  1544                           ; BSR set to: 0
  1545                           ;ECU_layer/LCD/ecu_lcd.c: 29:         for(uint8 cnt_pin = 0; cnt_pin < 4; cnt_pin++)
  1546   001360  0E00               	movlw	0
  1547   001362  6FEB               	movwf	lcd_pins_4_initialize@cnt_pin& (0+255),b
  1548   001364                     l3201:
  1549                           
  1550                           ; BSR set to: 0
  1551   001364  51EB               	movf	lcd_pins_4_initialize@cnt_pin& (0+255),w,b
  1552   001366  25E6               	addwf	lcd_pins_4_initialize@lcd& (0+255),w,b
  1553   001368  6FE8               	movwf	??_lcd_pins_4_initialize& (0+255),b
  1554   00136A  0E00               	movlw	0
  1555   00136C  21E7               	addwfc	(lcd_pins_4_initialize@lcd+1)& (0+255),w,b
  1556   00136E  6FE9               	movwf	(??_lcd_pins_4_initialize+1)& (0+255),b
  1557   001370  0E01               	movlw	1
  1558   001372  25E8               	addwf	??_lcd_pins_4_initialize& (0+255),w,b
  1559   001374  6FDE               	movwf	gpio_pin_intialize@Pin_Config& (0+255),b
  1560   001376  0E00               	movlw	0
  1561   001378  21E9               	addwfc	(??_lcd_pins_4_initialize+1)& (0+255),w,b
  1562   00137A  6FDF               	movwf	(gpio_pin_intialize@Pin_Config+1)& (0+255),b
  1563   00137C  EC6E  F012         	call	_gpio_pin_intialize	;wreg free
  1564   001380  0100               	movlb	0	; () banked
  1565   001382  2BEB               	incf	lcd_pins_4_initialize@cnt_pin& (0+255),f,b
  1566   001384                     
  1567                           ; BSR set to: 0
  1568   001384  0E03               	movlw	3
  1569   001386  65EB               	cpfsgt	lcd_pins_4_initialize@cnt_pin& (0+255),b
  1570   001388  EFC8  F009         	goto	u2781
  1571   00138C  EFCA  F009         	goto	u2780
  1572   001390                     u2781:
  1573   001390  EFB2  F009         	goto	l3201
  1574   001394                     u2780:
  1575   001394                     
  1576                           ; BSR set to: 0
  1577                           ;ECU_layer/LCD/ecu_lcd.c: 32:         _delay((unsigned long)((20)*(4000000UL/4000.0)));
  1578   001394  0E1A               	movlw	26
  1579   001396  0100               	movlb	0	; () banked
  1580   001398  6FE8               	movwf	??_lcd_pins_4_initialize& (0+255),b
  1581   00139A  0EF8               	movlw	248
  1582   00139C                     u3427:
  1583   00139C  2EE8               	decfsz	wreg,f,c
  1584   00139E  D7FE               	bra	u3427
  1585   0013A0  2FE8               	decfsz	??_lcd_pins_4_initialize& (0+255),f,b
  1586   0013A2  D7FC               	bra	u3427
  1587   0013A4  F000               	nop	
  1588   0013A6  C0E6  F0E2         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1589   0013AA  C0E7  F0E3         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1590   0013AE  0E38               	movlw	56
  1591   0013B0  0100               	movlb	0	; () banked
  1592   0013B2  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1593   0013B4  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1594   0013B8                     
  1595                           ;ECU_layer/LCD/ecu_lcd.c: 34:         _delay((unsigned long)((5)*(4000000UL/4000.0)));
  1596   0013B8  0E07               	movlw	7
  1597   0013BA  0100               	movlb	0	; () banked
  1598   0013BC  6FE8               	movwf	??_lcd_pins_4_initialize& (0+255),b
  1599   0013BE  0E7D               	movlw	125
  1600   0013C0                     u3437:
  1601   0013C0  2EE8               	decfsz	wreg,f,c
  1602   0013C2  D7FE               	bra	u3437
  1603   0013C4  2FE8               	decfsz	??_lcd_pins_4_initialize& (0+255),f,b
  1604   0013C6  D7FC               	bra	u3437
  1605   0013C8  C0E6  F0E2         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1606   0013CC  C0E7  F0E3         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1607   0013D0  0E38               	movlw	56
  1608   0013D2  0100               	movlb	0	; () banked
  1609   0013D4  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1610   0013D6  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1611   0013DA                     
  1612                           ;ECU_layer/LCD/ecu_lcd.c: 36:         _delay((unsigned long)((150)*(4000000UL/4000000.0)
      +                          ));
  1613   0013DA  0E32               	movlw	50
  1614   0013DC                     u3447:
  1615   0013DC  2EE8               	decfsz	wreg,f,c
  1616   0013DE  D7FE               	bra	u3447
  1617   0013E0  C0E6  F0E2         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1618   0013E4  C0E7  F0E3         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1619   0013E8  0E38               	movlw	56
  1620   0013EA  0100               	movlb	0	; () banked
  1621   0013EC  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1622   0013EE  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1623   0013F2  C0E6  F0E2         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1624   0013F6  C0E7  F0E3         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1625   0013FA  0E01               	movlw	1
  1626   0013FC  0100               	movlb	0	; () banked
  1627   0013FE  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1628   001400  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1629   001404  C0E6  F0E2         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1630   001408  C0E7  F0E3         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1631   00140C  0E02               	movlw	2
  1632   00140E  0100               	movlb	0	; () banked
  1633   001410  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1634   001412  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1635   001416  C0E6  F0E2         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1636   00141A  C0E7  F0E3         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1637   00141E  0E06               	movlw	6
  1638   001420  0100               	movlb	0	; () banked
  1639   001422  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1640   001424  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1641   001428  C0E6  F0E2         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1642   00142C  C0E7  F0E3         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1643   001430  0E0C               	movlw	12
  1644   001432  0100               	movlb	0	; () banked
  1645   001434  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1646   001436  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1647   00143A  C0E6  F0E2         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1648   00143E  C0E7  F0E3         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1649   001442  0E28               	movlw	40
  1650   001444  0100               	movlb	0	; () banked
  1651   001446  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1652   001448  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1653   00144C                     
  1654                           ;ECU_layer/LCD/ecu_lcd.c: 43:         send_4_bit_command(lcd, 0x80);
  1655   00144C  C0E6  F0E2         	movff	lcd_pins_4_initialize@lcd,send_4_bit_command@lcd
  1656   001450  C0E7  F0E3         	movff	lcd_pins_4_initialize@lcd+1,send_4_bit_command@lcd+1
  1657   001454  0E80               	movlw	128
  1658   001456  0100               	movlb	0	; () banked
  1659   001458  6FE4               	movwf	send_4_bit_command@command& (0+255),b
  1660   00145A  ECB8  F011         	call	_send_4_bit_command	;wreg free
  1661   00145E                     l31:
  1662   00145E  0012               	return		;funcret
  1663   001460                     __end_of_lcd_pins_4_initialize:
  1664                           	callstack 0
  1665                           
  1666 ;; *************** function _send_4_bit_command *****************
  1667 ;; Defined at:
  1668 ;;		line 47 in file "ECU_layer/LCD/ecu_lcd.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;  lcd             2   14[BANK0 ] PTR const struct .
  1671 ;;		 -> lcd_4bit(6), 
  1672 ;;  command         1   16[BANK0 ] unsigned char 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  ret             1   17[BANK0 ] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  1    wreg      unsigned char 
  1677 ;; Registers used:
  1678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1684 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;Total ram usage:        4 bytes
  1689 ;; Hardware stack levels used: 1
  1690 ;; Hardware stack levels required when called: 14
  1691 ;; This function calls:
  1692 ;;		_gpio_pin_write_logic
  1693 ;;		_send_4_bit_enable
  1694 ;;		_send_4_bit_help
  1695 ;; This function is called by:
  1696 ;;		_lcd_pins_4_initialize
  1697 ;;		_lcd_4_bit_set_cursor
  1698 ;;		_send_4_bit_custome_char_data_pos
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text7
  1703   002370                     __ptext7:
  1704                           	callstack 0
  1705   002370                     _send_4_bit_command:
  1706                           	callstack 14
  1707   002370                     
  1708                           ;ECU_layer/LCD/ecu_lcd.c: 49:     if(((void*)0) == lcd)
  1709   002370  0100               	movlb	0	; () banked
  1710   002372  51E2               	movf	send_4_bit_command@lcd& (0+255),w,b
  1711   002374  11E3               	iorwf	(send_4_bit_command@lcd+1)& (0+255),w,b
  1712   002376  A4D8               	btfss	status,2,c
  1713   002378  EFC0  F011         	goto	u2451
  1714   00237C  EFC2  F011         	goto	u2450
  1715   002380                     u2451:
  1716   002380  EFC6  F011         	goto	l2993
  1717   002384                     u2450:
  1718   002384                     
  1719                           ; BSR set to: 0
  1720                           ;ECU_layer/LCD/ecu_lcd.c: 50:         ret = (Std_ReturnType)0x00;
  1721   002384  0E00               	movlw	0
  1722   002386  6FE5               	movwf	send_4_bit_command@ret& (0+255),b
  1723   002388  EFF5  F011         	goto	l2995
  1724   00238C                     l2993:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;ECU_layer/LCD/ecu_lcd.c: 52:     {;ECU_layer/LCD/ecu_lcd.c: 53:         ret = gpio_pin_
      +                          write_logic(&(lcd->rs_lcd),LOW);
  1728   00238C  C0E2  F0D4         	movff	send_4_bit_command@lcd,gpio_pin_write_logic@Pin_Config
  1729   002390  C0E3  F0D5         	movff	send_4_bit_command@lcd+1,gpio_pin_write_logic@Pin_Config+1
  1730   002394  0E00               	movlw	0
  1731   002396  6FD6               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1732   002398  EC5A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1733   00239C  0100               	movlb	0	; () banked
  1734   00239E  6FE5               	movwf	send_4_bit_command@ret& (0+255),b
  1735                           
  1736                           ;ECU_layer/LCD/ecu_lcd.c: 54:         ret = send_4_bit_help(lcd,command >> 4);
  1737   0023A0  C0E2  F0DE         	movff	send_4_bit_command@lcd,send_4_bit_help@lcd
  1738   0023A4  C0E3  F0DF         	movff	send_4_bit_command@lcd+1,send_4_bit_help@lcd+1
  1739   0023A8  39E4               	swapf	send_4_bit_command@command& (0+255),w,b
  1740   0023AA  0B0F               	andlw	15
  1741   0023AC  6FE0               	movwf	send_4_bit_help@data_command& (0+255),b
  1742   0023AE  ECA9  F010         	call	_send_4_bit_help	;wreg free
  1743   0023B2  0100               	movlb	0	; () banked
  1744   0023B4  6FE5               	movwf	send_4_bit_command@ret& (0+255),b
  1745                           
  1746                           ;ECU_layer/LCD/ecu_lcd.c: 55:         ret = send_4_bit_enable(lcd);
  1747   0023B6  C0E2  F0DE         	movff	send_4_bit_command@lcd,send_4_bit_enable@lcd
  1748   0023BA  C0E3  F0DF         	movff	send_4_bit_command@lcd+1,send_4_bit_enable@lcd+1
  1749   0023BE  ECA7  F013         	call	_send_4_bit_enable	;wreg free
  1750   0023C2  0100               	movlb	0	; () banked
  1751   0023C4  6FE5               	movwf	send_4_bit_command@ret& (0+255),b
  1752                           
  1753                           ;ECU_layer/LCD/ecu_lcd.c: 56:         ret = send_4_bit_help(lcd,command);
  1754   0023C6  C0E2  F0DE         	movff	send_4_bit_command@lcd,send_4_bit_help@lcd
  1755   0023CA  C0E3  F0DF         	movff	send_4_bit_command@lcd+1,send_4_bit_help@lcd+1
  1756   0023CE  C0E4  F0E0         	movff	send_4_bit_command@command,send_4_bit_help@data_command
  1757   0023D2  ECA9  F010         	call	_send_4_bit_help	;wreg free
  1758   0023D6  0100               	movlb	0	; () banked
  1759   0023D8  6FE5               	movwf	send_4_bit_command@ret& (0+255),b
  1760                           
  1761                           ;ECU_layer/LCD/ecu_lcd.c: 57:         ret = send_4_bit_enable(lcd);
  1762   0023DA  C0E2  F0DE         	movff	send_4_bit_command@lcd,send_4_bit_enable@lcd
  1763   0023DE  C0E3  F0DF         	movff	send_4_bit_command@lcd+1,send_4_bit_enable@lcd+1
  1764   0023E2  ECA7  F013         	call	_send_4_bit_enable	;wreg free
  1765   0023E6  0100               	movlb	0	; () banked
  1766   0023E8  6FE5               	movwf	send_4_bit_command@ret& (0+255),b
  1767   0023EA                     l2995:
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;ECU_layer/LCD/ecu_lcd.c: 59:              return ret;
  1771   0023EA  51E5               	movf	send_4_bit_command@ret& (0+255),w,b
  1772   0023EC                     
  1773                           ; BSR set to: 0
  1774   0023EC  0012               	return		;funcret
  1775   0023EE                     __end_of_send_4_bit_command:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _send_4_bit_help *****************
  1779 ;; Defined at:
  1780 ;;		line 125 in file "ECU_layer/LCD/ecu_lcd.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  lcd             2   10[BANK0 ] PTR const struct .
  1783 ;;		 -> lcd_4bit(6), 
  1784 ;;  data_command    1   12[BANK0 ] unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  ret             1   13[BANK0 ] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      unsigned char 
  1789 ;; Registers used:
  1790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1796 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1799 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1800 ;;Total ram usage:        4 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; Hardware stack levels required when called: 13
  1803 ;; This function calls:
  1804 ;;		_gpio_pin_write_logic
  1805 ;; This function is called by:
  1806 ;;		_send_4_bit_command
  1807 ;;		_send_4_bit_char_data
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text8
  1812   002152                     __ptext8:
  1813                           	callstack 0
  1814   002152                     _send_4_bit_help:
  1815                           	callstack 15
  1816   002152                     
  1817                           ;ECU_layer/LCD/ecu_lcd.c: 127:     if(((void*)0) == lcd)
  1818   002152  0100               	movlb	0	; () banked
  1819   002154  51DE               	movf	send_4_bit_help@lcd& (0+255),w,b
  1820   002156  11DF               	iorwf	(send_4_bit_help@lcd+1)& (0+255),w,b
  1821   002158  A4D8               	btfss	status,2,c
  1822   00215A  EFB1  F010         	goto	u2231
  1823   00215E  EFB3  F010         	goto	u2230
  1824   002162                     u2231:
  1825   002162  EFB7  F010         	goto	l2835
  1826   002166                     u2230:
  1827   002166                     
  1828                           ; BSR set to: 0
  1829                           ;ECU_layer/LCD/ecu_lcd.c: 128:         ret = (Std_ReturnType)0x00;
  1830   002166  0E00               	movlw	0
  1831   002168  6FE1               	movwf	send_4_bit_help@ret& (0+255),b
  1832   00216A  EFF0  F010         	goto	l2837
  1833   00216E                     l2835:
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;ECU_layer/LCD/ecu_lcd.c: 130:     {;ECU_layer/LCD/ecu_lcd.c: 131:            ret = gpio
      +                          _pin_write_logic(&(lcd->lcd_pin[0]),((data_command >> 0)& (uint8)0x01));
  1837   00216E  0E01               	movlw	1
  1838   002170  25DE               	addwf	send_4_bit_help@lcd& (0+255),w,b
  1839   002172  6FD4               	movwf	gpio_pin_write_logic@Pin_Config& (0+255),b
  1840   002174  0E00               	movlw	0
  1841   002176  21DF               	addwfc	(send_4_bit_help@lcd+1)& (0+255),w,b
  1842   002178  6FD5               	movwf	(gpio_pin_write_logic@Pin_Config+1)& (0+255),b
  1843   00217A  51E0               	movf	send_4_bit_help@data_command& (0+255),w,b
  1844   00217C  0B01               	andlw	1
  1845   00217E  6FD6               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1846   002180  EC5A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1847   002184  0100               	movlb	0	; () banked
  1848   002186  6FE1               	movwf	send_4_bit_help@ret& (0+255),b
  1849                           
  1850                           ;ECU_layer/LCD/ecu_lcd.c: 132:            ret = gpio_pin_write_logic(&(lcd->lcd_pin[1]),
      +                          ((data_command >> 1)& (uint8)0x01));
  1851   002188  0E02               	movlw	2
  1852   00218A  25DE               	addwf	send_4_bit_help@lcd& (0+255),w,b
  1853   00218C  6FD4               	movwf	gpio_pin_write_logic@Pin_Config& (0+255),b
  1854   00218E  0E00               	movlw	0
  1855   002190  21DF               	addwfc	(send_4_bit_help@lcd+1)& (0+255),w,b
  1856   002192  6FD5               	movwf	(gpio_pin_write_logic@Pin_Config+1)& (0+255),b
  1857   002194  90D8               	bcf	status,0,c
  1858   002196  31E0               	rrcf	send_4_bit_help@data_command& (0+255),w,b
  1859   002198  0B01               	andlw	1
  1860   00219A  6FD6               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1861   00219C  EC5A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1862   0021A0  0100               	movlb	0	; () banked
  1863   0021A2  6FE1               	movwf	send_4_bit_help@ret& (0+255),b
  1864                           
  1865                           ;ECU_layer/LCD/ecu_lcd.c: 133:            ret = gpio_pin_write_logic(&(lcd->lcd_pin[2]),
      +                          ((data_command >> 2)& (uint8)0x01));
  1866   0021A4  0E03               	movlw	3
  1867   0021A6  25DE               	addwf	send_4_bit_help@lcd& (0+255),w,b
  1868   0021A8  6FD4               	movwf	gpio_pin_write_logic@Pin_Config& (0+255),b
  1869   0021AA  0E00               	movlw	0
  1870   0021AC  21DF               	addwfc	(send_4_bit_help@lcd+1)& (0+255),w,b
  1871   0021AE  6FD5               	movwf	(gpio_pin_write_logic@Pin_Config+1)& (0+255),b
  1872   0021B0  41E0               	rrncf	send_4_bit_help@data_command& (0+255),w,b
  1873   0021B2  42E8               	rrncf	wreg,f,c
  1874   0021B4  0B3F               	andlw	63
  1875   0021B6  0B01               	andlw	1
  1876   0021B8  6FD6               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1877   0021BA  EC5A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1878   0021BE  0100               	movlb	0	; () banked
  1879   0021C0  6FE1               	movwf	send_4_bit_help@ret& (0+255),b
  1880                           
  1881                           ;ECU_layer/LCD/ecu_lcd.c: 134:            ret = gpio_pin_write_logic(&(lcd->lcd_pin[3]),
      +                          ((data_command >> 3)& (uint8)0x01));
  1882   0021C2  0E04               	movlw	4
  1883   0021C4  25DE               	addwf	send_4_bit_help@lcd& (0+255),w,b
  1884   0021C6  6FD4               	movwf	gpio_pin_write_logic@Pin_Config& (0+255),b
  1885   0021C8  0E00               	movlw	0
  1886   0021CA  21DF               	addwfc	(send_4_bit_help@lcd+1)& (0+255),w,b
  1887   0021CC  6FD5               	movwf	(gpio_pin_write_logic@Pin_Config+1)& (0+255),b
  1888   0021CE  39E0               	swapf	send_4_bit_help@data_command& (0+255),w,b
  1889   0021D0  46E8               	rlncf	wreg,f,c
  1890   0021D2  0B1F               	andlw	31
  1891   0021D4  0B01               	andlw	1
  1892   0021D6  6FD6               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1893   0021D8  EC5A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1894   0021DC  0100               	movlb	0	; () banked
  1895   0021DE  6FE1               	movwf	send_4_bit_help@ret& (0+255),b
  1896   0021E0                     l2837:
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;ECU_layer/LCD/ecu_lcd.c: 136:              return ret;
  1900   0021E0  51E1               	movf	send_4_bit_help@ret& (0+255),w,b
  1901   0021E2                     
  1902                           ; BSR set to: 0
  1903   0021E2  0012               	return		;funcret
  1904   0021E4                     __end_of_send_4_bit_help:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _send_4_bit_enable *****************
  1908 ;; Defined at:
  1909 ;;		line 75 in file "ECU_layer/LCD/ecu_lcd.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  lcd             2   10[BANK0 ] PTR const struct .
  1912 ;;		 -> lcd_4bit(6), 
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;  ret             1   12[BANK0 ] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      unsigned char 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1924 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;Total ram usage:        3 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 13
  1931 ;; This function calls:
  1932 ;;		_gpio_pin_write_logic
  1933 ;; This function is called by:
  1934 ;;		_send_4_bit_command
  1935 ;;		_send_4_bit_char_data
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text9
  1940   00274E                     __ptext9:
  1941                           	callstack 0
  1942   00274E                     _send_4_bit_enable:
  1943                           	callstack 15
  1944   00274E                     
  1945                           ;ECU_layer/LCD/ecu_lcd.c: 77:     if(((void*)0) == lcd)
  1946   00274E  0100               	movlb	0	; () banked
  1947   002750  51DE               	movf	send_4_bit_enable@lcd& (0+255),w,b
  1948   002752  11DF               	iorwf	(send_4_bit_enable@lcd+1)& (0+255),w,b
  1949   002754  A4D8               	btfss	status,2,c
  1950   002756  EFAF  F013         	goto	u2241
  1951   00275A  EFB1  F013         	goto	u2240
  1952   00275E                     u2241:
  1953   00275E  EFB5  F013         	goto	l2847
  1954   002762                     u2240:
  1955   002762                     
  1956                           ; BSR set to: 0
  1957                           ;ECU_layer/LCD/ecu_lcd.c: 78:         ret = (Std_ReturnType)0x00;
  1958   002762  0E00               	movlw	0
  1959   002764  6FE0               	movwf	send_4_bit_enable@ret& (0+255),b
  1960   002766  EFCF  F013         	goto	l2851
  1961   00276A                     l2847:
  1962                           
  1963                           ; BSR set to: 0
  1964   00276A  0E05               	movlw	5
  1965   00276C  25DE               	addwf	send_4_bit_enable@lcd& (0+255),w,b
  1966   00276E  6FD4               	movwf	gpio_pin_write_logic@Pin_Config& (0+255),b
  1967   002770  0E00               	movlw	0
  1968   002772  21DF               	addwfc	(send_4_bit_enable@lcd+1)& (0+255),w,b
  1969   002774  6FD5               	movwf	(gpio_pin_write_logic@Pin_Config+1)& (0+255),b
  1970   002776  0E01               	movlw	1
  1971   002778  6FD6               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1972   00277A  EC5A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1973   00277E                     
  1974                           ;ECU_layer/LCD/ecu_lcd.c: 82:         _delay((unsigned long)((5)*(4000000UL/4000000.0)))
      +                          ;
  1975   00277E  D000               	nop2		;2 cycle nop
  1976   002780  D000               	nop2		;2 cycle nop
  1977   002782  F000               	nop	
  1978                           
  1979                           ;ECU_layer/LCD/ecu_lcd.c: 83:         ret = gpio_pin_write_logic(&(lcd->en_lcd),LOW);
  1980   002784  0E05               	movlw	5
  1981   002786  0100               	movlb	0	; () banked
  1982   002788  25DE               	addwf	send_4_bit_enable@lcd& (0+255),w,b
  1983   00278A  6FD4               	movwf	gpio_pin_write_logic@Pin_Config& (0+255),b
  1984   00278C  0E00               	movlw	0
  1985   00278E  21DF               	addwfc	(send_4_bit_enable@lcd+1)& (0+255),w,b
  1986   002790  6FD5               	movwf	(gpio_pin_write_logic@Pin_Config+1)& (0+255),b
  1987   002792  0E00               	movlw	0
  1988   002794  6FD6               	movwf	gpio_pin_write_logic@logic& (0+255),b
  1989   002796  EC5A  F00B         	call	_gpio_pin_write_logic	;wreg free
  1990   00279A  0100               	movlb	0	; () banked
  1991   00279C  6FE0               	movwf	send_4_bit_enable@ret& (0+255),b
  1992   00279E                     l2851:
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;ECU_layer/LCD/ecu_lcd.c: 85:         return ret;
  1996   00279E  51E0               	movf	send_4_bit_enable@ret& (0+255),w,b
  1997   0027A0                     
  1998                           ; BSR set to: 0
  1999   0027A0  0012               	return		;funcret
  2000   0027A2                     __end_of_send_4_bit_enable:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _gpio_pin_intialize *****************
  2004 ;; Defined at:
  2005 ;;		line 136 in file "MCAL_layer/GPIO/gpio.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  Pin_Config      2   10[BANK0 ] PTR const struct .
  2008 ;;		 -> lcd_4bit.lcd_pin(4), lcd_4bit(6), 
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;  ret             1   13[BANK0 ] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      unsigned char 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;Total ram usage:        4 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 13
  2027 ;; This function calls:
  2028 ;;		_gpio_pin_direction_intialize
  2029 ;;		_gpio_pin_write_logic
  2030 ;; This function is called by:
  2031 ;;		_lcd_pins_4_initialize
  2032 ;;		_lcd_pins_8_initialize
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text10
  2037   0024DC                     __ptext10:
  2038                           	callstack 0
  2039   0024DC                     _gpio_pin_intialize:
  2040                           	callstack 15
  2041   0024DC                     
  2042                           ;MCAL_layer/GPIO/gpio.c: 138:     if(((void*)0) == Pin_Config || Pin_Config->pin > 8)
  2043   0024DC  0100               	movlb	0	; () banked
  2044   0024DE  51DE               	movf	gpio_pin_intialize@Pin_Config& (0+255),w,b
  2045   0024E0  11DF               	iorwf	(gpio_pin_intialize@Pin_Config+1)& (0+255),w,b
  2046   0024E2  B4D8               	btfsc	status,2,c
  2047   0024E4  EF76  F012         	goto	u2431
  2048   0024E8  EF78  F012         	goto	u2430
  2049   0024EC                     u2431:
  2050   0024EC  EF89  F012         	goto	l2979
  2051   0024F0                     u2430:
  2052   0024F0                     
  2053                           ; BSR set to: 0
  2054   0024F0  C0DE  FFD9         	movff	gpio_pin_intialize@Pin_Config,fsr2l
  2055   0024F4  C0DF  FFDA         	movff	gpio_pin_intialize@Pin_Config+1,fsr2h
  2056   0024F8  30DF               	rrcf	223,w,c
  2057   0024FA  32E8               	rrcf	wreg,f,c
  2058   0024FC  32E8               	rrcf	wreg,f,c
  2059   0024FE  0B07               	andlw	7
  2060   002500  6FE0               	movwf	??_gpio_pin_intialize& (0+255),b
  2061   002502  0E08               	movlw	8
  2062   002504  65E0               	cpfsgt	??_gpio_pin_intialize& (0+255),b
  2063   002506  EF87  F012         	goto	u2441
  2064   00250A  EF89  F012         	goto	u2440
  2065   00250E                     u2441:
  2066   00250E  EF8D  F012         	goto	l2981
  2067   002512                     u2440:
  2068   002512                     l2979:
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;MCAL_layer/GPIO/gpio.c: 139:         ret = (Std_ReturnType)0x00;
  2072   002512  0E00               	movlw	0
  2073   002514  6FE1               	movwf	gpio_pin_intialize@ret& (0+255),b
  2074   002516  EFA5  F012         	goto	l2983
  2075   00251A                     l2981:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;MCAL_layer/GPIO/gpio.c: 141:     {;MCAL_layer/GPIO/gpio.c: 142:        ret = gpio_pin_d
      +                          irection_intialize(Pin_Config);
  2079   00251A  C0DE  F0D4         	movff	gpio_pin_intialize@Pin_Config,gpio_pin_direction_intialize@Pin_Config
  2080   00251E  C0DF  F0D5         	movff	gpio_pin_intialize@Pin_Config+1,gpio_pin_direction_intialize@Pin_Config+1
  2081   002522  EC30  F00A         	call	_gpio_pin_direction_intialize	;wreg free
  2082   002526  0100               	movlb	0	; () banked
  2083   002528  6FE1               	movwf	gpio_pin_intialize@ret& (0+255),b
  2084                           
  2085                           ;MCAL_layer/GPIO/gpio.c: 143:        ret = gpio_pin_write_logic(Pin_Config,Pin_Config->l
      +                          ogic);
  2086   00252A  C0DE  F0D4         	movff	gpio_pin_intialize@Pin_Config,gpio_pin_write_logic@Pin_Config
  2087   00252E  C0DF  F0D5         	movff	gpio_pin_intialize@Pin_Config+1,gpio_pin_write_logic@Pin_Config+1
  2088   002532  C0DE  FFD9         	movff	gpio_pin_intialize@Pin_Config,fsr2l
  2089   002536  C0DF  FFDA         	movff	gpio_pin_intialize@Pin_Config+1,fsr2h
  2090   00253A  0E00               	movlw	0
  2091   00253C  BEDF               	btfsc	indf2,7,c
  2092   00253E  0E01               	movlw	1
  2093   002540  6FD6               	movwf	gpio_pin_write_logic@logic& (0+255),b
  2094   002542  EC5A  F00B         	call	_gpio_pin_write_logic	;wreg free
  2095   002546  0100               	movlb	0	; () banked
  2096   002548  6FE1               	movwf	gpio_pin_intialize@ret& (0+255),b
  2097   00254A                     l2983:
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;MCAL_layer/GPIO/gpio.c: 146:         return ret;
  2101   00254A  51E1               	movf	gpio_pin_intialize@ret& (0+255),w,b
  2102   00254C                     
  2103                           ; BSR set to: 0
  2104   00254C  0012               	return		;funcret
  2105   00254E                     __end_of_gpio_pin_intialize:
  2106                           	callstack 0
  2107                           
  2108 ;; *************** function _gpio_pin_write_logic *****************
  2109 ;; Defined at:
  2110 ;;		line 75 in file "MCAL_layer/GPIO/gpio.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  Pin_Config      2    0[BANK0 ] PTR const struct .
  2113 ;;		 -> lcd_4bit.lcd_pin(4), lcd_4bit(6), 
  2114 ;;  logic           1    2[BANK0 ] enum E2968
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  ret             1    9[BANK0 ] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      unsigned char 
  2119 ;; Registers used:
  2120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2126 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;Total ram usage:       10 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; Hardware stack levels required when called: 12
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_send_4_bit_command
  2137 ;;		_send_4_bit_char_data
  2138 ;;		_send_4_bit_enable
  2139 ;;		_send_4_bit_help
  2140 ;;		_gpio_pin_intialize
  2141 ;;		_send_8_bit_command
  2142 ;;		_send_8_bit_char_data
  2143 ;;		_send_8_bit_enable
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text11
  2148   0016B4                     __ptext11:
  2149                           	callstack 0
  2150   0016B4                     _gpio_pin_write_logic:
  2151                           	callstack 15
  2152   0016B4                     
  2153                           ;MCAL_layer/GPIO/gpio.c: 76:      Std_ReturnType ret = (Std_ReturnType)0x01;
  2154   0016B4  0E01               	movlw	1
  2155   0016B6  0100               	movlb	0	; () banked
  2156   0016B8  6FDD               	movwf	gpio_pin_write_logic@ret& (0+255),b
  2157   0016BA                     
  2158                           ; BSR set to: 0
  2159                           ;MCAL_layer/GPIO/gpio.c: 77:     if(((void*)0) == Pin_Config || Pin_Config->pin > 8)
  2160   0016BA  51D4               	movf	gpio_pin_write_logic@Pin_Config& (0+255),w,b
  2161   0016BC  11D5               	iorwf	(gpio_pin_write_logic@Pin_Config+1)& (0+255),w,b
  2162   0016BE  B4D8               	btfsc	status,2,c
  2163   0016C0  EF64  F00B         	goto	u2151
  2164   0016C4  EF66  F00B         	goto	u2150
  2165   0016C8                     u2151:
  2166   0016C8  EF77  F00B         	goto	l2793
  2167   0016CC                     u2150:
  2168   0016CC                     
  2169                           ; BSR set to: 0
  2170   0016CC  C0D4  FFD9         	movff	gpio_pin_write_logic@Pin_Config,fsr2l
  2171   0016D0  C0D5  FFDA         	movff	gpio_pin_write_logic@Pin_Config+1,fsr2h
  2172   0016D4  30DF               	rrcf	223,w,c
  2173   0016D6  32E8               	rrcf	wreg,f,c
  2174   0016D8  32E8               	rrcf	wreg,f,c
  2175   0016DA  0B07               	andlw	7
  2176   0016DC  6FD7               	movwf	??_gpio_pin_write_logic& (0+255),b
  2177   0016DE  0E08               	movlw	8
  2178   0016E0  65D7               	cpfsgt	??_gpio_pin_write_logic& (0+255),b
  2179   0016E2  EF75  F00B         	goto	u2161
  2180   0016E6  EF77  F00B         	goto	u2160
  2181   0016EA                     u2161:
  2182   0016EA  EF7B  F00B         	goto	l2795
  2183   0016EE                     u2160:
  2184   0016EE                     l2793:
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;MCAL_layer/GPIO/gpio.c: 78:         ret = (Std_ReturnType)0x00;
  2188   0016EE  0E00               	movlw	0
  2189   0016F0  6FDD               	movwf	gpio_pin_write_logic@ret& (0+255),b
  2190   0016F2  EFEA  F00B         	goto	l247
  2191   0016F6                     l2795:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         if(logic == HIGH)
  2195   0016F6  05D6               	decf	gpio_pin_write_logic@logic& (0+255),w,b
  2196   0016F8  A4D8               	btfss	status,2,c
  2197   0016FA  EF81  F00B         	goto	u2171
  2198   0016FE  EF83  F00B         	goto	u2170
  2199   001702                     u2171:
  2200   001702  EFB2  F00B         	goto	l2799
  2201   001706                     u2170:
  2202   001706                     
  2203                           ; BSR set to: 0
  2204                           ;MCAL_layer/GPIO/gpio.c: 82:             (*lat_reg[Pin_Config->port] |= ((uint8)1 << Pin
      +                          _Config->pin));
  2205   001706  C0D4  FFD9         	movff	gpio_pin_write_logic@Pin_Config,fsr2l
  2206   00170A  C0D5  FFDA         	movff	gpio_pin_write_logic@Pin_Config+1,fsr2h
  2207   00170E  30DF               	rrcf	223,w,c
  2208   001710  32E8               	rrcf	wreg,f,c
  2209   001712  32E8               	rrcf	wreg,f,c
  2210   001714  0B07               	andlw	7
  2211   001716  6FD7               	movwf	??_gpio_pin_write_logic& (0+255),b
  2212   001718  0E01               	movlw	1
  2213   00171A  6FD8               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  2214   00171C  2BD7               	incf	??_gpio_pin_write_logic& (0+255),f,b
  2215   00171E  EF93  F00B         	goto	u2184
  2216   001722                     u2185:
  2217   001722  90D8               	bcf	status,0,c
  2218   001724  37D8               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  2219   001726                     u2184:
  2220   001726  2FD7               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  2221   001728  EF91  F00B         	goto	u2185
  2222   00172C  C0D4  FFD9         	movff	gpio_pin_write_logic@Pin_Config,fsr2l
  2223   001730  C0D5  FFDA         	movff	gpio_pin_write_logic@Pin_Config+1,fsr2h
  2224   001734  50DF               	movf	223,w,c
  2225   001736  0B07               	andlw	7
  2226   001738  0100               	movlb	0	; () banked
  2227   00173A  6FD9               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
  2228   00173C  51D9               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
  2229   00173E  0D02               	mullw	2
  2230   001740  0E8A               	movlw	low _lat_reg
  2231   001742  24F3               	addwf	243,w,c
  2232   001744  6ED9               	movwf	fsr2l,c
  2233   001746  0E00               	movlw	high _lat_reg
  2234   001748  20F4               	addwfc	prodh,w,c
  2235   00174A  6EDA               	movwf	fsr2h,c
  2236   00174C  CFDE F0DA          	movff	postinc2,??_gpio_pin_write_logic+3
  2237   001750  CFDD F0DB          	movff	postdec2,??_gpio_pin_write_logic+4
  2238   001754  C0DA  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  2239   001758  C0DB  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  2240   00175C  51D8               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  2241   00175E  12DF               	iorwf	indf2,f,c
  2242   001760  EFEA  F00B         	goto	l247
  2243   001764                     l2799:
  2244                           
  2245                           ; BSR set to: 0
  2246   001764  C0D4  FFD9         	movff	gpio_pin_write_logic@Pin_Config,fsr2l
  2247   001768  C0D5  FFDA         	movff	gpio_pin_write_logic@Pin_Config+1,fsr2h
  2248   00176C  30DF               	rrcf	223,w,c
  2249   00176E  32E8               	rrcf	wreg,f,c
  2250   001770  32E8               	rrcf	wreg,f,c
  2251   001772  0B07               	andlw	7
  2252   001774  6FD7               	movwf	??_gpio_pin_write_logic& (0+255),b
  2253   001776  0E01               	movlw	1
  2254   001778  6FD8               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
  2255   00177A  2BD7               	incf	??_gpio_pin_write_logic& (0+255),f,b
  2256   00177C  EFC2  F00B         	goto	u2194
  2257   001780                     u2195:
  2258   001780  90D8               	bcf	status,0,c
  2259   001782  37D8               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
  2260   001784                     u2194:
  2261   001784  2FD7               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
  2262   001786  EFC0  F00B         	goto	u2195
  2263   00178A  0100               	movlb	0	; () banked
  2264   00178C  51D8               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
  2265   00178E  0AFF               	xorlw	255
  2266   001790  6FD9               	movwf	(??_gpio_pin_write_logic+2)& (0+255),b
  2267   001792  C0D4  FFD9         	movff	gpio_pin_write_logic@Pin_Config,fsr2l
  2268   001796  C0D5  FFDA         	movff	gpio_pin_write_logic@Pin_Config+1,fsr2h
  2269   00179A  50DF               	movf	223,w,c
  2270   00179C  0B07               	andlw	7
  2271   00179E  6FDA               	movwf	(??_gpio_pin_write_logic+3)& (0+255),b
  2272   0017A0  51DA               	movf	(??_gpio_pin_write_logic+3)& (0+255),w,b
  2273   0017A2  0D02               	mullw	2
  2274   0017A4  0E8A               	movlw	low _lat_reg
  2275   0017A6  24F3               	addwf	243,w,c
  2276   0017A8  6ED9               	movwf	fsr2l,c
  2277   0017AA  0E00               	movlw	high _lat_reg
  2278   0017AC  20F4               	addwfc	prodh,w,c
  2279   0017AE  6EDA               	movwf	fsr2h,c
  2280   0017B0  CFDE F0DB          	movff	postinc2,??_gpio_pin_write_logic+4
  2281   0017B4  CFDD F0DC          	movff	postdec2,??_gpio_pin_write_logic+5
  2282   0017B8  C0DB  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  2283   0017BC  C0DC  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  2284   0017C0  51D9               	movf	(??_gpio_pin_write_logic+2)& (0+255),w,b
  2285   0017C2  16DF               	andwf	indf2,f,c
  2286   0017C4  50DF               	movf	indf2,w,c
  2287   0017C6  B4D8               	btfsc	status,2,c
  2288   0017C8  EFE8  F00B         	goto	u2201
  2289   0017CC  EFEA  F00B         	goto	u2200
  2290   0017D0                     u2201:
  2291   0017D0  EF77  F00B         	goto	l2793
  2292   0017D4                     u2200:
  2293   0017D4                     l247:
  2294                           
  2295                           ; BSR set to: 0
  2296                           ;MCAL_layer/GPIO/gpio.c: 87:         return ret;
  2297   0017D4  51DD               	movf	gpio_pin_write_logic@ret& (0+255),w,b
  2298   0017D6                     
  2299                           ; BSR set to: 0
  2300   0017D6  0012               	return		;funcret
  2301   0017D8                     __end_of_gpio_pin_write_logic:
  2302                           	callstack 0
  2303                           
  2304 ;; *************** function _gpio_pin_direction_intialize *****************
  2305 ;; Defined at:
  2306 ;;		line 31 in file "MCAL_layer/GPIO/gpio.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  Pin_Config      2    0[BANK0 ] PTR const struct .
  2309 ;;		 -> lcd_4bit.lcd_pin(4), lcd_4bit(6), 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  ret             1    8[BANK0 ] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      unsigned char 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;Total ram usage:        9 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 12
  2328 ;; This function calls:
  2329 ;;		Nothing
  2330 ;; This function is called by:
  2331 ;;		_gpio_pin_intialize
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text12
  2336   001460                     __ptext12:
  2337                           	callstack 0
  2338   001460                     _gpio_pin_direction_intialize:
  2339                           	callstack 15
  2340   001460                     
  2341                           ;MCAL_layer/GPIO/gpio.c: 32:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2342   001460  0E01               	movlw	1
  2343   001462  0100               	movlb	0	; () banked
  2344   001464  6FDC               	movwf	gpio_pin_direction_intialize@ret& (0+255),b
  2345   001466                     
  2346                           ; BSR set to: 0
  2347                           ;MCAL_layer/GPIO/gpio.c: 33:     if(((void*)0) == Pin_Config || Pin_Config->pin > 8)
  2348   001466  51D4               	movf	gpio_pin_direction_intialize@Pin_Config& (0+255),w,b
  2349   001468  11D5               	iorwf	(gpio_pin_direction_intialize@Pin_Config+1)& (0+255),w,b
  2350   00146A  B4D8               	btfsc	status,2,c
  2351   00146C  EF3A  F00A         	goto	u2311
  2352   001470  EF3C  F00A         	goto	u2310
  2353   001474                     u2311:
  2354   001474  EF4D  F00A         	goto	l2919
  2355   001478                     u2310:
  2356   001478                     
  2357                           ; BSR set to: 0
  2358   001478  C0D4  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2359   00147C  C0D5  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2360   001480  30DF               	rrcf	223,w,c
  2361   001482  32E8               	rrcf	wreg,f,c
  2362   001484  32E8               	rrcf	wreg,f,c
  2363   001486  0B07               	andlw	7
  2364   001488  6FD6               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  2365   00148A  0E08               	movlw	8
  2366   00148C  65D6               	cpfsgt	??_gpio_pin_direction_intialize& (0+255),b
  2367   00148E  EF4B  F00A         	goto	u2321
  2368   001492  EF4D  F00A         	goto	u2320
  2369   001496                     u2321:
  2370   001496  EF51  F00A         	goto	l2921
  2371   00149A                     u2320:
  2372   00149A                     l2919:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;MCAL_layer/GPIO/gpio.c: 34:         ret = (Std_ReturnType)0x00;
  2376   00149A  0E00               	movlw	0
  2377   00149C  6FDC               	movwf	gpio_pin_direction_intialize@ret& (0+255),b
  2378   00149E  EFC3  F00A         	goto	l229
  2379   0014A2                     l2921:
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;MCAL_layer/GPIO/gpio.c: 36:     {;MCAL_layer/GPIO/gpio.c: 37:         if(Pin_Config->di
      +                          rection == OUTPUT)
  2383   0014A2  C0D4  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2384   0014A6  C0D5  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2385   0014AA  BCDF               	btfsc	indf2,6,c
  2386   0014AC  EF5A  F00A         	goto	u2331
  2387   0014B0  EF5C  F00A         	goto	u2330
  2388   0014B4                     u2331:
  2389   0014B4  EF8E  F00A         	goto	l2925
  2390   0014B8                     u2330:
  2391   0014B8                     
  2392                           ; BSR set to: 0
  2393                           ;MCAL_layer/GPIO/gpio.c: 38:             (*tris_reg[Pin_Config->port] &= ~((uint8)1 << P
      +                          in_Config->pin));
  2394   0014B8  C0D4  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2395   0014BC  C0D5  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2396   0014C0  30DF               	rrcf	223,w,c
  2397   0014C2  32E8               	rrcf	wreg,f,c
  2398   0014C4  32E8               	rrcf	wreg,f,c
  2399   0014C6  0B07               	andlw	7
  2400   0014C8  6FD6               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  2401   0014CA  0E01               	movlw	1
  2402   0014CC  6FD7               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),b
  2403   0014CE  2BD6               	incf	??_gpio_pin_direction_intialize& (0+255),f,b
  2404   0014D0  EF6C  F00A         	goto	u2344
  2405   0014D4                     u2345:
  2406   0014D4  90D8               	bcf	status,0,c
  2407   0014D6  37D7               	rlcf	(??_gpio_pin_direction_intialize+1)& (0+255),f,b
  2408   0014D8                     u2344:
  2409   0014D8  2FD6               	decfsz	??_gpio_pin_direction_intialize& (0+255),f,b
  2410   0014DA  EF6A  F00A         	goto	u2345
  2411   0014DE  0100               	movlb	0	; () banked
  2412   0014E0  51D7               	movf	(??_gpio_pin_direction_intialize+1)& (0+255),w,b
  2413   0014E2  0AFF               	xorlw	255
  2414   0014E4  6FD8               	movwf	(??_gpio_pin_direction_intialize+2)& (0+255),b
  2415   0014E6  C0D4  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2416   0014EA  C0D5  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2417   0014EE  50DF               	movf	223,w,c
  2418   0014F0  0B07               	andlw	7
  2419   0014F2  6FD9               	movwf	(??_gpio_pin_direction_intialize+3)& (0+255),b
  2420   0014F4  51D9               	movf	(??_gpio_pin_direction_intialize+3)& (0+255),w,b
  2421   0014F6  0D02               	mullw	2
  2422   0014F8  0E94               	movlw	low _tris_reg
  2423   0014FA  24F3               	addwf	243,w,c
  2424   0014FC  6ED9               	movwf	fsr2l,c
  2425   0014FE  0E00               	movlw	high _tris_reg
  2426   001500  20F4               	addwfc	prodh,w,c
  2427   001502  6EDA               	movwf	fsr2h,c
  2428   001504  CFDE F0DA          	movff	postinc2,??_gpio_pin_direction_intialize+4
  2429   001508  CFDD F0DB          	movff	postdec2,??_gpio_pin_direction_intialize+5
  2430   00150C  C0DA  FFD9         	movff	??_gpio_pin_direction_intialize+4,fsr2l
  2431   001510  C0DB  FFDA         	movff	??_gpio_pin_direction_intialize+5,fsr2h
  2432   001514  51D8               	movf	(??_gpio_pin_direction_intialize+2)& (0+255),w,b
  2433   001516  16DF               	andwf	indf2,f,c
  2434   001518  EFC3  F00A         	goto	l229
  2435   00151C                     l2925:
  2436                           
  2437                           ; BSR set to: 0
  2438   00151C  C0D4  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2439   001520  C0D5  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2440   001524  30DF               	rrcf	223,w,c
  2441   001526  32E8               	rrcf	wreg,f,c
  2442   001528  32E8               	rrcf	wreg,f,c
  2443   00152A  0B07               	andlw	7
  2444   00152C  6FD6               	movwf	??_gpio_pin_direction_intialize& (0+255),b
  2445   00152E  0E01               	movlw	1
  2446   001530  6FD7               	movwf	(??_gpio_pin_direction_intialize+1)& (0+255),b
  2447   001532  2BD6               	incf	??_gpio_pin_direction_intialize& (0+255),f,b
  2448   001534  EF9E  F00A         	goto	u2354
  2449   001538                     u2355:
  2450   001538  90D8               	bcf	status,0,c
  2451   00153A  37D7               	rlcf	(??_gpio_pin_direction_intialize+1)& (0+255),f,b
  2452   00153C                     u2354:
  2453   00153C  2FD6               	decfsz	??_gpio_pin_direction_intialize& (0+255),f,b
  2454   00153E  EF9C  F00A         	goto	u2355
  2455   001542  C0D4  FFD9         	movff	gpio_pin_direction_intialize@Pin_Config,fsr2l
  2456   001546  C0D5  FFDA         	movff	gpio_pin_direction_intialize@Pin_Config+1,fsr2h
  2457   00154A  50DF               	movf	223,w,c
  2458   00154C  0B07               	andlw	7
  2459   00154E  0100               	movlb	0	; () banked
  2460   001550  6FD8               	movwf	(??_gpio_pin_direction_intialize+2)& (0+255),b
  2461   001552  51D8               	movf	(??_gpio_pin_direction_intialize+2)& (0+255),w,b
  2462   001554  0D02               	mullw	2
  2463   001556  0E94               	movlw	low _tris_reg
  2464   001558  24F3               	addwf	243,w,c
  2465   00155A  6ED9               	movwf	fsr2l,c
  2466   00155C  0E00               	movlw	high _tris_reg
  2467   00155E  20F4               	addwfc	prodh,w,c
  2468   001560  6EDA               	movwf	fsr2h,c
  2469   001562  CFDE F0D9          	movff	postinc2,??_gpio_pin_direction_intialize+3
  2470   001566  CFDD F0DA          	movff	postdec2,??_gpio_pin_direction_intialize+4
  2471   00156A  C0D9  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  2472   00156E  C0DA  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  2473   001572  51D7               	movf	(??_gpio_pin_direction_intialize+1)& (0+255),w,b
  2474   001574  12DF               	iorwf	indf2,f,c
  2475   001576  50DF               	movf	indf2,w,c
  2476   001578  B4D8               	btfsc	status,2,c
  2477   00157A  EFC1  F00A         	goto	u2361
  2478   00157E  EFC3  F00A         	goto	u2360
  2479   001582                     u2361:
  2480   001582  EF4D  F00A         	goto	l2919
  2481   001586                     u2360:
  2482   001586                     l229:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;MCAL_layer/GPIO/gpio.c: 43:         return ret;
  2486   001586  51DC               	movf	gpio_pin_direction_intialize@ret& (0+255),w,b
  2487   001588                     
  2488                           ; BSR set to: 0
  2489   001588  0012               	return		;funcret
  2490   00158A                     __end_of_gpio_pin_direction_intialize:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _Timer1_init *****************
  2494 ;; Defined at:
  2495 ;;		line 22 in file "MCAL_layer/TIMER1/timer1.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  timer1          2    3[BANK0 ] PTR struct .
  2498 ;;		 -> timer1_obj(9), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  ret             1    0        unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      unsigned char 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2510 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;Total ram usage:        4 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 13
  2517 ;; This function calls:
  2518 ;;		_select_prescaler_timer
  2519 ;;		_select_timer_mode@timer1$F836
  2520 ;;		_set_TIMER1_interrupt
  2521 ;; This function is called by:
  2522 ;;		_application_initialize
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text13
  2527   001C22                     __ptext13:
  2528                           	callstack 0
  2529   001C22                     _Timer1_init:
  2530                           	callstack 16
  2531   001C22                     
  2532                           ;MCAL_layer/TIMER1/timer1.c: 24:     if(((void*)0) == timer1)
  2533   001C22  0100               	movlb	0	; () banked
  2534   001C24  51D7               	movf	Timer1_init@timer1& (0+255),w,b
  2535   001C26  11D8               	iorwf	(Timer1_init@timer1+1)& (0+255),w,b
  2536   001C28  A4D8               	btfss	status,2,c
  2537   001C2A  EF19  F00E         	goto	u2941
  2538   001C2E  EF1B  F00E         	goto	u2940
  2539   001C32                     u2941:
  2540   001C32  EF1D  F00E         	goto	l428
  2541   001C36                     u2940:
  2542   001C36                     
  2543                           ; BSR set to: 0
  2544   001C36  EF6D  F00E         	goto	l433
  2545   001C3A                     l428:
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;MCAL_layer/TIMER1/timer1.c: 27:     {;MCAL_layer/TIMER1/timer1.c: 28:         (T1CONbit
      +                          s.TMR1ON = 0);
  2549   001C3A  90CD               	bcf	205,0,c	;volatile
  2550   001C3C                     
  2551                           ; BSR set to: 0
  2552                           ;MCAL_layer/TIMER1/timer1.c: 30:         if(timer1->timer1_osc_status == 1)
  2553   001C3C  EE20 F006          	lfsr	2,6
  2554   001C40  51D7               	movf	Timer1_init@timer1& (0+255),w,b
  2555   001C42  26D9               	addwf	fsr2l,f,c
  2556   001C44  51D8               	movf	(Timer1_init@timer1+1)& (0+255),w,b
  2557   001C46  22DA               	addwfc	fsr2h,f,c
  2558   001C48  04DE               	decf	postinc2,w,c
  2559   001C4A  A4D8               	btfss	status,2,c
  2560   001C4C  EF2A  F00E         	goto	u2951
  2561   001C50  EF2C  F00E         	goto	u2950
  2562   001C54                     u2951:
  2563   001C54  EF2F  F00E         	goto	l3357
  2564   001C58                     u2950:
  2565   001C58                     
  2566                           ; BSR set to: 0
  2567                           ;MCAL_layer/TIMER1/timer1.c: 31:         (T1CONbits.T1OSCEN = 1);
  2568   001C58  86CD               	bsf	205,3,c	;volatile
  2569   001C5A  EF3E  F00E         	goto	l3361
  2570   001C5E                     l3357:
  2571                           
  2572                           ; BSR set to: 0
  2573   001C5E  EE20 F006          	lfsr	2,6
  2574   001C62  51D7               	movf	Timer1_init@timer1& (0+255),w,b
  2575   001C64  26D9               	addwf	fsr2l,f,c
  2576   001C66  51D8               	movf	(Timer1_init@timer1+1)& (0+255),w,b
  2577   001C68  22DA               	addwfc	fsr2h,f,c
  2578   001C6A  50DF               	movf	indf2,w,c
  2579   001C6C  A4D8               	btfss	status,2,c
  2580   001C6E  EF3B  F00E         	goto	u2961
  2581   001C72  EF3D  F00E         	goto	u2960
  2582   001C76                     u2961:
  2583   001C76  EF3E  F00E         	goto	l3361
  2584   001C7A                     u2960:
  2585   001C7A                     
  2586                           ; BSR set to: 0
  2587                           ;MCAL_layer/TIMER1/timer1.c: 33:         (T1CONbits.T1OSCEN = 0);
  2588   001C7A  96CD               	bcf	205,3,c	;volatile
  2589   001C7C                     l3361:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;MCAL_layer/TIMER1/timer1.c: 35:         select_timer_mode(timer1);
  2593   001C7C  C0D7  F0D4         	movff	Timer1_init@timer1,select_timer_mode@timer1$F836@timer1
  2594   001C80  C0D8  F0D5         	movff	Timer1_init@timer1+1,select_timer_mode@timer1$F836@timer1+1
  2595   001C84  EC72  F00F         	call	_select_timer_mode@timer1$F836	;wreg free
  2596                           
  2597                           ;MCAL_layer/TIMER1/timer1.c: 37:         select_prescaler_timer(timer1);
  2598   001C88  C0D7  F0D4         	movff	Timer1_init@timer1,select_prescaler_timer@timer1
  2599   001C8C  C0D8  F0D5         	movff	Timer1_init@timer1+1,select_prescaler_timer@timer1+1
  2600   001C90  ECF5  F014         	call	_select_prescaler_timer	;wreg free
  2601   001C94                     
  2602                           ;MCAL_layer/TIMER1/timer1.c: 39:         TMR1H = timer1->value_start_cnt >> 8;
  2603   001C94  0100               	movlb	0	; () banked
  2604   001C96  EE20 F007          	lfsr	2,7
  2605   001C9A  51D7               	movf	Timer1_init@timer1& (0+255),w,b
  2606   001C9C  26D9               	addwf	fsr2l,f,c
  2607   001C9E  51D8               	movf	(Timer1_init@timer1+1)& (0+255),w,b
  2608   001CA0  22DA               	addwfc	fsr2h,f,c
  2609   001CA2  CFDE F0D9          	movff	postinc2,??_Timer1_init
  2610   001CA6  CFDD F0DA          	movff	postdec2,??_Timer1_init+1
  2611   001CAA  C0DA  F0D9         	movff	??_Timer1_init+1,??_Timer1_init
  2612   001CAE  6BDA               	clrf	(??_Timer1_init+1)& (0+255),b
  2613   001CB0  51D9               	movf	??_Timer1_init& (0+255),w,b
  2614   001CB2  6ECF               	movwf	207,c	;volatile
  2615   001CB4                     
  2616                           ; BSR set to: 0
  2617                           ;MCAL_layer/TIMER1/timer1.c: 40:         TMR1L = (uint8)timer1->value_start_cnt;
  2618   001CB4  EE20 F007          	lfsr	2,7
  2619   001CB8  51D7               	movf	Timer1_init@timer1& (0+255),w,b
  2620   001CBA  26D9               	addwf	fsr2l,f,c
  2621   001CBC  51D8               	movf	(Timer1_init@timer1+1)& (0+255),w,b
  2622   001CBE  22DA               	addwfc	fsr2h,f,c
  2623   001CC0  50DF               	movf	indf2,w,c
  2624   001CC2  6ECE               	movwf	206,c	;volatile
  2625   001CC4                     
  2626                           ; BSR set to: 0
  2627                           ;MCAL_layer/TIMER1/timer1.c: 42:         (T1CONbits.TMR1ON = 1);
  2628   001CC4  80CD               	bsf	205,0,c	;volatile
  2629   001CC6                     
  2630                           ; BSR set to: 0
  2631                           ;MCAL_layer/TIMER1/timer1.c: 45:         (PIR1bits.TMR1IF = 0);
  2632   001CC6  909E               	bcf	158,0,c	;volatile
  2633   001CC8                     
  2634                           ; BSR set to: 0
  2635                           ;MCAL_layer/TIMER1/timer1.c: 60:        (INTCONbits.PEIE = 1);
  2636   001CC8  8CF2               	bsf	242,6,c	;volatile
  2637   001CCA                     
  2638                           ; BSR set to: 0
  2639                           ;MCAL_layer/TIMER1/timer1.c: 61:        (INTCONbits.GIE = 1);
  2640   001CCA  8EF2               	bsf	242,7,c	;volatile
  2641                           
  2642                           ;MCAL_layer/TIMER1/timer1.c: 63:     set_TIMER1_interrupt(timer1);
  2643   001CCC  C0D7  F0D4         	movff	Timer1_init@timer1,set_TIMER1_interrupt@timer1
  2644   001CD0  C0D8  F0D5         	movff	Timer1_init@timer1+1,set_TIMER1_interrupt@timer1+1
  2645   001CD4  EC54  F015         	call	_set_TIMER1_interrupt	;wreg free
  2646   001CD8                     
  2647                           ;MCAL_layer/TIMER1/timer1.c: 64:     (PIE1bits.TMR1IE = 1);
  2648   001CD8  809D               	bsf	157,0,c	;volatile
  2649   001CDA                     l433:
  2650   001CDA  0012               	return		;funcret
  2651   001CDC                     __end_of_Timer1_init:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function _set_TIMER1_interrupt *****************
  2655 ;; Defined at:
  2656 ;;		line 140 in file "MCAL_layer/TIMER1/timer1.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  timer1          2    0[BANK0 ] PTR struct .
  2659 ;;		 -> timer1_obj(9), 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  ret             1    0        unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      unsigned char 
  2664 ;; Registers used:
  2665 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2671 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;Total ram usage:        2 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 12
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_Timer1_init
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text14
  2686   002AA8                     __ptext14:
  2687                           	callstack 0
  2688   002AA8                     _set_TIMER1_interrupt:
  2689                           	callstack 16
  2690   002AA8                     
  2691                           ;MCAL_layer/TIMER1/timer1.c: 142:     if(((void*)0) == timer1)
  2692   002AA8  0100               	movlb	0	; () banked
  2693   002AAA  51D4               	movf	set_TIMER1_interrupt@timer1& (0+255),w,b
  2694   002AAC  11D5               	iorwf	(set_TIMER1_interrupt@timer1+1)& (0+255),w,b
  2695   002AAE  A4D8               	btfss	status,2,c
  2696   002AB0  EF5C  F015         	goto	u2741
  2697   002AB4  EF5E  F015         	goto	u2740
  2698   002AB8                     u2741:
  2699   002AB8  EF60  F015         	goto	l3161
  2700   002ABC                     u2740:
  2701   002ABC                     
  2702                           ; BSR set to: 0
  2703   002ABC  EF68  F015         	goto	l469
  2704   002AC0                     l3161:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;MCAL_layer/TIMER1/timer1.c: 145:     {;MCAL_layer/TIMER1/timer1.c: 146:        TIMER1_H
      +                          UNDLER = timer1->interrupt_timer1;
  2708   002AC0  C0D4  FFD9         	movff	set_TIMER1_interrupt@timer1,fsr2l
  2709   002AC4  C0D5  FFDA         	movff	set_TIMER1_interrupt@timer1+1,fsr2h
  2710   002AC8  CFDE F0BE          	movff	postinc2,_TIMER1_HUNDLER
  2711   002ACC  CFDD F0BF          	movff	postdec2,_TIMER1_HUNDLER+1
  2712   002AD0                     l469:
  2713                           
  2714                           ; BSR set to: 0
  2715   002AD0  0012               	return		;funcret
  2716   002AD2                     __end_of_set_TIMER1_interrupt:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function _select_timer_mode@timer1$F836 *****************
  2720 ;; Defined at:
  2721 ;;		line 107 in file "MCAL_layer/TIMER1/timer1.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  timer1          2    0[BANK0 ] PTR struct .
  2724 ;;		 -> timer1_obj(9), 
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  ret             1    0        unsigned char 
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      unsigned char 
  2729 ;; Registers used:
  2730 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2736 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2739 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;Total ram usage:        3 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 12
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_Timer1_init
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text15
  2751   001EE4                     __ptext15:
  2752                           	callstack 0
  2753   001EE4                     _select_timer_mode@timer1$F836:
  2754                           	callstack 16
  2755   001EE4                     
  2756                           ;MCAL_layer/TIMER1/timer1.c: 109:     if(((void*)0) == timer1)
  2757   001EE4  0100               	movlb	0	; () banked
  2758   001EE6  51D4               	movf	select_timer_mode@timer1$F836@timer1& (0+255),w,b
  2759   001EE8  11D5               	iorwf	(select_timer_mode@timer1$F836@timer1+1)& (0+255),w,b
  2760   001EEA  A4D8               	btfss	status,2,c
  2761   001EEC  EF7A  F00F         	goto	u2681
  2762   001EF0  EF7C  F00F         	goto	u2680
  2763   001EF4                     u2681:
  2764   001EF4  EF7E  F00F         	goto	l3129
  2765   001EF8                     u2680:
  2766   001EF8                     
  2767                           ; BSR set to: 0
  2768   001EF8  EFC0  F00F         	goto	l459
  2769   001EFC                     l3129:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;MCAL_layer/TIMER1/timer1.c: 112:     {;MCAL_layer/TIMER1/timer1.c: 113:         if(1 ==
      +                           timer1->timer1_mode)
  2773   001EFC  EE20 F002          	lfsr	2,2
  2774   001F00  51D4               	movf	select_timer_mode@timer1$F836@timer1& (0+255),w,b
  2775   001F02  26D9               	addwf	fsr2l,f,c
  2776   001F04  51D5               	movf	(select_timer_mode@timer1$F836@timer1+1)& (0+255),w,b
  2777   001F06  22DA               	addwfc	fsr2h,f,c
  2778   001F08  04DE               	decf	postinc2,w,c
  2779   001F0A  A4D8               	btfss	status,2,c
  2780   001F0C  EF8A  F00F         	goto	u2691
  2781   001F10  EF8C  F00F         	goto	u2690
  2782   001F14                     u2691:
  2783   001F14  EF8F  F00F         	goto	l3133
  2784   001F18                     u2690:
  2785   001F18                     
  2786                           ; BSR set to: 0
  2787                           ;MCAL_layer/TIMER1/timer1.c: 114:            (T1CONbits.TMR1CS = 0);
  2788   001F18  92CD               	bcf	205,1,c	;volatile
  2789   001F1A  EFC0  F00F         	goto	l459
  2790   001F1E                     l3133:
  2791                           
  2792                           ; BSR set to: 0
  2793   001F1E  EE20 F002          	lfsr	2,2
  2794   001F22  51D4               	movf	select_timer_mode@timer1$F836@timer1& (0+255),w,b
  2795   001F24  26D9               	addwf	fsr2l,f,c
  2796   001F26  51D5               	movf	(select_timer_mode@timer1$F836@timer1+1)& (0+255),w,b
  2797   001F28  22DA               	addwfc	fsr2h,f,c
  2798   001F2A  50DF               	movf	indf2,w,c
  2799   001F2C  A4D8               	btfss	status,2,c
  2800   001F2E  EF9B  F00F         	goto	u2701
  2801   001F32  EF9D  F00F         	goto	u2700
  2802   001F36                     u2701:
  2803   001F36  EFC0  F00F         	goto	l459
  2804   001F3A                     u2700:
  2805   001F3A                     
  2806                           ; BSR set to: 0
  2807                           ;MCAL_layer/TIMER1/timer1.c: 117:         {;MCAL_layer/TIMER1/timer1.c: 118:            
      +                           (T1CONbits.TMR1CS = 1);
  2808   001F3A  82CD               	bsf	205,1,c	;volatile
  2809   001F3C                     
  2810                           ; BSR set to: 0
  2811                           ;MCAL_layer/TIMER1/timer1.c: 120:             if(0 == timer1->timer1_counter_mode)
  2812   001F3C  EE20 F003          	lfsr	2,3
  2813   001F40  51D4               	movf	select_timer_mode@timer1$F836@timer1& (0+255),w,b
  2814   001F42  26D9               	addwf	fsr2l,f,c
  2815   001F44  51D5               	movf	(select_timer_mode@timer1$F836@timer1+1)& (0+255),w,b
  2816   001F46  22DA               	addwfc	fsr2h,f,c
  2817   001F48  50DF               	movf	indf2,w,c
  2818   001F4A  A4D8               	btfss	status,2,c
  2819   001F4C  EFAA  F00F         	goto	u2711
  2820   001F50  EFAC  F00F         	goto	u2710
  2821   001F54                     u2711:
  2822   001F54  EFAF  F00F         	goto	l3141
  2823   001F58                     u2710:
  2824   001F58                     
  2825                           ; BSR set to: 0
  2826                           ;MCAL_layer/TIMER1/timer1.c: 121:                 (T1CONbits.T1SYNC = 0);
  2827   001F58  94CD               	bcf	205,2,c	;volatile
  2828   001F5A  EFC0  F00F         	goto	l459
  2829   001F5E                     l3141:
  2830                           
  2831                           ; BSR set to: 0
  2832   001F5E  EE20 F003          	lfsr	2,3
  2833   001F62  51D4               	movf	select_timer_mode@timer1$F836@timer1& (0+255),w,b
  2834   001F64  26D9               	addwf	fsr2l,f,c
  2835   001F66  51D5               	movf	(select_timer_mode@timer1$F836@timer1+1)& (0+255),w,b
  2836   001F68  22DA               	addwfc	fsr2h,f,c
  2837   001F6A  04DE               	decf	postinc2,w,c
  2838   001F6C  A4D8               	btfss	status,2,c
  2839   001F6E  EFBB  F00F         	goto	u2721
  2840   001F72  EFBD  F00F         	goto	u2720
  2841   001F76                     u2721:
  2842   001F76  EFC0  F00F         	goto	l454
  2843   001F7A                     u2720:
  2844   001F7A                     
  2845                           ; BSR set to: 0
  2846                           ;MCAL_layer/TIMER1/timer1.c: 124:                 (T1CONbits.T1SYNC = 1);
  2847   001F7A  84CD               	bsf	205,2,c	;volatile
  2848   001F7C  EFC0  F00F         	goto	l459
  2849   001F80                     l454:
  2850   001F80                     l459:
  2851                           
  2852                           ; BSR set to: 0
  2853   001F80  0012               	return		;funcret
  2854   001F82                     __end_of_select_timer_mode@timer1$F836:
  2855                           	callstack 0
  2856                           
  2857 ;; *************** function _select_prescaler_timer *****************
  2858 ;; Defined at:
  2859 ;;		line 129 in file "MCAL_layer/TIMER1/timer1.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  timer1          2    0[BANK0 ] PTR struct .
  2862 ;;		 -> timer1_obj(9), 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  ret             1    0        unsigned char 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      unsigned char 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2874 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;Total ram usage:        3 bytes
  2879 ;; Hardware stack levels used: 1
  2880 ;; Hardware stack levels required when called: 12
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_Timer1_init
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text16
  2889   0029EA                     __ptext16:
  2890                           	callstack 0
  2891   0029EA                     _select_prescaler_timer:
  2892                           	callstack 16
  2893   0029EA                     
  2894                           ;MCAL_layer/TIMER1/timer1.c: 131:     if(((void*)0) == timer1)
  2895   0029EA  0100               	movlb	0	; () banked
  2896   0029EC  51D4               	movf	select_prescaler_timer@timer1& (0+255),w,b
  2897   0029EE  11D5               	iorwf	(select_prescaler_timer@timer1+1)& (0+255),w,b
  2898   0029F0  A4D8               	btfss	status,2,c
  2899   0029F2  EFFD  F014         	goto	u2731
  2900   0029F6  EFFF  F014         	goto	u2730
  2901   0029FA                     u2731:
  2902   0029FA  EF01  F015         	goto	l3151
  2903   0029FE                     u2730:
  2904   0029FE                     
  2905                           ; BSR set to: 0
  2906   0029FE  EF0F  F015         	goto	l464
  2907   002A02                     l3151:
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;MCAL_layer/TIMER1/timer1.c: 134:     {;MCAL_layer/TIMER1/timer1.c: 135:        T1CONbit
      +                          s.T1CKPS = timer1->prescaler_timer1_value;
  2911   002A02  EE20 F004          	lfsr	2,4
  2912   002A06  51D4               	movf	select_prescaler_timer@timer1& (0+255),w,b
  2913   002A08  26D9               	addwf	fsr2l,f,c
  2914   002A0A  51D5               	movf	(select_prescaler_timer@timer1+1)& (0+255),w,b
  2915   002A0C  22DA               	addwfc	fsr2h,f,c
  2916   002A0E  50DF               	movf	indf2,w,c
  2917   002A10  6FD6               	movwf	??_select_prescaler_timer& (0+255),b
  2918   002A12  3BD6               	swapf	??_select_prescaler_timer& (0+255),f,b
  2919   002A14  50CD               	movf	205,w,c	;volatile
  2920   002A16  19D6               	xorwf	??_select_prescaler_timer& (0+255),w,b
  2921   002A18  0BCF               	andlw	-49
  2922   002A1A  19D6               	xorwf	??_select_prescaler_timer& (0+255),w,b
  2923   002A1C  6ECD               	movwf	205,c	;volatile
  2924   002A1E                     l464:
  2925                           
  2926                           ; BSR set to: 0
  2927   002A1E  0012               	return		;funcret
  2928   002A20                     __end_of_select_prescaler_timer:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _Timer0_init *****************
  2932 ;; Defined at:
  2933 ;;		line 23 in file "MCAL_layer/TIMER0/timer0.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  timer0          2    3[BANK0 ] PTR struct .
  2936 ;;		 -> timer0_obj(9), 
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;  ret             1    0        unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      unsigned char 
  2941 ;; Registers used:
  2942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;Total ram usage:        4 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 13
  2955 ;; This function calls:
  2956 ;;		_prescaler_timer_status
  2957 ;;		_select_cnt_reg_size
  2958 ;;		_select_timer_mode
  2959 ;;		_set_TIMER0_interrupt
  2960 ;; This function is called by:
  2961 ;;		_application_initialize
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text17
  2966   00226C                     __ptext17:
  2967                           	callstack 0
  2968   00226C                     _Timer0_init:
  2969                           	callstack 16
  2970   00226C                     
  2971                           ;MCAL_layer/TIMER0/timer0.c: 25:     if(((void*)0) == timer0)
  2972   00226C  0100               	movlb	0	; () banked
  2973   00226E  51D7               	movf	Timer0_init@timer0& (0+255),w,b
  2974   002270  11D8               	iorwf	(Timer0_init@timer0+1)& (0+255),w,b
  2975   002272  A4D8               	btfss	status,2,c
  2976   002274  EF3E  F011         	goto	u2931
  2977   002278  EF40  F011         	goto	u2930
  2978   00227C                     u2931:
  2979   00227C  EF42  F011         	goto	l342
  2980   002280                     u2930:
  2981   002280                     
  2982                           ; BSR set to: 0
  2983   002280  EF78  F011         	goto	l344
  2984   002284                     l342:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;MCAL_layer/TIMER0/timer0.c: 28:     {;MCAL_layer/TIMER0/timer0.c: 29:         (T0CONbit
      +                          s.TMR0ON = 0);
  2988   002284  9ED5               	bcf	213,7,c	;volatile
  2989   002286                     
  2990                           ; BSR set to: 0
  2991                           ;MCAL_layer/TIMER0/timer0.c: 31:         select_timer_mode(timer0);
  2992   002286  C0D7  F0D4         	movff	Timer0_init@timer0,select_timer_mode@timer0
  2993   00228A  C0D8  F0D5         	movff	Timer0_init@timer0+1,select_timer_mode@timer0+1
  2994   00228E  ECC1  F00F         	call	_select_timer_mode	;wreg free
  2995   002292                     
  2996                           ;MCAL_layer/TIMER0/timer0.c: 33:         TMR0H = timer0->value_start_cnt >> 8;
  2997   002292  0100               	movlb	0	; () banked
  2998   002294  EE20 F007          	lfsr	2,7
  2999   002298  51D7               	movf	Timer0_init@timer0& (0+255),w,b
  3000   00229A  26D9               	addwf	fsr2l,f,c
  3001   00229C  51D8               	movf	(Timer0_init@timer0+1)& (0+255),w,b
  3002   00229E  22DA               	addwfc	fsr2h,f,c
  3003   0022A0  CFDE F0D9          	movff	postinc2,??_Timer0_init
  3004   0022A4  CFDD F0DA          	movff	postdec2,??_Timer0_init+1
  3005   0022A8  C0DA  F0D9         	movff	??_Timer0_init+1,??_Timer0_init
  3006   0022AC  6BDA               	clrf	(??_Timer0_init+1)& (0+255),b
  3007   0022AE  51D9               	movf	??_Timer0_init& (0+255),w,b
  3008   0022B0  6ED7               	movwf	215,c	;volatile
  3009   0022B2                     
  3010                           ; BSR set to: 0
  3011                           ;MCAL_layer/TIMER0/timer0.c: 34:         TMR0L = (uint8)timer0->value_start_cnt;
  3012   0022B2  EE20 F007          	lfsr	2,7
  3013   0022B6  51D7               	movf	Timer0_init@timer0& (0+255),w,b
  3014   0022B8  26D9               	addwf	fsr2l,f,c
  3015   0022BA  51D8               	movf	(Timer0_init@timer0+1)& (0+255),w,b
  3016   0022BC  22DA               	addwfc	fsr2h,f,c
  3017   0022BE  50DF               	movf	indf2,w,c
  3018   0022C0  6ED6               	movwf	214,c	;volatile
  3019                           
  3020                           ;MCAL_layer/TIMER0/timer0.c: 35:         select_cnt_reg_size(timer0);
  3021   0022C2  C0D7  F0D4         	movff	Timer0_init@timer0,select_cnt_reg_size@timer0
  3022   0022C6  C0D8  F0D5         	movff	Timer0_init@timer0+1,select_cnt_reg_size@timer0+1
  3023   0022CA  EC7A  F013         	call	_select_cnt_reg_size	;wreg free
  3024                           
  3025                           ;MCAL_layer/TIMER0/timer0.c: 37:         prescaler_timer_status(timer0);
  3026   0022CE  C0D7  F0D4         	movff	Timer0_init@timer0,prescaler_timer_status@timer0
  3027   0022D2  C0D8  F0D5         	movff	Timer0_init@timer0+1,prescaler_timer_status@timer0+1
  3028   0022D6  EC34  F012         	call	_prescaler_timer_status	;wreg free
  3029   0022DA                     
  3030                           ;MCAL_layer/TIMER0/timer0.c: 39:         (T0CONbits.TMR0ON = 1);
  3031   0022DA  8ED5               	bsf	213,7,c	;volatile
  3032   0022DC                     
  3033                           ;MCAL_layer/TIMER0/timer0.c: 41:      (INTCONbits.TMR0IF = 0);
  3034   0022DC  94F2               	bcf	242,2,c	;volatile
  3035   0022DE                     
  3036                           ;MCAL_layer/TIMER0/timer0.c: 56:        (INTCONbits.PEIE = 1);
  3037   0022DE  8CF2               	bsf	242,6,c	;volatile
  3038   0022E0                     
  3039                           ;MCAL_layer/TIMER0/timer0.c: 57:        (INTCONbits.GIE = 1);
  3040   0022E0  8EF2               	bsf	242,7,c	;volatile
  3041                           
  3042                           ;MCAL_layer/TIMER0/timer0.c: 59:     set_TIMER0_interrupt(timer0);
  3043   0022E2  C0D7  F0D4         	movff	Timer0_init@timer0,set_TIMER0_interrupt@timer0
  3044   0022E6  C0D8  F0D5         	movff	Timer0_init@timer0+1,set_TIMER0_interrupt@timer0+1
  3045   0022EA  EC69  F015         	call	_set_TIMER0_interrupt	;wreg free
  3046   0022EE                     
  3047                           ;MCAL_layer/TIMER0/timer0.c: 60:     (INTCONbits.TMR0IE = 1);
  3048   0022EE  8AF2               	bsf	242,5,c	;volatile
  3049   0022F0                     l344:
  3050   0022F0  0012               	return		;funcret
  3051   0022F2                     __end_of_Timer0_init:
  3052                           	callstack 0
  3053                           
  3054 ;; *************** function _set_TIMER0_interrupt *****************
  3055 ;; Defined at:
  3056 ;;		line 180 in file "MCAL_layer/TIMER0/timer0.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;  timer0          2    0[BANK0 ] PTR struct .
  3059 ;;		 -> timer0_obj(9), 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;  ret             1    0        unsigned char 
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      unsigned char 
  3064 ;; Registers used:
  3065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3071 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3074 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;Total ram usage:        2 bytes
  3076 ;; Hardware stack levels used: 1
  3077 ;; Hardware stack levels required when called: 12
  3078 ;; This function calls:
  3079 ;;		Nothing
  3080 ;; This function is called by:
  3081 ;;		_Timer0_init
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text18
  3086   002AD2                     __ptext18:
  3087                           	callstack 0
  3088   002AD2                     _set_TIMER0_interrupt:
  3089                           	callstack 16
  3090   002AD2                     
  3091                           ;MCAL_layer/TIMER0/timer0.c: 182:     if(((void*)0) == timer0)
  3092   002AD2  0100               	movlb	0	; () banked
  3093   002AD4  51D4               	movf	set_TIMER0_interrupt@timer0& (0+255),w,b
  3094   002AD6  11D5               	iorwf	(set_TIMER0_interrupt@timer0+1)& (0+255),w,b
  3095   002AD8  A4D8               	btfss	status,2,c
  3096   002ADA  EF71  F015         	goto	u2671
  3097   002ADE  EF73  F015         	goto	u2670
  3098   002AE2                     u2671:
  3099   002AE2  EF75  F015         	goto	l3119
  3100   002AE6                     u2670:
  3101   002AE6                     
  3102                           ; BSR set to: 0
  3103   002AE6  EF7D  F015         	goto	l401
  3104   002AEA                     l3119:
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;MCAL_layer/TIMER0/timer0.c: 185:     {;MCAL_layer/TIMER0/timer0.c: 186:        TIMER0_H
      +                          UNDLER = timer0->interrupt_timer0;
  3108   002AEA  C0D4  FFD9         	movff	set_TIMER0_interrupt@timer0,fsr2l
  3109   002AEE  C0D5  FFDA         	movff	set_TIMER0_interrupt@timer0+1,fsr2h
  3110   002AF2  CFDE F077          	movff	postinc2,_TIMER0_HUNDLER
  3111   002AF6  CFDD F078          	movff	postdec2,_TIMER0_HUNDLER+1
  3112   002AFA                     l401:
  3113                           
  3114                           ; BSR set to: 0
  3115   002AFA  0012               	return		;funcret
  3116   002AFC                     __end_of_set_TIMER0_interrupt:
  3117                           	callstack 0
  3118                           
  3119 ;; *************** function _select_timer_mode *****************
  3120 ;; Defined at:
  3121 ;;		line 140 in file "MCAL_layer/TIMER0/timer0.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;  timer0          2    0[BANK0 ] PTR struct .
  3124 ;;		 -> timer0_obj(9), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  ret             1    0        unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      unsigned char 
  3129 ;; Registers used:
  3130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;Total ram usage:        3 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 12
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_Timer0_init
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text19
  3151   001F82                     __ptext19:
  3152                           	callstack 0
  3153   001F82                     _select_timer_mode:
  3154                           	callstack 16
  3155   001F82                     
  3156                           ;MCAL_layer/TIMER0/timer0.c: 142:     if(((void*)0) == timer0)
  3157   001F82  0100               	movlb	0	; () banked
  3158   001F84  51D4               	movf	select_timer_mode@timer0& (0+255),w,b
  3159   001F86  11D5               	iorwf	(select_timer_mode@timer0+1)& (0+255),w,b
  3160   001F88  A4D8               	btfss	status,2,c
  3161   001F8A  EFC9  F00F         	goto	u2561
  3162   001F8E  EFCB  F00F         	goto	u2560
  3163   001F92                     u2561:
  3164   001F92  EFCD  F00F         	goto	l3067
  3165   001F96                     u2560:
  3166   001F96                     
  3167                           ; BSR set to: 0
  3168   001F96  EF0F  F010         	goto	l388
  3169   001F9A                     l3067:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;MCAL_layer/TIMER0/timer0.c: 145:     {;MCAL_layer/TIMER0/timer0.c: 146:         if(1 ==
      +                           timer0->timer0_mode)
  3173   001F9A  EE20 F002          	lfsr	2,2
  3174   001F9E  51D4               	movf	select_timer_mode@timer0& (0+255),w,b
  3175   001FA0  26D9               	addwf	fsr2l,f,c
  3176   001FA2  51D5               	movf	(select_timer_mode@timer0+1)& (0+255),w,b
  3177   001FA4  22DA               	addwfc	fsr2h,f,c
  3178   001FA6  04DE               	decf	postinc2,w,c
  3179   001FA8  A4D8               	btfss	status,2,c
  3180   001FAA  EFD9  F00F         	goto	u2571
  3181   001FAE  EFDB  F00F         	goto	u2570
  3182   001FB2                     u2571:
  3183   001FB2  EFDE  F00F         	goto	l3071
  3184   001FB6                     u2570:
  3185   001FB6                     
  3186                           ; BSR set to: 0
  3187                           ;MCAL_layer/TIMER0/timer0.c: 147:            (T0CONbits.T0CS = 0);
  3188   001FB6  9AD5               	bcf	213,5,c	;volatile
  3189   001FB8  EF0F  F010         	goto	l388
  3190   001FBC                     l3071:
  3191                           
  3192                           ; BSR set to: 0
  3193   001FBC  EE20 F002          	lfsr	2,2
  3194   001FC0  51D4               	movf	select_timer_mode@timer0& (0+255),w,b
  3195   001FC2  26D9               	addwf	fsr2l,f,c
  3196   001FC4  51D5               	movf	(select_timer_mode@timer0+1)& (0+255),w,b
  3197   001FC6  22DA               	addwfc	fsr2h,f,c
  3198   001FC8  50DF               	movf	indf2,w,c
  3199   001FCA  A4D8               	btfss	status,2,c
  3200   001FCC  EFEA  F00F         	goto	u2581
  3201   001FD0  EFEC  F00F         	goto	u2580
  3202   001FD4                     u2581:
  3203   001FD4  EF0F  F010         	goto	l388
  3204   001FD8                     u2580:
  3205   001FD8                     
  3206                           ; BSR set to: 0
  3207                           ;MCAL_layer/TIMER0/timer0.c: 150:         {;MCAL_layer/TIMER0/timer0.c: 151:            
      +                           (T0CONbits.T0CS = 1);
  3208   001FD8  8AD5               	bsf	213,5,c	;volatile
  3209   001FDA                     
  3210                           ; BSR set to: 0
  3211                           ;MCAL_layer/TIMER0/timer0.c: 152:             if(1 == timer0->timer0_counter_edge)
  3212   001FDA  EE20 F003          	lfsr	2,3
  3213   001FDE  51D4               	movf	select_timer_mode@timer0& (0+255),w,b
  3214   001FE0  26D9               	addwf	fsr2l,f,c
  3215   001FE2  51D5               	movf	(select_timer_mode@timer0+1)& (0+255),w,b
  3216   001FE4  22DA               	addwfc	fsr2h,f,c
  3217   001FE6  04DE               	decf	postinc2,w,c
  3218   001FE8  A4D8               	btfss	status,2,c
  3219   001FEA  EFF9  F00F         	goto	u2591
  3220   001FEE  EFFB  F00F         	goto	u2590
  3221   001FF2                     u2591:
  3222   001FF2  EFFE  F00F         	goto	l3079
  3223   001FF6                     u2590:
  3224   001FF6                     
  3225                           ; BSR set to: 0
  3226                           ;MCAL_layer/TIMER0/timer0.c: 153:                 (T0CONbits.T0SE = 0);
  3227   001FF6  98D5               	bcf	213,4,c	;volatile
  3228   001FF8  EF0F  F010         	goto	l388
  3229   001FFC                     l3079:
  3230                           
  3231                           ; BSR set to: 0
  3232   001FFC  EE20 F003          	lfsr	2,3
  3233   002000  51D4               	movf	select_timer_mode@timer0& (0+255),w,b
  3234   002002  26D9               	addwf	fsr2l,f,c
  3235   002004  51D5               	movf	(select_timer_mode@timer0+1)& (0+255),w,b
  3236   002006  22DA               	addwfc	fsr2h,f,c
  3237   002008  50DF               	movf	indf2,w,c
  3238   00200A  A4D8               	btfss	status,2,c
  3239   00200C  EF0A  F010         	goto	u2601
  3240   002010  EF0C  F010         	goto	u2600
  3241   002014                     u2601:
  3242   002014  EF0F  F010         	goto	l383
  3243   002018                     u2600:
  3244   002018                     
  3245                           ; BSR set to: 0
  3246                           ;MCAL_layer/TIMER0/timer0.c: 156:                 (T0CONbits.T0SE = 1);
  3247   002018  88D5               	bsf	213,4,c	;volatile
  3248   00201A  EF0F  F010         	goto	l388
  3249   00201E                     l383:
  3250   00201E                     l388:
  3251                           
  3252                           ; BSR set to: 0
  3253   00201E  0012               	return		;funcret
  3254   002020                     __end_of_select_timer_mode:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _select_cnt_reg_size *****************
  3258 ;; Defined at:
  3259 ;;		line 122 in file "MCAL_layer/TIMER0/timer0.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;  timer0          2    0[BANK0 ] PTR struct .
  3262 ;;		 -> timer0_obj(9), 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  ret             1    0        unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      unsigned char 
  3267 ;; Registers used:
  3268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3274 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;Total ram usage:        3 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 12
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_Timer0_init
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text20
  3289   0026F4                     __ptext20:
  3290                           	callstack 0
  3291   0026F4                     _select_cnt_reg_size:
  3292                           	callstack 16
  3293   0026F4                     
  3294                           ;MCAL_layer/TIMER0/timer0.c: 124:     if(((void*)0) == timer0)
  3295   0026F4  0100               	movlb	0	; () banked
  3296   0026F6  51D4               	movf	select_cnt_reg_size@timer0& (0+255),w,b
  3297   0026F8  11D5               	iorwf	(select_cnt_reg_size@timer0+1)& (0+255),w,b
  3298   0026FA  A4D8               	btfss	status,2,c
  3299   0026FC  EF82  F013         	goto	u2611
  3300   002700  EF84  F013         	goto	u2610
  3301   002704                     u2611:
  3302   002704  EF86  F013         	goto	l3089
  3303   002708                     u2610:
  3304   002708                     
  3305                           ; BSR set to: 0
  3306   002708  EFA6  F013         	goto	l377
  3307   00270C                     l3089:
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;MCAL_layer/TIMER0/timer0.c: 127:     {;MCAL_layer/TIMER0/timer0.c: 128:         if(1 ==
      +                           timer0->cnt_register_sz)
  3311   00270C  EE20 F006          	lfsr	2,6
  3312   002710  51D4               	movf	select_cnt_reg_size@timer0& (0+255),w,b
  3313   002712  26D9               	addwf	fsr2l,f,c
  3314   002714  51D5               	movf	(select_cnt_reg_size@timer0+1)& (0+255),w,b
  3315   002716  22DA               	addwfc	fsr2h,f,c
  3316   002718  04DE               	decf	postinc2,w,c
  3317   00271A  A4D8               	btfss	status,2,c
  3318   00271C  EF92  F013         	goto	u2621
  3319   002720  EF94  F013         	goto	u2620
  3320   002724                     u2621:
  3321   002724  EF97  F013         	goto	l3093
  3322   002728                     u2620:
  3323   002728                     
  3324                           ; BSR set to: 0
  3325                           ;MCAL_layer/TIMER0/timer0.c: 129:         {;MCAL_layer/TIMER0/timer0.c: 130:            
      +                           (T0CONbits.T08BIT = 1);
  3326   002728  8CD5               	bsf	213,6,c	;volatile
  3327                           
  3328                           ;MCAL_layer/TIMER0/timer0.c: 131:         }
  3329   00272A  EFA6  F013         	goto	l377
  3330   00272E                     l3093:
  3331                           
  3332                           ; BSR set to: 0
  3333   00272E  EE20 F006          	lfsr	2,6
  3334   002732  51D4               	movf	select_cnt_reg_size@timer0& (0+255),w,b
  3335   002734  26D9               	addwf	fsr2l,f,c
  3336   002736  51D5               	movf	(select_cnt_reg_size@timer0+1)& (0+255),w,b
  3337   002738  22DA               	addwfc	fsr2h,f,c
  3338   00273A  50DF               	movf	indf2,w,c
  3339   00273C  A4D8               	btfss	status,2,c
  3340   00273E  EFA3  F013         	goto	u2631
  3341   002742  EFA5  F013         	goto	u2630
  3342   002746                     u2631:
  3343   002746  EFA6  F013         	goto	l377
  3344   00274A                     u2630:
  3345   00274A                     
  3346                           ; BSR set to: 0
  3347                           ;MCAL_layer/TIMER0/timer0.c: 134:         {;MCAL_layer/TIMER0/timer0.c: 135:            
      +                           (T0CONbits.T08BIT = 0);
  3348   00274A  9CD5               	bcf	213,6,c	;volatile
  3349   00274C                     l377:
  3350                           
  3351                           ; BSR set to: 0
  3352   00274C  0012               	return		;funcret
  3353   00274E                     __end_of_select_cnt_reg_size:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _prescaler_timer_status *****************
  3357 ;; Defined at:
  3358 ;;		line 163 in file "MCAL_layer/TIMER0/timer0.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  timer0          2    0[BANK0 ] PTR struct .
  3361 ;;		 -> timer0_obj(9), 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;  ret             1    0        unsigned char 
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      unsigned char 
  3366 ;; Registers used:
  3367 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3373 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;Total ram usage:        3 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 12
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_Timer0_init
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text21
  3388   002468                     __ptext21:
  3389                           	callstack 0
  3390   002468                     _prescaler_timer_status:
  3391                           	callstack 16
  3392   002468                     
  3393                           ;MCAL_layer/TIMER0/timer0.c: 165:     if(((void*)0) == timer0)
  3394   002468  0100               	movlb	0	; () banked
  3395   00246A  51D4               	movf	prescaler_timer_status@timer0& (0+255),w,b
  3396   00246C  11D5               	iorwf	(prescaler_timer_status@timer0+1)& (0+255),w,b
  3397   00246E  A4D8               	btfss	status,2,c
  3398   002470  EF3C  F012         	goto	u2641
  3399   002474  EF3E  F012         	goto	u2640
  3400   002478                     u2641:
  3401   002478  EF40  F012         	goto	l3103
  3402   00247C                     u2640:
  3403   00247C                     
  3404                           ; BSR set to: 0
  3405   00247C  EF6D  F012         	goto	l396
  3406   002480                     l3103:
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;MCAL_layer/TIMER0/timer0.c: 168:     {;MCAL_layer/TIMER0/timer0.c: 169:         if(1 ==
      +                           timer0->prescaler_status)
  3410   002480  EE20 F004          	lfsr	2,4
  3411   002484  51D4               	movf	prescaler_timer_status@timer0& (0+255),w,b
  3412   002486  26D9               	addwf	fsr2l,f,c
  3413   002488  51D5               	movf	(prescaler_timer_status@timer0+1)& (0+255),w,b
  3414   00248A  22DA               	addwfc	fsr2h,f,c
  3415   00248C  04DE               	decf	postinc2,w,c
  3416   00248E  A4D8               	btfss	status,2,c
  3417   002490  EF4C  F012         	goto	u2651
  3418   002494  EF4E  F012         	goto	u2650
  3419   002498                     u2651:
  3420   002498  EF5E  F012         	goto	l3109
  3421   00249C                     u2650:
  3422   00249C                     
  3423                           ; BSR set to: 0
  3424                           ;MCAL_layer/TIMER0/timer0.c: 170:         {;MCAL_layer/TIMER0/timer0.c: 171:            
      +                           (T0CONbits.PSA = 0);
  3425   00249C  96D5               	bcf	213,3,c	;volatile
  3426   00249E                     
  3427                           ; BSR set to: 0
  3428                           ;MCAL_layer/TIMER0/timer0.c: 172:             T0CONbits.T0PS = timer0->prescaler_timer0_
      +                          value;
  3429   00249E  EE20 F005          	lfsr	2,5
  3430   0024A2  51D4               	movf	prescaler_timer_status@timer0& (0+255),w,b
  3431   0024A4  26D9               	addwf	fsr2l,f,c
  3432   0024A6  51D5               	movf	(prescaler_timer_status@timer0+1)& (0+255),w,b
  3433   0024A8  22DA               	addwfc	fsr2h,f,c
  3434   0024AA  50DF               	movf	indf2,w,c
  3435   0024AC  6FD6               	movwf	??_prescaler_timer_status& (0+255),b
  3436   0024AE  50D5               	movf	213,w,c	;volatile
  3437   0024B0  19D6               	xorwf	??_prescaler_timer_status& (0+255),w,b
  3438   0024B2  0BF8               	andlw	-8
  3439   0024B4  19D6               	xorwf	??_prescaler_timer_status& (0+255),w,b
  3440   0024B6  6ED5               	movwf	213,c	;volatile
  3441                           
  3442                           ;MCAL_layer/TIMER0/timer0.c: 173:         }
  3443   0024B8  EF6D  F012         	goto	l396
  3444   0024BC                     l3109:
  3445                           
  3446                           ; BSR set to: 0
  3447   0024BC  EE20 F004          	lfsr	2,4
  3448   0024C0  51D4               	movf	prescaler_timer_status@timer0& (0+255),w,b
  3449   0024C2  26D9               	addwf	fsr2l,f,c
  3450   0024C4  51D5               	movf	(prescaler_timer_status@timer0+1)& (0+255),w,b
  3451   0024C6  22DA               	addwfc	fsr2h,f,c
  3452   0024C8  50DF               	movf	indf2,w,c
  3453   0024CA  A4D8               	btfss	status,2,c
  3454   0024CC  EF6A  F012         	goto	u2661
  3455   0024D0  EF6C  F012         	goto	u2660
  3456   0024D4                     u2661:
  3457   0024D4  EF6D  F012         	goto	l396
  3458   0024D8                     u2660:
  3459   0024D8                     
  3460                           ; BSR set to: 0
  3461                           ;MCAL_layer/TIMER0/timer0.c: 175:             (T0CONbits.PSA = 1);
  3462   0024D8  86D5               	bsf	213,3,c	;volatile
  3463   0024DA                     l396:
  3464                           
  3465                           ; BSR set to: 0
  3466   0024DA  0012               	return		;funcret
  3467   0024DC                     __end_of_prescaler_timer_status:
  3468                           	callstack 0
  3469                           
  3470 ;; *************** function _InterruptManager *****************
  3471 ;; Defined at:
  3472 ;;		line 60 in file "MCAL_layer/Interrupt/interrupt_manager.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;		None
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;		None
  3477 ;; Return value:  Size  Location     Type
  3478 ;;                  1    wreg      void 
  3479 ;; Registers used:
  3480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;Total ram usage:       12 bytes
  3491 ;; Hardware stack levels used: 1
  3492 ;; Hardware stack levels required when called: 11
  3493 ;; This function calls:
  3494 ;;		_TIMER0_ISR
  3495 ;;		_TIMER1_ISR
  3496 ;; This function is called by:
  3497 ;;		Interrupt level 2
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	intcode
  3502   000008                     __pintcode:
  3503                           	callstack 0
  3504   000008                     _InterruptManager:
  3505                           	callstack 14
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;incstack = 0
  3509   000008  827D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3510   00000A  ED1F  F00F         	call	int_func,f	;refresh shadow registers
  3511                           
  3512                           	psect	intcode_body
  3513   001E3E                     __pintcode_body:
  3514                           	callstack 14
  3515   001E3E                     int_func:
  3516                           	callstack 14
  3517   001E3E  0006               	pop		; remove dummy address from shadow register refresh
  3518   001E40  CFFA F063          	movff	pclath,??_InterruptManager
  3519   001E44  CFFB F064          	movff	pclatu,??_InterruptManager+1
  3520   001E48  CFE1 F065          	movff	fsr1l,??_InterruptManager+2
  3521   001E4C  CFE2 F066          	movff	fsr1h,??_InterruptManager+3
  3522   001E50  CFD9 F067          	movff	fsr2l,??_InterruptManager+4
  3523   001E54  CFDA F068          	movff	fsr2h,??_InterruptManager+5
  3524   001E58  CFF3 F069          	movff	prodl,??_InterruptManager+6
  3525   001E5C  CFF4 F06A          	movff	prodh,??_InterruptManager+7
  3526   001E60  CFF6 F06B          	movff	tblptrl,??_InterruptManager+8
  3527   001E64  CFF7 F06C          	movff	tblptrh,??_InterruptManager+9
  3528   001E68  CFF8 F06D          	movff	tblptru,??_InterruptManager+10
  3529   001E6C  CFF5 F06E          	movff	tablat,??_InterruptManager+11
  3530   001E70                     
  3531                           ;MCAL_layer/Interrupt/interrupt_manager.c: 64:     if((0x01 == INTCONbits.TMR0IE) && (0x
      +                          01 == INTCONbits.TMR0IF)){
  3532   001E70  AAF2               	btfss	242,5,c	;volatile
  3533   001E72  EF3D  F00F         	goto	i2u336_41
  3534   001E76  EF3F  F00F         	goto	i2u336_40
  3535   001E7A                     i2u336_41:
  3536   001E7A  EF48  F00F         	goto	i2l318
  3537   001E7E                     i2u336_40:
  3538   001E7E  A4F2               	btfss	242,2,c	;volatile
  3539   001E80  EF44  F00F         	goto	i2u337_41
  3540   001E84  EF46  F00F         	goto	i2u337_40
  3541   001E88                     i2u337_41:
  3542   001E88  EF48  F00F         	goto	i2l318
  3543   001E8C                     i2u337_40:
  3544   001E8C                     
  3545                           ;MCAL_layer/Interrupt/interrupt_manager.c: 65:         TIMER0_ISR();
  3546   001E8C  EC10  F015         	call	_TIMER0_ISR	;wreg free
  3547   001E90                     i2l318:
  3548                           
  3549                           ;MCAL_layer/Interrupt/interrupt_manager.c: 69:     if((0x01 == PIE1bits.TMR1IE) && (0x01
      +                           == PIR1bits.TMR1IF)){
  3550   001E90  A09D               	btfss	157,0,c	;volatile
  3551   001E92  EF4D  F00F         	goto	i2u338_41
  3552   001E96  EF4F  F00F         	goto	i2u338_40
  3553   001E9A                     i2u338_41:
  3554   001E9A  EF58  F00F         	goto	i2l321
  3555   001E9E                     i2u338_40:
  3556   001E9E  A09E               	btfss	158,0,c	;volatile
  3557   001EA0  EF54  F00F         	goto	i2u339_41
  3558   001EA4  EF56  F00F         	goto	i2u339_40
  3559   001EA8                     i2u339_41:
  3560   001EA8  EF58  F00F         	goto	i2l321
  3561   001EAC                     i2u339_40:
  3562   001EAC                     
  3563                           ;MCAL_layer/Interrupt/interrupt_manager.c: 70:         TIMER1_ISR();
  3564   001EAC  EC8F  F015         	call	_TIMER1_ISR	;wreg free
  3565   001EB0                     i2l321:
  3566   001EB0  C06E  FFF5         	movff	??_InterruptManager+11,tablat
  3567   001EB4  C06D  FFF8         	movff	??_InterruptManager+10,tblptru
  3568   001EB8  C06C  FFF7         	movff	??_InterruptManager+9,tblptrh
  3569   001EBC  C06B  FFF6         	movff	??_InterruptManager+8,tblptrl
  3570   001EC0  C06A  FFF4         	movff	??_InterruptManager+7,prodh
  3571   001EC4  C069  FFF3         	movff	??_InterruptManager+6,prodl
  3572   001EC8  C068  FFDA         	movff	??_InterruptManager+5,fsr2h
  3573   001ECC  C067  FFD9         	movff	??_InterruptManager+4,fsr2l
  3574   001ED0  C066  FFE2         	movff	??_InterruptManager+3,fsr1h
  3575   001ED4  C065  FFE1         	movff	??_InterruptManager+2,fsr1l
  3576   001ED8  C064  FFFB         	movff	??_InterruptManager+1,pclatu
  3577   001EDC  C063  FFFA         	movff	??_InterruptManager,pclath
  3578   001EE0  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3579   001EE2  0011               	retfie		f
  3580   001EE4                     __end_of_InterruptManager:
  3581                           	callstack 0
  3582                           
  3583 ;; *************** function _TIMER1_ISR *****************
  3584 ;; Defined at:
  3585 ;;		line 152 in file "MCAL_layer/TIMER1/timer1.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		None
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;Total ram usage:        0 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_InterruptManager
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           	psect	text23
  3613   002B1E                     __ptext23:
  3614                           	callstack 0
  3615   002B1E                     _TIMER1_ISR:
  3616                           	callstack 24
  3617   002B1E                     
  3618                           ;MCAL_layer/TIMER1/timer1.c: 153:     (PIR1bits.TMR1IF = 0);
  3619   002B1E  909E               	bcf	158,0,c	;volatile
  3620   002B20  0012               	return		;funcret
  3621   002B22                     __end_of_TIMER1_ISR:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _TIMER0_ISR *****************
  3625 ;; Defined at:
  3626 ;;		line 192 in file "MCAL_layer/TIMER0/timer0.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 10
  3647 ;; This function calls:
  3648 ;;		NULL
  3649 ;;		_SET_FLAG
  3650 ;; This function is called by:
  3651 ;;		_InterruptManager
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text24
  3656   002A20                     __ptext24:
  3657                           	callstack 0
  3658   002A20                     _TIMER0_ISR:
  3659                           	callstack 14
  3660   002A20                     
  3661                           ;MCAL_layer/TIMER0/timer0.c: 193:     (INTCONbits.TMR0IF = 0);
  3662   002A20  94F2               	bcf	242,2,c	;volatile
  3663   002A22                     
  3664                           ;MCAL_layer/TIMER0/timer0.c: 194:    if(TIMER0_HUNDLER)
  3665   002A22  5077               	movf	_TIMER0_HUNDLER^0,w,c
  3666   002A24  1078               	iorwf	(_TIMER0_HUNDLER+1)^0,w,c
  3667   002A26  B4D8               	btfsc	status,2,c
  3668   002A28  EF18  F015         	goto	i2u302_41
  3669   002A2C  EF1A  F015         	goto	i2u302_40
  3670   002A30                     i2u302_41:
  3671   002A30  EF26  F015         	goto	i2l405
  3672   002A34                     i2u302_40:
  3673   002A34                     
  3674                           ;MCAL_layer/TIMER0/timer0.c: 195:        TIMER0_HUNDLER();
  3675   002A34  D802               	call	i2u303_48
  3676   002A36  EF26  F015         	goto	i2u303_49
  3677   002A3A                     i2u303_48:
  3678   002A3A  0005               	push	
  3679   002A3C  6EFA               	movwf	pclath,c
  3680   002A3E  5077               	movf	_TIMER0_HUNDLER^0,w,c
  3681   002A40  6EFD               	movwf	tosl,c
  3682   002A42  5078               	movf	(_TIMER0_HUNDLER+1)^0,w,c
  3683   002A44  6EFE               	movwf	tosh,c
  3684   002A46  6AFF               	clrf	tosu,c
  3685   002A48  50FA               	movf	pclath,w,c
  3686   002A4A  0012               	return		;indir
  3687   002A4C                     i2u303_49:
  3688   002A4C                     i2l405:
  3689   002A4C  0012               	return		;funcret
  3690   002A4E                     __end_of_TIMER0_ISR:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _SET_FLAG *****************
  3694 ;; Defined at:
  3695 ;;		line 86 in file "freq_meter.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;Total ram usage:        0 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 9
  3716 ;; This function calls:
  3717 ;;		_Timer1_read_value
  3718 ;;		_Timer1_write_value
  3719 ;;		_cnvert_uint32_to_string
  3720 ;;		_send_4_bit_string_data_pos
  3721 ;;		i2_send_4_bit_command
  3722 ;; This function is called by:
  3723 ;;		_TIMER0_ISR
  3724 ;; This function uses a non-reentrant model
  3725 ;;
  3726                           
  3727                           	psect	text25
  3728   002020                     __ptext25:
  3729                           	callstack 0
  3730   002020                     _SET_FLAG:
  3731                           	callstack 14
  3732   002020                     
  3733                           ;freq_meter.c: 87:     flag++;
  3734   002020  2A7A               	incf	_flag^0,f,c	;volatile
  3735   002022                     
  3736                           ;freq_meter.c: 88:     Timer1_read_value(&timer1_obj,&freq);
  3737   002022  0ECB               	movlw	low _timer1_obj
  3738   002024  6E01               	movwf	Timer1_read_value@timer1^0,c
  3739   002026  0E00               	movlw	high _timer1_obj
  3740   002028  6E02               	movwf	(Timer1_read_value@timer1+1)^0,c
  3741   00202A  0E7B               	movlw	low _freq
  3742   00202C  6E03               	movwf	Timer1_read_value@value^0,c
  3743   00202E  0E00               	movlw	high _freq
  3744   002030  6E04               	movwf	(Timer1_read_value@value+1)^0,c
  3745   002032  EC90  F014         	call	_Timer1_read_value	;wreg free
  3746   002036                     
  3747                           ;freq_meter.c: 89:     cnvert_uint32_to_string((freq + 1),arr);
  3748   002036  0E01               	movlw	1
  3749   002038  247B               	addwf	_freq^0,w,c	;volatile
  3750   00203A  6E53               	movwf	cnvert_uint32_to_string@value^0,c
  3751   00203C  0E00               	movlw	0
  3752   00203E  207C               	addwfc	(_freq+1)^0,w,c	;volatile
  3753   002040  6E54               	movwf	(cnvert_uint32_to_string@value+1)^0,c
  3754   002042  0EC0               	movlw	low _arr
  3755   002044  6E55               	movwf	cnvert_uint32_to_string@str^0,c
  3756   002046  0E00               	movlw	high _arr
  3757   002048  6E56               	movwf	(cnvert_uint32_to_string@str+1)^0,c
  3758   00204A  EC6E  F00E         	call	_cnvert_uint32_to_string	;wreg free
  3759   00204E                     
  3760                           ;freq_meter.c: 90:     if(1 == flag)
  3761   00204E  047A               	decf	_flag^0,w,c	;volatile
  3762   002050  A4D8               	btfss	status,2,c
  3763   002052  EF2D  F010         	goto	i2u297_41
  3764   002056  EF2F  F010         	goto	i2u297_40
  3765   00205A                     i2u297_41:
  3766   00205A  EF37  F010         	goto	i2l3389
  3767   00205E                     i2u297_40:
  3768   00205E                     
  3769                           ;freq_meter.c: 91:     {;freq_meter.c: 92:         send_4_bit_command(&lcd_4bit,0x01);
  3770   00205E  0EA7               	movlw	low _lcd_4bit
  3771   002060  6E0F               	movwf	i2send_4_bit_command@lcd^0,c
  3772   002062  0E00               	movlw	high _lcd_4bit
  3773   002064  6E10               	movwf	(i2send_4_bit_command@lcd+1)^0,c
  3774   002066  0E01               	movlw	1
  3775   002068  6E11               	movwf	i2send_4_bit_command@command^0,c
  3776   00206A  ECE0  F012         	call	i2_send_4_bit_command	;wreg free
  3777   00206E                     i2l3389:
  3778                           
  3779                           ;freq_meter.c: 94:     send_4_bit_string_data_pos(&lcd_4bit,1,1,"Frequency = ");
  3780   00206E  0EA7               	movlw	low _lcd_4bit
  3781   002070  6E18               	movwf	send_4_bit_string_data_pos@lcd^0,c
  3782   002072  0E00               	movlw	high _lcd_4bit
  3783   002074  6E19               	movwf	(send_4_bit_string_data_pos@lcd+1)^0,c
  3784   002076  0E01               	movlw	1
  3785   002078  6E1A               	movwf	send_4_bit_string_data_pos@row^0,c
  3786   00207A  0E01               	movlw	1
  3787   00207C  6E1B               	movwf	send_4_bit_string_data_pos@column^0,c
  3788   00207E  0E01               	movlw	low STR_5
  3789   002080  6E1C               	movwf	send_4_bit_string_data_pos@data^0,c
  3790   002082  0E10               	movlw	high STR_5
  3791   002084  6E1D               	movwf	(send_4_bit_string_data_pos@data+1)^0,c
  3792   002086  EC5E  F010         	call	_send_4_bit_string_data_pos	;wreg free
  3793   00208A                     
  3794                           ;freq_meter.c: 95:     send_4_bit_string_data_pos(&lcd_4bit,1,13,arr);
  3795   00208A  0EA7               	movlw	low _lcd_4bit
  3796   00208C  6E18               	movwf	send_4_bit_string_data_pos@lcd^0,c
  3797   00208E  0E00               	movlw	high _lcd_4bit
  3798   002090  6E19               	movwf	(send_4_bit_string_data_pos@lcd+1)^0,c
  3799   002092  0E01               	movlw	1
  3800   002094  6E1A               	movwf	send_4_bit_string_data_pos@row^0,c
  3801   002096  0E0D               	movlw	13
  3802   002098  6E1B               	movwf	send_4_bit_string_data_pos@column^0,c
  3803   00209A  0EC0               	movlw	low _arr
  3804   00209C  6E1C               	movwf	send_4_bit_string_data_pos@data^0,c
  3805   00209E  0E00               	movlw	high _arr
  3806   0020A0  6E1D               	movwf	(send_4_bit_string_data_pos@data+1)^0,c
  3807   0020A2  EC5E  F010         	call	_send_4_bit_string_data_pos	;wreg free
  3808   0020A6                     
  3809                           ;freq_meter.c: 96:     Timer1_write_value(&timer1_obj,0x0000);
  3810   0020A6  0ECB               	movlw	low _timer1_obj
  3811   0020A8  6E01               	movwf	Timer1_write_value@timer1^0,c
  3812   0020AA  0E00               	movlw	high _timer1_obj
  3813   0020AC  6E02               	movwf	(Timer1_write_value@timer1+1)^0,c
  3814   0020AE  0E00               	movlw	0
  3815   0020B0  6E04               	movwf	(Timer1_write_value@value+1)^0,c
  3816   0020B2  0E00               	movlw	0
  3817   0020B4  6E03               	movwf	Timer1_write_value@value^0,c
  3818   0020B6  EC7E  F015         	call	_Timer1_write_value	;wreg free
  3819   0020BA  0012               	return		;funcret
  3820   0020BC                     __end_of_SET_FLAG:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _send_4_bit_string_data_pos *****************
  3824 ;; Defined at:
  3825 ;;		line 111 in file "ECU_layer/LCD/ecu_lcd.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  lcd             2   23[COMRAM] PTR const struct .
  3828 ;;		 -> lcd_4bit(6), 
  3829 ;;  row             1   25[COMRAM] unsigned char 
  3830 ;;  column          1   26[COMRAM] unsigned char 
  3831 ;;  data            2   27[COMRAM] PTR unsigned char 
  3832 ;;		 -> STR_5(13), arr(11), 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  ret             1    0        unsigned char 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      unsigned char 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3844 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;Total ram usage:        6 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 4
  3851 ;; This function calls:
  3852 ;;		i2_lcd_4_bit_set_cursor
  3853 ;;		i2_send_4_bit_char_data
  3854 ;; This function is called by:
  3855 ;;		_SET_FLAG
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text26
  3860   0020BC                     __ptext26:
  3861                           	callstack 0
  3862   0020BC                     _send_4_bit_string_data_pos:
  3863                           	callstack 18
  3864   0020BC                     
  3865                           ;ECU_layer/LCD/ecu_lcd.c: 114:     if(((void*)0) == lcd)
  3866   0020BC  5018               	movf	send_4_bit_string_data_pos@lcd^0,w,c
  3867   0020BE  1019               	iorwf	(send_4_bit_string_data_pos@lcd+1)^0,w,c
  3868   0020C0  A4D8               	btfss	status,2,c
  3869   0020C2  EF65  F010         	goto	i2u246_41
  3870   0020C6  EF67  F010         	goto	i2u246_40
  3871   0020CA                     i2u246_41:
  3872   0020CA  EF69  F010         	goto	i2l3005
  3873   0020CE                     i2u246_40:
  3874   0020CE  EFA8  F010         	goto	i2l67
  3875   0020D2                     i2l3005:
  3876   0020D2  C018  F013         	movff	send_4_bit_string_data_pos@lcd,i2lcd_4_bit_set_cursor@lcd
  3877   0020D6  C019  F014         	movff	send_4_bit_string_data_pos@lcd+1,i2lcd_4_bit_set_cursor@lcd+1
  3878   0020DA  C01A  F015         	movff	send_4_bit_string_data_pos@row,i2lcd_4_bit_set_cursor@row
  3879   0020DE  C01B  F016         	movff	send_4_bit_string_data_pos@column,i2lcd_4_bit_set_cursor@column
  3880   0020E2  ECE5  F00C         	call	i2_lcd_4_bit_set_cursor	;wreg free
  3881                           
  3882                           ;ECU_layer/LCD/ecu_lcd.c: 119:       while(*data){
  3883   0020E6  EF8F  F010         	goto	i2l3011
  3884   0020EA                     i2l3007:
  3885   0020EA  C018  F00F         	movff	send_4_bit_string_data_pos@lcd,i2send_4_bit_char_data@lcd
  3886   0020EE  C019  F010         	movff	send_4_bit_string_data_pos@lcd+1,i2send_4_bit_char_data@lcd+1
  3887   0020F2  C01C  FFF6         	movff	send_4_bit_string_data_pos@data,tblptrl
  3888   0020F6  C01D  FFF7         	movff	send_4_bit_string_data_pos@data+1,tblptrh
  3889   0020FA  0E00               	movlw	low (__smallconst shr (0+16))
  3890   0020FC  6EF8               	movwf	tblptru,c
  3891   0020FE  0E0F               	movlw	(high __ramtop+-1)
  3892   002100  64F7               	cpfsgt	tblptrh,c
  3893   002102  D003               	bra	i2u247_47
  3894   002104  0008               	tblrd		*
  3895   002106  50F5               	movf	tablat,w,c
  3896   002108  D005               	bra	i2u247_40
  3897   00210A                     i2u247_47:
  3898   00210A  CFF6 FFE1          	movff	tblptrl,fsr1l
  3899   00210E  CFF7 FFE2          	movff	tblptrh,fsr1h
  3900   002112  50E7               	movf	indf1,w,c
  3901   002114                     i2u247_40:
  3902   002114  6E11               	movwf	i2send_4_bit_char_data@data^0,c
  3903   002116  ECA7  F012         	call	i2_send_4_bit_char_data	;wreg free
  3904   00211A  4A1C               	infsnz	send_4_bit_string_data_pos@data^0,f,c
  3905   00211C  2A1D               	incf	(send_4_bit_string_data_pos@data+1)^0,f,c
  3906   00211E                     i2l3011:
  3907                           
  3908                           ;ECU_layer/LCD/ecu_lcd.c: 119:       while(*data){
  3909   00211E  C01C  FFF6         	movff	send_4_bit_string_data_pos@data,tblptrl
  3910   002122  C01D  FFF7         	movff	send_4_bit_string_data_pos@data+1,tblptrh
  3911   002126  0E00               	movlw	low (__smallconst shr (0+16))
  3912   002128  6EF8               	movwf	tblptru,c
  3913   00212A  0E0F               	movlw	(high __ramtop+-1)
  3914   00212C  64F7               	cpfsgt	tblptrh,c
  3915   00212E  D003               	bra	i2u248_47
  3916   002130  0008               	tblrd		*
  3917   002132  50F5               	movf	tablat,w,c
  3918   002134  D005               	bra	i2u248_40
  3919   002136                     i2u248_47:
  3920   002136  CFF6 FFE1          	movff	tblptrl,fsr1l
  3921   00213A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3922   00213E  50E7               	movf	indf1,w,c
  3923   002140                     i2u248_40:
  3924   002140  0900               	iorlw	0
  3925   002142  A4D8               	btfss	status,2,c
  3926   002144  EFA6  F010         	goto	i2u249_41
  3927   002148  EFA8  F010         	goto	i2u249_40
  3928   00214C                     i2u249_41:
  3929   00214C  EF75  F010         	goto	i2l3007
  3930   002150                     i2u249_40:
  3931   002150                     i2l67:
  3932   002150  0012               	return		;funcret
  3933   002152                     __end_of_send_4_bit_string_data_pos:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function i2_send_4_bit_char_data *****************
  3937 ;; Defined at:
  3938 ;;		line 61 in file "ECU_layer/LCD/ecu_lcd.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  lcd             2   14[COMRAM] PTR const struct .
  3941 ;;		 -> lcd_4bit(6), 
  3942 ;;  data            1   16[COMRAM] unsigned char 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  ret             1   17[COMRAM] unsigned char 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      unsigned char 
  3947 ;; Registers used:
  3948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3954 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;Total ram usage:        4 bytes
  3959 ;; Hardware stack levels used: 1
  3960 ;; Hardware stack levels required when called: 2
  3961 ;; This function calls:
  3962 ;;		i2_gpio_pin_write_logic
  3963 ;;		i2_send_4_bit_enable
  3964 ;;		i2_send_4_bit_help
  3965 ;; This function is called by:
  3966 ;;		_send_4_bit_string_data_pos
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           	psect	text27
  3971   00254E                     __ptext27:
  3972                           	callstack 0
  3973   00254E                     i2_send_4_bit_char_data:
  3974                           	callstack 19
  3975   00254E                     
  3976                           ;ECU_layer/LCD/ecu_lcd.c: 63:     if(((void*)0) == lcd)
  3977   00254E  500F               	movf	i2send_4_bit_char_data@lcd^0,w,c
  3978   002550  1010               	iorwf	(i2send_4_bit_char_data@lcd+1)^0,w,c
  3979   002552  A4D8               	btfss	status,2,c
  3980   002554  EFAE  F012         	goto	i2u237_41
  3981   002558  EFB0  F012         	goto	i2u237_40
  3982   00255C                     i2u237_41:
  3983   00255C  EFB4  F012         	goto	i2l2939
  3984   002560                     i2u237_40:
  3985   002560                     
  3986                           ;ECU_layer/LCD/ecu_lcd.c: 64:         ret = (Std_ReturnType)0x00;
  3987   002560  0E00               	movlw	0
  3988   002562  6E12               	movwf	i2send_4_bit_char_data@ret^0,c
  3989   002564  EFDE  F012         	goto	i2l2941
  3990   002568                     i2l2939:
  3991                           
  3992                           ;ECU_layer/LCD/ecu_lcd.c: 66:     {;ECU_layer/LCD/ecu_lcd.c: 67:         ret = gpio_pin_
      +                          write_logic(&(lcd->rs_lcd),HIGH);
  3993   002568  C00F  F001         	movff	i2send_4_bit_char_data@lcd,i2gpio_pin_write_logic@Pin_Config
  3994   00256C  C010  F002         	movff	i2send_4_bit_char_data@lcd+1,i2gpio_pin_write_logic@Pin_Config+1
  3995   002570  0E01               	movlw	1
  3996   002572  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  3997   002574  ECEC  F00B         	call	i2_gpio_pin_write_logic	;wreg free
  3998   002578  6E12               	movwf	i2send_4_bit_char_data@ret^0,c
  3999                           
  4000                           ;ECU_layer/LCD/ecu_lcd.c: 68:         ret = send_4_bit_help(lcd,data >> 4);
  4001   00257A  C00F  F00B         	movff	i2send_4_bit_char_data@lcd,i2send_4_bit_help@lcd
  4002   00257E  C010  F00C         	movff	i2send_4_bit_char_data@lcd+1,i2send_4_bit_help@lcd+1
  4003   002582  3811               	swapf	i2send_4_bit_char_data@data^0,w,c
  4004   002584  0B0F               	andlw	15
  4005   002586  6E0D               	movwf	i2send_4_bit_help@data_command^0,c
  4006   002588  ECF2  F010         	call	i2_send_4_bit_help	;wreg free
  4007   00258C  6E12               	movwf	i2send_4_bit_char_data@ret^0,c
  4008                           
  4009                           ;ECU_layer/LCD/ecu_lcd.c: 69:         ret = send_4_bit_enable(lcd);
  4010   00258E  C00F  F00B         	movff	i2send_4_bit_char_data@lcd,i2send_4_bit_enable@lcd
  4011   002592  C010  F00C         	movff	i2send_4_bit_char_data@lcd+1,i2send_4_bit_enable@lcd+1
  4012   002596  EC20  F014         	call	i2_send_4_bit_enable	;wreg free
  4013   00259A  6E12               	movwf	i2send_4_bit_char_data@ret^0,c
  4014                           
  4015                           ;ECU_layer/LCD/ecu_lcd.c: 70:         ret = send_4_bit_help(lcd,data);
  4016   00259C  C00F  F00B         	movff	i2send_4_bit_char_data@lcd,i2send_4_bit_help@lcd
  4017   0025A0  C010  F00C         	movff	i2send_4_bit_char_data@lcd+1,i2send_4_bit_help@lcd+1
  4018   0025A4  C011  F00D         	movff	i2send_4_bit_char_data@data,i2send_4_bit_help@data_command
  4019   0025A8  ECF2  F010         	call	i2_send_4_bit_help	;wreg free
  4020   0025AC  6E12               	movwf	i2send_4_bit_char_data@ret^0,c
  4021                           
  4022                           ;ECU_layer/LCD/ecu_lcd.c: 71:         ret = send_4_bit_enable(lcd);
  4023   0025AE  C00F  F00B         	movff	i2send_4_bit_char_data@lcd,i2send_4_bit_enable@lcd
  4024   0025B2  C010  F00C         	movff	i2send_4_bit_char_data@lcd+1,i2send_4_bit_enable@lcd+1
  4025   0025B6  EC20  F014         	call	i2_send_4_bit_enable	;wreg free
  4026   0025BA  6E12               	movwf	i2send_4_bit_char_data@ret^0,c
  4027   0025BC                     i2l2941:
  4028                           
  4029                           ;ECU_layer/LCD/ecu_lcd.c: 73:              return ret;
  4030   0025BC  5012               	movf	i2send_4_bit_char_data@ret^0,w,c
  4031   0025BE  0012               	return		;funcret
  4032   0025C0                     __end_ofi2_send_4_bit_char_data:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function i2_lcd_4_bit_set_cursor *****************
  4036 ;; Defined at:
  4037 ;;		line 139 in file "ECU_layer/LCD/ecu_lcd.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;  lcd             2   18[COMRAM] PTR const struct .
  4040 ;;		 -> lcd_4bit(6), 
  4041 ;;  row             1   20[COMRAM] unsigned char 
  4042 ;;  column          1   21[COMRAM] unsigned char 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  ret             1   22[COMRAM] unsigned char 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      unsigned char 
  4047 ;; Registers used:
  4048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;Total ram usage:        5 bytes
  4059 ;; Hardware stack levels used: 1
  4060 ;; Hardware stack levels required when called: 3
  4061 ;; This function calls:
  4062 ;;		i2_send_4_bit_command
  4063 ;; This function is called by:
  4064 ;;		_send_4_bit_string_data_pos
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text28
  4069   0019CA                     __ptext28:
  4070                           	callstack 0
  4071   0019CA                     i2_lcd_4_bit_set_cursor:
  4072                           	callstack 18
  4073   0019CA                     
  4074                           ;ECU_layer/LCD/ecu_lcd.c: 140:                     Std_ReturnType ret = (Std_ReturnType)
      +                          0x01;
  4075   0019CA  0E01               	movlw	1
  4076   0019CC  6E17               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  4077   0019CE                     
  4078                           ;ECU_layer/LCD/ecu_lcd.c: 141:                  column--;
  4079   0019CE  0616               	decf	i2lcd_4_bit_set_cursor@column^0,f,c
  4080   0019D0                     
  4081                           ;ECU_layer/LCD/ecu_lcd.c: 142:     if(((void*)0) == lcd)
  4082   0019D0  5013               	movf	i2lcd_4_bit_set_cursor@lcd^0,w,c
  4083   0019D2  1014               	iorwf	(i2lcd_4_bit_set_cursor@lcd+1)^0,w,c
  4084   0019D4  A4D8               	btfss	status,2,c
  4085   0019D6  EFEF  F00C         	goto	i2u238_41
  4086   0019DA  EFF1  F00C         	goto	i2u238_40
  4087   0019DE                     i2u238_41:
  4088   0019DE  EFF5  F00C         	goto	i2l2953
  4089   0019E2                     i2u238_40:
  4090   0019E2                     
  4091                           ;ECU_layer/LCD/ecu_lcd.c: 143:         ret = (Std_ReturnType)0x00;
  4092   0019E2  0E00               	movlw	0
  4093   0019E4  6E17               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  4094   0019E6  EF48  F00D         	goto	i2l2969
  4095   0019EA                     i2l2953:
  4096                           
  4097                           ;ECU_layer/LCD/ecu_lcd.c: 145:     {;ECU_layer/LCD/ecu_lcd.c: 146:         if(row == 1)
  4098   0019EA  0415               	decf	i2lcd_4_bit_set_cursor@row^0,w,c
  4099   0019EC  A4D8               	btfss	status,2,c
  4100   0019EE  EFFB  F00C         	goto	i2u239_41
  4101   0019F2  EFFD  F00C         	goto	i2u239_40
  4102   0019F6                     i2u239_41:
  4103   0019F6  EF09  F00D         	goto	i2l2957
  4104   0019FA                     i2u239_40:
  4105   0019FA                     
  4106                           ;ECU_layer/LCD/ecu_lcd.c: 147:         {;ECU_layer/LCD/ecu_lcd.c: 148:             ret =
      +                           send_4_bit_command(lcd,(0x80 + column));
  4107   0019FA  C013  F00F         	movff	i2lcd_4_bit_set_cursor@lcd,i2send_4_bit_command@lcd
  4108   0019FE  C014  F010         	movff	i2lcd_4_bit_set_cursor@lcd+1,i2send_4_bit_command@lcd+1
  4109   001A02  5016               	movf	i2lcd_4_bit_set_cursor@column^0,w,c
  4110   001A04  0F80               	addlw	128
  4111   001A06  6E11               	movwf	i2send_4_bit_command@command^0,c
  4112   001A08  ECE0  F012         	call	i2_send_4_bit_command	;wreg free
  4113   001A0C  6E17               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  4114                           
  4115                           ;ECU_layer/LCD/ecu_lcd.c: 149:         }
  4116   001A0E  EF48  F00D         	goto	i2l2969
  4117   001A12                     i2l2957:
  4118   001A12  0E02               	movlw	2
  4119   001A14  1815               	xorwf	i2lcd_4_bit_set_cursor@row^0,w,c
  4120   001A16  A4D8               	btfss	status,2,c
  4121   001A18  EF10  F00D         	goto	i2u240_41
  4122   001A1C  EF12  F00D         	goto	i2u240_40
  4123   001A20                     i2u240_41:
  4124   001A20  EF1E  F00D         	goto	i2l2961
  4125   001A24                     i2u240_40:
  4126   001A24                     
  4127                           ;ECU_layer/LCD/ecu_lcd.c: 151:         {;ECU_layer/LCD/ecu_lcd.c: 152:             ret =
      +                           send_4_bit_command(lcd,(0xC0 + column));
  4128   001A24  C013  F00F         	movff	i2lcd_4_bit_set_cursor@lcd,i2send_4_bit_command@lcd
  4129   001A28  C014  F010         	movff	i2lcd_4_bit_set_cursor@lcd+1,i2send_4_bit_command@lcd+1
  4130   001A2C  5016               	movf	i2lcd_4_bit_set_cursor@column^0,w,c
  4131   001A2E  0FC0               	addlw	192
  4132   001A30  6E11               	movwf	i2send_4_bit_command@command^0,c
  4133   001A32  ECE0  F012         	call	i2_send_4_bit_command	;wreg free
  4134   001A36  6E17               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  4135                           
  4136                           ;ECU_layer/LCD/ecu_lcd.c: 153:         }
  4137   001A38  EF48  F00D         	goto	i2l2969
  4138   001A3C                     i2l2961:
  4139   001A3C  0E03               	movlw	3
  4140   001A3E  1815               	xorwf	i2lcd_4_bit_set_cursor@row^0,w,c
  4141   001A40  A4D8               	btfss	status,2,c
  4142   001A42  EF25  F00D         	goto	i2u241_41
  4143   001A46  EF27  F00D         	goto	i2u241_40
  4144   001A4A                     i2u241_41:
  4145   001A4A  EF33  F00D         	goto	i2l2965
  4146   001A4E                     i2u241_40:
  4147   001A4E                     
  4148                           ;ECU_layer/LCD/ecu_lcd.c: 155:             ret = send_4_bit_command(lcd,(0x94 + column))
      +                          ;
  4149   001A4E  C013  F00F         	movff	i2lcd_4_bit_set_cursor@lcd,i2send_4_bit_command@lcd
  4150   001A52  C014  F010         	movff	i2lcd_4_bit_set_cursor@lcd+1,i2send_4_bit_command@lcd+1
  4151   001A56  5016               	movf	i2lcd_4_bit_set_cursor@column^0,w,c
  4152   001A58  0F94               	addlw	148
  4153   001A5A  6E11               	movwf	i2send_4_bit_command@command^0,c
  4154   001A5C  ECE0  F012         	call	i2_send_4_bit_command	;wreg free
  4155   001A60  6E17               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  4156                           
  4157                           ;ECU_layer/LCD/ecu_lcd.c: 156:         }
  4158   001A62  EF48  F00D         	goto	i2l2969
  4159   001A66                     i2l2965:
  4160   001A66  0E04               	movlw	4
  4161   001A68  1815               	xorwf	i2lcd_4_bit_set_cursor@row^0,w,c
  4162   001A6A  A4D8               	btfss	status,2,c
  4163   001A6C  EF3A  F00D         	goto	i2u242_41
  4164   001A70  EF3C  F00D         	goto	i2u242_40
  4165   001A74                     i2u242_41:
  4166   001A74  EF48  F00D         	goto	i2l78
  4167   001A78                     i2u242_40:
  4168   001A78                     
  4169                           ;ECU_layer/LCD/ecu_lcd.c: 158:             ret = send_4_bit_command(lcd,(0xD4 + column))
      +                          ;
  4170   001A78  C013  F00F         	movff	i2lcd_4_bit_set_cursor@lcd,i2send_4_bit_command@lcd
  4171   001A7C  C014  F010         	movff	i2lcd_4_bit_set_cursor@lcd+1,i2send_4_bit_command@lcd+1
  4172   001A80  5016               	movf	i2lcd_4_bit_set_cursor@column^0,w,c
  4173   001A82  0FD4               	addlw	212
  4174   001A84  6E11               	movwf	i2send_4_bit_command@command^0,c
  4175   001A86  ECE0  F012         	call	i2_send_4_bit_command	;wreg free
  4176   001A8A  6E17               	movwf	i2lcd_4_bit_set_cursor@ret^0,c
  4177   001A8C  EF48  F00D         	goto	i2l2969
  4178   001A90                     i2l78:
  4179   001A90                     i2l2969:
  4180                           
  4181                           ;ECU_layer/LCD/ecu_lcd.c: 162:         return ret;
  4182   001A90  5017               	movf	i2lcd_4_bit_set_cursor@ret^0,w,c
  4183   001A92  0012               	return		;funcret
  4184   001A94                     __end_ofi2_lcd_4_bit_set_cursor:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function i2_send_4_bit_command *****************
  4188 ;; Defined at:
  4189 ;;		line 47 in file "ECU_layer/LCD/ecu_lcd.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  lcd             2   14[COMRAM] PTR const struct .
  4192 ;;		 -> lcd_4bit(6), 
  4193 ;;  command         1   16[COMRAM] unsigned char 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  ret             1   17[COMRAM] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      unsigned char 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4205 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4209 ;;Total ram usage:        4 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 2
  4212 ;; This function calls:
  4213 ;;		i2_gpio_pin_write_logic
  4214 ;;		i2_send_4_bit_enable
  4215 ;;		i2_send_4_bit_help
  4216 ;; This function is called by:
  4217 ;;		_SET_FLAG
  4218 ;;		i2_lcd_4_bit_set_cursor
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text29
  4223   0025C0                     __ptext29:
  4224                           	callstack 0
  4225   0025C0                     i2_send_4_bit_command:
  4226                           	callstack 20
  4227   0025C0                     
  4228                           ;ECU_layer/LCD/ecu_lcd.c: 49:     if(((void*)0) == lcd)
  4229   0025C0  500F               	movf	i2send_4_bit_command@lcd^0,w,c
  4230   0025C2  1010               	iorwf	(i2send_4_bit_command@lcd+1)^0,w,c
  4231   0025C4  A4D8               	btfss	status,2,c
  4232   0025C6  EFE7  F012         	goto	i2u222_41
  4233   0025CA  EFE9  F012         	goto	i2u222_40
  4234   0025CE                     i2u222_41:
  4235   0025CE  EFED  F012         	goto	i2l2823
  4236   0025D2                     i2u222_40:
  4237   0025D2                     
  4238                           ;ECU_layer/LCD/ecu_lcd.c: 50:         ret = (Std_ReturnType)0x00;
  4239   0025D2  0E00               	movlw	0
  4240   0025D4  6E12               	movwf	i2send_4_bit_command@ret^0,c
  4241   0025D6  EF17  F013         	goto	i2l2825
  4242   0025DA                     i2l2823:
  4243                           
  4244                           ;ECU_layer/LCD/ecu_lcd.c: 52:     {;ECU_layer/LCD/ecu_lcd.c: 53:         ret = gpio_pin_
      +                          write_logic(&(lcd->rs_lcd),LOW);
  4245   0025DA  C00F  F001         	movff	i2send_4_bit_command@lcd,i2gpio_pin_write_logic@Pin_Config
  4246   0025DE  C010  F002         	movff	i2send_4_bit_command@lcd+1,i2gpio_pin_write_logic@Pin_Config+1
  4247   0025E2  0E00               	movlw	0
  4248   0025E4  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  4249   0025E6  ECEC  F00B         	call	i2_gpio_pin_write_logic	;wreg free
  4250   0025EA  6E12               	movwf	i2send_4_bit_command@ret^0,c
  4251                           
  4252                           ;ECU_layer/LCD/ecu_lcd.c: 54:         ret = send_4_bit_help(lcd,command >> 4);
  4253   0025EC  C00F  F00B         	movff	i2send_4_bit_command@lcd,i2send_4_bit_help@lcd
  4254   0025F0  C010  F00C         	movff	i2send_4_bit_command@lcd+1,i2send_4_bit_help@lcd+1
  4255   0025F4  3811               	swapf	i2send_4_bit_command@command^0,w,c
  4256   0025F6  0B0F               	andlw	15
  4257   0025F8  6E0D               	movwf	i2send_4_bit_help@data_command^0,c
  4258   0025FA  ECF2  F010         	call	i2_send_4_bit_help	;wreg free
  4259   0025FE  6E12               	movwf	i2send_4_bit_command@ret^0,c
  4260                           
  4261                           ;ECU_layer/LCD/ecu_lcd.c: 55:         ret = send_4_bit_enable(lcd);
  4262   002600  C00F  F00B         	movff	i2send_4_bit_command@lcd,i2send_4_bit_enable@lcd
  4263   002604  C010  F00C         	movff	i2send_4_bit_command@lcd+1,i2send_4_bit_enable@lcd+1
  4264   002608  EC20  F014         	call	i2_send_4_bit_enable	;wreg free
  4265   00260C  6E12               	movwf	i2send_4_bit_command@ret^0,c
  4266                           
  4267                           ;ECU_layer/LCD/ecu_lcd.c: 56:         ret = send_4_bit_help(lcd,command);
  4268   00260E  C00F  F00B         	movff	i2send_4_bit_command@lcd,i2send_4_bit_help@lcd
  4269   002612  C010  F00C         	movff	i2send_4_bit_command@lcd+1,i2send_4_bit_help@lcd+1
  4270   002616  C011  F00D         	movff	i2send_4_bit_command@command,i2send_4_bit_help@data_command
  4271   00261A  ECF2  F010         	call	i2_send_4_bit_help	;wreg free
  4272   00261E  6E12               	movwf	i2send_4_bit_command@ret^0,c
  4273                           
  4274                           ;ECU_layer/LCD/ecu_lcd.c: 57:         ret = send_4_bit_enable(lcd);
  4275   002620  C00F  F00B         	movff	i2send_4_bit_command@lcd,i2send_4_bit_enable@lcd
  4276   002624  C010  F00C         	movff	i2send_4_bit_command@lcd+1,i2send_4_bit_enable@lcd+1
  4277   002628  EC20  F014         	call	i2_send_4_bit_enable	;wreg free
  4278   00262C  6E12               	movwf	i2send_4_bit_command@ret^0,c
  4279   00262E                     i2l2825:
  4280                           
  4281                           ;ECU_layer/LCD/ecu_lcd.c: 59:              return ret;
  4282   00262E  5012               	movf	i2send_4_bit_command@ret^0,w,c
  4283   002630  0012               	return		;funcret
  4284   002632                     __end_ofi2_send_4_bit_command:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function i2_send_4_bit_help *****************
  4288 ;; Defined at:
  4289 ;;		line 125 in file "ECU_layer/LCD/ecu_lcd.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;  lcd             2   10[COMRAM] PTR const struct .
  4292 ;;		 -> lcd_4bit(6), 
  4293 ;;  data_command    1   12[COMRAM] unsigned char 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  ret             1   13[COMRAM] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      unsigned char 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4305 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;Total ram usage:        4 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 1
  4312 ;; This function calls:
  4313 ;;		i2_gpio_pin_write_logic
  4314 ;; This function is called by:
  4315 ;;		i2_send_4_bit_command
  4316 ;;		i2_send_4_bit_char_data
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text30
  4321   0021E4                     __ptext30:
  4322                           	callstack 0
  4323   0021E4                     i2_send_4_bit_help:
  4324                           	callstack 20
  4325   0021E4                     
  4326                           ;ECU_layer/LCD/ecu_lcd.c: 127:     if(((void*)0) == lcd)
  4327   0021E4  500B               	movf	i2send_4_bit_help@lcd^0,w,c
  4328   0021E6  100C               	iorwf	(i2send_4_bit_help@lcd+1)^0,w,c
  4329   0021E8  A4D8               	btfss	status,2,c
  4330   0021EA  EFF9  F010         	goto	i2u214_41
  4331   0021EE  EFFB  F010         	goto	i2u214_40
  4332   0021F2                     i2u214_41:
  4333   0021F2  EFFF  F010         	goto	i2l2781
  4334   0021F6                     i2u214_40:
  4335   0021F6                     
  4336                           ;ECU_layer/LCD/ecu_lcd.c: 128:         ret = (Std_ReturnType)0x00;
  4337   0021F6  0E00               	movlw	0
  4338   0021F8  6E0E               	movwf	i2send_4_bit_help@ret^0,c
  4339   0021FA  EF34  F011         	goto	i2l2783
  4340   0021FE                     i2l2781:
  4341                           
  4342                           ;ECU_layer/LCD/ecu_lcd.c: 130:     {;ECU_layer/LCD/ecu_lcd.c: 131:            ret = gpio
      +                          _pin_write_logic(&(lcd->lcd_pin[0]),((data_command >> 0)& (uint8)0x01));
  4343   0021FE  0E01               	movlw	1
  4344   002200  240B               	addwf	i2send_4_bit_help@lcd^0,w,c
  4345   002202  6E01               	movwf	i2gpio_pin_write_logic@Pin_Config^0,c
  4346   002204  0E00               	movlw	0
  4347   002206  200C               	addwfc	(i2send_4_bit_help@lcd+1)^0,w,c
  4348   002208  6E02               	movwf	(i2gpio_pin_write_logic@Pin_Config+1)^0,c
  4349   00220A  500D               	movf	i2send_4_bit_help@data_command^0,w,c
  4350   00220C  0B01               	andlw	1
  4351   00220E  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  4352   002210  ECEC  F00B         	call	i2_gpio_pin_write_logic	;wreg free
  4353   002214  6E0E               	movwf	i2send_4_bit_help@ret^0,c
  4354                           
  4355                           ;ECU_layer/LCD/ecu_lcd.c: 132:            ret = gpio_pin_write_logic(&(lcd->lcd_pin[1]),
      +                          ((data_command >> 1)& (uint8)0x01));
  4356   002216  0E02               	movlw	2
  4357   002218  240B               	addwf	i2send_4_bit_help@lcd^0,w,c
  4358   00221A  6E01               	movwf	i2gpio_pin_write_logic@Pin_Config^0,c
  4359   00221C  0E00               	movlw	0
  4360   00221E  200C               	addwfc	(i2send_4_bit_help@lcd+1)^0,w,c
  4361   002220  6E02               	movwf	(i2gpio_pin_write_logic@Pin_Config+1)^0,c
  4362   002222  90D8               	bcf	status,0,c
  4363   002224  300D               	rrcf	i2send_4_bit_help@data_command^0,w,c
  4364   002226  0B01               	andlw	1
  4365   002228  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  4366   00222A  ECEC  F00B         	call	i2_gpio_pin_write_logic	;wreg free
  4367   00222E  6E0E               	movwf	i2send_4_bit_help@ret^0,c
  4368                           
  4369                           ;ECU_layer/LCD/ecu_lcd.c: 133:            ret = gpio_pin_write_logic(&(lcd->lcd_pin[2]),
      +                          ((data_command >> 2)& (uint8)0x01));
  4370   002230  0E03               	movlw	3
  4371   002232  240B               	addwf	i2send_4_bit_help@lcd^0,w,c
  4372   002234  6E01               	movwf	i2gpio_pin_write_logic@Pin_Config^0,c
  4373   002236  0E00               	movlw	0
  4374   002238  200C               	addwfc	(i2send_4_bit_help@lcd+1)^0,w,c
  4375   00223A  6E02               	movwf	(i2gpio_pin_write_logic@Pin_Config+1)^0,c
  4376   00223C  400D               	rrncf	i2send_4_bit_help@data_command^0,w,c
  4377   00223E  42E8               	rrncf	wreg,f,c
  4378   002240  0B3F               	andlw	63
  4379   002242  0B01               	andlw	1
  4380   002244  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  4381   002246  ECEC  F00B         	call	i2_gpio_pin_write_logic	;wreg free
  4382   00224A  6E0E               	movwf	i2send_4_bit_help@ret^0,c
  4383                           
  4384                           ;ECU_layer/LCD/ecu_lcd.c: 134:            ret = gpio_pin_write_logic(&(lcd->lcd_pin[3]),
      +                          ((data_command >> 3)& (uint8)0x01));
  4385   00224C  0E04               	movlw	4
  4386   00224E  240B               	addwf	i2send_4_bit_help@lcd^0,w,c
  4387   002250  6E01               	movwf	i2gpio_pin_write_logic@Pin_Config^0,c
  4388   002252  0E00               	movlw	0
  4389   002254  200C               	addwfc	(i2send_4_bit_help@lcd+1)^0,w,c
  4390   002256  6E02               	movwf	(i2gpio_pin_write_logic@Pin_Config+1)^0,c
  4391   002258  380D               	swapf	i2send_4_bit_help@data_command^0,w,c
  4392   00225A  46E8               	rlncf	wreg,f,c
  4393   00225C  0B1F               	andlw	31
  4394   00225E  0B01               	andlw	1
  4395   002260  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  4396   002262  ECEC  F00B         	call	i2_gpio_pin_write_logic	;wreg free
  4397   002266  6E0E               	movwf	i2send_4_bit_help@ret^0,c
  4398   002268                     i2l2783:
  4399                           
  4400                           ;ECU_layer/LCD/ecu_lcd.c: 136:              return ret;
  4401   002268  500E               	movf	i2send_4_bit_help@ret^0,w,c
  4402   00226A  0012               	return		;funcret
  4403   00226C                     __end_ofi2_send_4_bit_help:
  4404                           	callstack 0
  4405                           
  4406 ;; *************** function i2_send_4_bit_enable *****************
  4407 ;; Defined at:
  4408 ;;		line 75 in file "ECU_layer/LCD/ecu_lcd.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  lcd             2   10[COMRAM] PTR const struct .
  4411 ;;		 -> lcd_4bit(6), 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  ret             1   12[COMRAM] unsigned char 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      unsigned char 
  4416 ;; Registers used:
  4417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;Total ram usage:        3 bytes
  4428 ;; Hardware stack levels used: 1
  4429 ;; Hardware stack levels required when called: 1
  4430 ;; This function calls:
  4431 ;;		i2_gpio_pin_write_logic
  4432 ;; This function is called by:
  4433 ;;		i2_send_4_bit_command
  4434 ;;		i2_send_4_bit_char_data
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text31
  4439   002840                     __ptext31:
  4440                           	callstack 0
  4441   002840                     i2_send_4_bit_enable:
  4442                           	callstack 20
  4443   002840                     
  4444                           ;ECU_layer/LCD/ecu_lcd.c: 77:     if(((void*)0) == lcd)
  4445   002840  500B               	movf	i2send_4_bit_enable@lcd^0,w,c
  4446   002842  100C               	iorwf	(i2send_4_bit_enable@lcd+1)^0,w,c
  4447   002844  A4D8               	btfss	status,2,c
  4448   002846  EF27  F014         	goto	i2u213_41
  4449   00284A  EF29  F014         	goto	i2u213_40
  4450   00284E                     i2u213_41:
  4451   00284E  EF2D  F014         	goto	i2l2767
  4452   002852                     i2u213_40:
  4453   002852                     
  4454                           ;ECU_layer/LCD/ecu_lcd.c: 78:         ret = (Std_ReturnType)0x00;
  4455   002852  0E00               	movlw	0
  4456   002854  6E0D               	movwf	i2send_4_bit_enable@ret^0,c
  4457   002856  EF45  F014         	goto	i2l2771
  4458   00285A                     i2l2767:
  4459   00285A  0E05               	movlw	5
  4460   00285C  240B               	addwf	i2send_4_bit_enable@lcd^0,w,c
  4461   00285E  6E01               	movwf	i2gpio_pin_write_logic@Pin_Config^0,c
  4462   002860  0E00               	movlw	0
  4463   002862  200C               	addwfc	(i2send_4_bit_enable@lcd+1)^0,w,c
  4464   002864  6E02               	movwf	(i2gpio_pin_write_logic@Pin_Config+1)^0,c
  4465   002866  0E01               	movlw	1
  4466   002868  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  4467   00286A  ECEC  F00B         	call	i2_gpio_pin_write_logic	;wreg free
  4468   00286E                     
  4469                           ;ECU_layer/LCD/ecu_lcd.c: 82:         _delay((unsigned long)((5)*(4000000UL/4000000.0)))
      +                          ;
  4470   00286E  D000               	nop2		;2 cycle nop
  4471   002870  D000               	nop2		;2 cycle nop
  4472   002872  F000               	nop	
  4473                           
  4474                           ;ECU_layer/LCD/ecu_lcd.c: 83:         ret = gpio_pin_write_logic(&(lcd->en_lcd),LOW);
  4475   002874  0E05               	movlw	5
  4476   002876  240B               	addwf	i2send_4_bit_enable@lcd^0,w,c
  4477   002878  6E01               	movwf	i2gpio_pin_write_logic@Pin_Config^0,c
  4478   00287A  0E00               	movlw	0
  4479   00287C  200C               	addwfc	(i2send_4_bit_enable@lcd+1)^0,w,c
  4480   00287E  6E02               	movwf	(i2gpio_pin_write_logic@Pin_Config+1)^0,c
  4481   002880  0E00               	movlw	0
  4482   002882  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
  4483   002884  ECEC  F00B         	call	i2_gpio_pin_write_logic	;wreg free
  4484   002888  6E0D               	movwf	i2send_4_bit_enable@ret^0,c
  4485   00288A                     i2l2771:
  4486                           
  4487                           ;ECU_layer/LCD/ecu_lcd.c: 85:         return ret;
  4488   00288A  500D               	movf	i2send_4_bit_enable@ret^0,w,c
  4489   00288C  0012               	return		;funcret
  4490   00288E                     __end_ofi2_send_4_bit_enable:
  4491                           	callstack 0
  4492                           
  4493 ;; *************** function i2_gpio_pin_write_logic *****************
  4494 ;; Defined at:
  4495 ;;		line 75 in file "MCAL_layer/GPIO/gpio.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;  Pin_Config      2    0[COMRAM] PTR const struct .
  4498 ;;		 -> lcd_4bit.lcd_pin(4), lcd_4bit(6), 
  4499 ;;  logic           1    2[COMRAM] enum E2968
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;  ret             1    9[COMRAM] unsigned char 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      unsigned char 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4511 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;Total ram usage:       10 bytes
  4516 ;; Hardware stack levels used: 1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		i2_send_4_bit_command
  4521 ;;		i2_send_4_bit_char_data
  4522 ;;		i2_send_4_bit_enable
  4523 ;;		i2_send_4_bit_help
  4524 ;; This function uses a non-reentrant model
  4525 ;;
  4526                           
  4527                           	psect	text32
  4528   0017D8                     __ptext32:
  4529                           	callstack 0
  4530   0017D8                     i2_gpio_pin_write_logic:
  4531                           	callstack 20
  4532   0017D8                     
  4533                           ;MCAL_layer/GPIO/gpio.c: 76:      Std_ReturnType ret = (Std_ReturnType)0x01;
  4534   0017D8  0E01               	movlw	1
  4535   0017DA  6E0A               	movwf	i2gpio_pin_write_logic@ret^0,c
  4536   0017DC                     
  4537                           ;MCAL_layer/GPIO/gpio.c: 77:     if(((void*)0) == Pin_Config || Pin_Config->pin > 8)
  4538   0017DC  5001               	movf	i2gpio_pin_write_logic@Pin_Config^0,w,c
  4539   0017DE  1002               	iorwf	(i2gpio_pin_write_logic@Pin_Config+1)^0,w,c
  4540   0017E0  B4D8               	btfsc	status,2,c
  4541   0017E2  EFF5  F00B         	goto	i2u204_41
  4542   0017E6  EFF7  F00B         	goto	i2u204_40
  4543   0017EA                     i2u204_41:
  4544   0017EA  EF08  F00C         	goto	i2l2717
  4545   0017EE                     i2u204_40:
  4546   0017EE  C001  FFD9         	movff	i2gpio_pin_write_logic@Pin_Config,fsr2l
  4547   0017F2  C002  FFDA         	movff	i2gpio_pin_write_logic@Pin_Config+1,fsr2h
  4548   0017F6  30DF               	rrcf	223,w,c
  4549   0017F8  32E8               	rrcf	wreg,f,c
  4550   0017FA  32E8               	rrcf	wreg,f,c
  4551   0017FC  0B07               	andlw	7
  4552   0017FE  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
  4553   001800  0E08               	movlw	8
  4554   001802  6404               	cpfsgt	??i2_gpio_pin_write_logic^0,c
  4555   001804  EF06  F00C         	goto	i2u205_41
  4556   001808  EF08  F00C         	goto	i2u205_40
  4557   00180C                     i2u205_41:
  4558   00180C  EF0C  F00C         	goto	i2l2719
  4559   001810                     i2u205_40:
  4560   001810                     i2l2717:
  4561                           
  4562                           ;MCAL_layer/GPIO/gpio.c: 78:         ret = (Std_ReturnType)0x00;
  4563   001810  0E00               	movlw	0
  4564   001812  6E0A               	movwf	i2gpio_pin_write_logic@ret^0,c
  4565   001814  EF79  F00C         	goto	i2l247
  4566   001818                     i2l2719:
  4567                           
  4568                           ;MCAL_layer/GPIO/gpio.c: 80:     {;MCAL_layer/GPIO/gpio.c: 81:         if(logic == HIGH)
  4569   001818  0403               	decf	i2gpio_pin_write_logic@logic^0,w,c
  4570   00181A  A4D8               	btfss	status,2,c
  4571   00181C  EF12  F00C         	goto	i2u206_41
  4572   001820  EF14  F00C         	goto	i2u206_40
  4573   001824                     i2u206_41:
  4574   001824  EF42  F00C         	goto	i2l2723
  4575   001828                     i2u206_40:
  4576   001828                     
  4577                           ;MCAL_layer/GPIO/gpio.c: 82:             (*lat_reg[Pin_Config->port] |= ((uint8)1 << Pin
      +                          _Config->pin));
  4578   001828  C001  FFD9         	movff	i2gpio_pin_write_logic@Pin_Config,fsr2l
  4579   00182C  C002  FFDA         	movff	i2gpio_pin_write_logic@Pin_Config+1,fsr2h
  4580   001830  30DF               	rrcf	223,w,c
  4581   001832  32E8               	rrcf	wreg,f,c
  4582   001834  32E8               	rrcf	wreg,f,c
  4583   001836  0B07               	andlw	7
  4584   001838  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
  4585   00183A  0E01               	movlw	1
  4586   00183C  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
  4587   00183E  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
  4588   001840  EF24  F00C         	goto	i2u207_44
  4589   001844                     i2u207_45:
  4590   001844  90D8               	bcf	status,0,c
  4591   001846  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
  4592   001848                     i2u207_44:
  4593   001848  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
  4594   00184A  EF22  F00C         	goto	i2u207_45
  4595   00184E  C001  FFD9         	movff	i2gpio_pin_write_logic@Pin_Config,fsr2l
  4596   001852  C002  FFDA         	movff	i2gpio_pin_write_logic@Pin_Config+1,fsr2h
  4597   001856  50DF               	movf	223,w,c
  4598   001858  0B07               	andlw	7
  4599   00185A  6E06               	movwf	(??i2_gpio_pin_write_logic+2)^0,c
  4600   00185C  5006               	movf	(??i2_gpio_pin_write_logic+2)^0,w,c
  4601   00185E  0D02               	mullw	2
  4602   001860  0E8A               	movlw	low _lat_reg
  4603   001862  24F3               	addwf	243,w,c
  4604   001864  6ED9               	movwf	fsr2l,c
  4605   001866  0E00               	movlw	high _lat_reg
  4606   001868  20F4               	addwfc	prodh,w,c
  4607   00186A  6EDA               	movwf	fsr2h,c
  4608   00186C  CFDE F007          	movff	postinc2,??i2_gpio_pin_write_logic+3
  4609   001870  CFDD F008          	movff	postdec2,??i2_gpio_pin_write_logic+4
  4610   001874  C007  FFD9         	movff	??i2_gpio_pin_write_logic+3,fsr2l
  4611   001878  C008  FFDA         	movff	??i2_gpio_pin_write_logic+4,fsr2h
  4612   00187C  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
  4613   00187E  12DF               	iorwf	indf2,f,c
  4614   001880  EF79  F00C         	goto	i2l247
  4615   001884                     i2l2723:
  4616   001884  C001  FFD9         	movff	i2gpio_pin_write_logic@Pin_Config,fsr2l
  4617   001888  C002  FFDA         	movff	i2gpio_pin_write_logic@Pin_Config+1,fsr2h
  4618   00188C  30DF               	rrcf	223,w,c
  4619   00188E  32E8               	rrcf	wreg,f,c
  4620   001890  32E8               	rrcf	wreg,f,c
  4621   001892  0B07               	andlw	7
  4622   001894  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
  4623   001896  0E01               	movlw	1
  4624   001898  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
  4625   00189A  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
  4626   00189C  EF52  F00C         	goto	i2u208_44
  4627   0018A0                     i2u208_45:
  4628   0018A0  90D8               	bcf	status,0,c
  4629   0018A2  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
  4630   0018A4                     i2u208_44:
  4631   0018A4  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
  4632   0018A6  EF50  F00C         	goto	i2u208_45
  4633   0018AA  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
  4634   0018AC  0AFF               	xorlw	255
  4635   0018AE  6E06               	movwf	(??i2_gpio_pin_write_logic+2)^0,c
  4636   0018B0  C001  FFD9         	movff	i2gpio_pin_write_logic@Pin_Config,fsr2l
  4637   0018B4  C002  FFDA         	movff	i2gpio_pin_write_logic@Pin_Config+1,fsr2h
  4638   0018B8  50DF               	movf	223,w,c
  4639   0018BA  0B07               	andlw	7
  4640   0018BC  6E07               	movwf	(??i2_gpio_pin_write_logic+3)^0,c
  4641   0018BE  5007               	movf	(??i2_gpio_pin_write_logic+3)^0,w,c
  4642   0018C0  0D02               	mullw	2
  4643   0018C2  0E8A               	movlw	low _lat_reg
  4644   0018C4  24F3               	addwf	243,w,c
  4645   0018C6  6ED9               	movwf	fsr2l,c
  4646   0018C8  0E00               	movlw	high _lat_reg
  4647   0018CA  20F4               	addwfc	prodh,w,c
  4648   0018CC  6EDA               	movwf	fsr2h,c
  4649   0018CE  CFDE F008          	movff	postinc2,??i2_gpio_pin_write_logic+4
  4650   0018D2  CFDD F009          	movff	postdec2,??i2_gpio_pin_write_logic+5
  4651   0018D6  C008  FFD9         	movff	??i2_gpio_pin_write_logic+4,fsr2l
  4652   0018DA  C009  FFDA         	movff	??i2_gpio_pin_write_logic+5,fsr2h
  4653   0018DE  5006               	movf	(??i2_gpio_pin_write_logic+2)^0,w,c
  4654   0018E0  16DF               	andwf	indf2,f,c
  4655   0018E2  50DF               	movf	indf2,w,c
  4656   0018E4  B4D8               	btfsc	status,2,c
  4657   0018E6  EF77  F00C         	goto	i2u209_41
  4658   0018EA  EF79  F00C         	goto	i2u209_40
  4659   0018EE                     i2u209_41:
  4660   0018EE  EF08  F00C         	goto	i2l2717
  4661   0018F2                     i2u209_40:
  4662   0018F2                     i2l247:
  4663                           
  4664                           ;MCAL_layer/GPIO/gpio.c: 87:         return ret;
  4665   0018F2  500A               	movf	i2gpio_pin_write_logic@ret^0,w,c
  4666   0018F4  0012               	return		;funcret
  4667   0018F6                     __end_ofi2_gpio_pin_write_logic:
  4668                           	callstack 0
  4669                           
  4670 ;; *************** function _cnvert_uint32_to_string *****************
  4671 ;; Defined at:
  4672 ;;		line 391 in file "ECU_layer/LCD/ecu_lcd.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;  value           2   82[COMRAM] unsigned int 
  4675 ;;  str             2   84[COMRAM] PTR unsigned char 
  4676 ;;		 -> arr(11), 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  Temp_String    11   86[COMRAM] unsigned char [11]
  4679 ;;  DataCounter     1   97[COMRAM] unsigned char 
  4680 ;;  ret             1    0        unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  1    wreg      unsigned char 
  4683 ;; Registers used:
  4684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4691 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4693 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4694 ;;Total ram usage:       16 bytes
  4695 ;; Hardware stack levels used: 1
  4696 ;; Hardware stack levels required when called: 8
  4697 ;; This function calls:
  4698 ;;		_memset
  4699 ;;		_sprintf
  4700 ;; This function is called by:
  4701 ;;		_SET_FLAG
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text33
  4706   001CDC                     __ptext33:
  4707                           	callstack 0
  4708   001CDC                     _cnvert_uint32_to_string:
  4709                           	callstack 14
  4710   001CDC                     
  4711                           ;ECU_layer/LCD/ecu_lcd.c: 394:     uint8 Temp_String[11] = {0};
  4712   001CDC  EE20  F0AD         	lfsr	2,cnvert_uint32_to_string@F3228
  4713   001CE0  EE10  F057         	lfsr	1,cnvert_uint32_to_string@Temp_String
  4714   001CE4  0E0A               	movlw	10
  4715   001CE6                     i2u253_41:
  4716   001CE6  CFDB FFE3          	movff	plusw2,plusw1
  4717   001CEA  06E8               	decf	wreg,f,c
  4718   001CEC  E2FC               	bc	i2u253_41
  4719   001CEE                     
  4720                           ;ECU_layer/LCD/ecu_lcd.c: 395:     uint8 DataCounter = 0;
  4721   001CEE  0E00               	movlw	0
  4722   001CF0  6E62               	movwf	cnvert_uint32_to_string@DataCounter^0,c
  4723   001CF2                     
  4724                           ;ECU_layer/LCD/ecu_lcd.c: 396:     if(((void*)0) == str){
  4725   001CF2  5055               	movf	cnvert_uint32_to_string@str^0,w,c
  4726   001CF4  1056               	iorwf	(cnvert_uint32_to_string@str+1)^0,w,c
  4727   001CF6  A4D8               	btfss	status,2,c
  4728   001CF8  EF80  F00E         	goto	i2u254_41
  4729   001CFC  EF82  F00E         	goto	i2u254_40
  4730   001D00                     i2u254_41:
  4731   001D00  EF84  F00E         	goto	i2l3049
  4732   001D04                     i2u254_40:
  4733   001D04                     
  4734                           ;ECU_layer/LCD/ecu_lcd.c: 398:     }
  4735   001D04  EFC6  F00E         	goto	i2l187
  4736   001D08                     i2l3049:
  4737                           
  4738                           ;ECU_layer/LCD/ecu_lcd.c: 400:         memset(str, ' ', 10);
  4739   001D08  C055  F001         	movff	cnvert_uint32_to_string@str,memset@dest
  4740   001D0C  C056  F002         	movff	cnvert_uint32_to_string@str+1,memset@dest+1
  4741   001D10  0E00               	movlw	0
  4742   001D12  6E04               	movwf	(memset@c+1)^0,c
  4743   001D14  0E20               	movlw	32
  4744   001D16  6E03               	movwf	memset@c^0,c
  4745   001D18  0E00               	movlw	0
  4746   001D1A  6E06               	movwf	(memset@n+1)^0,c
  4747   001D1C  0E0A               	movlw	10
  4748   001D1E  6E05               	movwf	memset@n^0,c
  4749   001D20  ECD7  F008         	call	_memset	;wreg free
  4750   001D24                     
  4751                           ;ECU_layer/LCD/ecu_lcd.c: 401:         str[10] = '\0';
  4752   001D24  EE20 F00A          	lfsr	2,10
  4753   001D28  5055               	movf	cnvert_uint32_to_string@str^0,w,c
  4754   001D2A  26D9               	addwf	fsr2l,f,c
  4755   001D2C  5056               	movf	(cnvert_uint32_to_string@str+1)^0,w,c
  4756   001D2E  22DA               	addwfc	fsr2h,f,c
  4757   001D30  6ADF               	clrf	indf2,c
  4758   001D32                     
  4759                           ;ECU_layer/LCD/ecu_lcd.c: 402:         sprintf((char *)Temp_String, "%i", value);
  4760   001D32  0E57               	movlw	low cnvert_uint32_to_string@Temp_String
  4761   001D34  6E3F               	movwf	sprintf@s^0,c
  4762   001D36  0E00               	movlw	high cnvert_uint32_to_string@Temp_String
  4763   001D38  6E40               	movwf	(sprintf@s+1)^0,c
  4764   001D3A  0E16               	movlw	low STR_1
  4765   001D3C  6E41               	movwf	sprintf@fmt^0,c
  4766   001D3E  0E10               	movlw	high STR_1
  4767   001D40  6E42               	movwf	(sprintf@fmt+1)^0,c
  4768   001D42  C053  F043         	movff	cnvert_uint32_to_string@value,?_sprintf+4
  4769   001D46  C054  F044         	movff	cnvert_uint32_to_string@value+1,?_sprintf+5
  4770   001D4A  EC47  F014         	call	_sprintf	;wreg free
  4771                           
  4772                           ;ECU_layer/LCD/ecu_lcd.c: 403:         while(Temp_String[DataCounter] != '\0'){
  4773   001D4E  EFB8  F00E         	goto	i2l3059
  4774   001D52                     i2l3055:
  4775                           
  4776                           ;ECU_layer/LCD/ecu_lcd.c: 404:             str[DataCounter] = Temp_String[DataCounter];
  4777   001D52  0E57               	movlw	low cnvert_uint32_to_string@Temp_String
  4778   001D54  2462               	addwf	cnvert_uint32_to_string@DataCounter^0,w,c
  4779   001D56  6ED9               	movwf	fsr2l,c
  4780   001D58  6ADA               	clrf	fsr2h,c
  4781   001D5A  0E00               	movlw	high cnvert_uint32_to_string@Temp_String
  4782   001D5C  22DA               	addwfc	fsr2h,f,c
  4783   001D5E  5062               	movf	cnvert_uint32_to_string@DataCounter^0,w,c
  4784   001D60  2455               	addwf	cnvert_uint32_to_string@str^0,w,c
  4785   001D62  6EE1               	movwf	fsr1l,c
  4786   001D64  0E00               	movlw	0
  4787   001D66  2056               	addwfc	(cnvert_uint32_to_string@str+1)^0,w,c
  4788   001D68  6EE2               	movwf	fsr1h,c
  4789   001D6A  CFDF FFE7          	movff	indf2,indf1
  4790   001D6E                     
  4791                           ;ECU_layer/LCD/ecu_lcd.c: 405:             DataCounter++;
  4792   001D6E  2A62               	incf	cnvert_uint32_to_string@DataCounter^0,f,c
  4793   001D70                     i2l3059:
  4794                           
  4795                           ;ECU_layer/LCD/ecu_lcd.c: 403:         while(Temp_String[DataCounter] != '\0'){
  4796   001D70  0E57               	movlw	low cnvert_uint32_to_string@Temp_String
  4797   001D72  2462               	addwf	cnvert_uint32_to_string@DataCounter^0,w,c
  4798   001D74  6ED9               	movwf	fsr2l,c
  4799   001D76  6ADA               	clrf	fsr2h,c
  4800   001D78  0E00               	movlw	high cnvert_uint32_to_string@Temp_String
  4801   001D7A  22DA               	addwfc	fsr2h,f,c
  4802   001D7C  50DF               	movf	indf2,w,c
  4803   001D7E  A4D8               	btfss	status,2,c
  4804   001D80  EFC4  F00E         	goto	i2u255_41
  4805   001D84  EFC6  F00E         	goto	i2u255_40
  4806   001D88                     i2u255_41:
  4807   001D88  EFA9  F00E         	goto	i2l3055
  4808   001D8C                     i2u255_40:
  4809   001D8C                     i2l187:
  4810   001D8C  0012               	return		;funcret
  4811   001D8E                     __end_of_cnvert_uint32_to_string:
  4812                           	callstack 0
  4813                           
  4814 ;; *************** function _sprintf *****************
  4815 ;; Defined at:
  4816 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  s               2   62[COMRAM] PTR unsigned char 
  4819 ;;		 -> cnvert_uint32_to_string@Temp_String(11), cnvert_uint16_to_string@Temp_String(6), cnvert_uint8_to_string@Temp_Str
      +ing(4), 
  4820 ;;  fmt             2   64[COMRAM] PTR const unsigned char 
  4821 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  f              12   70[COMRAM] struct _IO_FILE
  4824 ;;  ap              2   68[COMRAM] PTR void [1]
  4825 ;;		 -> ?_sprintf(2), 
  4826 ;;  ret             2    0        int 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  2   62[COMRAM] int 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4836 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;Total ram usage:       20 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 7
  4843 ;; This function calls:
  4844 ;;		_vfprintf
  4845 ;; This function is called by:
  4846 ;;		_cnvert_uint32_to_string
  4847 ;;		_cnvert_uint8_to_string
  4848 ;;		_cnvert_uint16_to_string
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text34
  4853   00288E                     __ptext34:
  4854                           	callstack 0
  4855   00288E                     _sprintf:
  4856                           	callstack 14
  4857   00288E  0E43               	movlw	low (?_sprintf+4)
  4858   002890  6E45               	movwf	sprintf@ap^0,c
  4859   002892  0E00               	movlw	high (?_sprintf+4)
  4860   002894  6E46               	movwf	(sprintf@ap+1)^0,c
  4861   002896  C03F  F047         	movff	sprintf@s,sprintf@f
  4862   00289A  C040  F048         	movff	sprintf@s+1,sprintf@f+1
  4863   00289E  0E00               	movlw	0
  4864   0028A0  6E4B               	movwf	(sprintf@f+4)^0,c
  4865   0028A2  0E00               	movlw	0
  4866   0028A4  6E4A               	movwf	(sprintf@f+3)^0,c
  4867   0028A6  0E00               	movlw	0
  4868   0028A8  6E52               	movwf	(sprintf@f+11)^0,c
  4869   0028AA  0E00               	movlw	0
  4870   0028AC  6E51               	movwf	(sprintf@f+10)^0,c
  4871   0028AE  0E47               	movlw	low sprintf@f
  4872   0028B0  6E37               	movwf	vfprintf@fp^0,c
  4873   0028B2  0E00               	movlw	high sprintf@f
  4874   0028B4  6E38               	movwf	(vfprintf@fp+1)^0,c
  4875   0028B6  C041  F039         	movff	sprintf@fmt,vfprintf@fmt
  4876   0028BA  C042  F03A         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4877   0028BE  0E45               	movlw	low sprintf@ap
  4878   0028C0  6E3B               	movwf	vfprintf@ap^0,c
  4879   0028C2  0E00               	movlw	high sprintf@ap
  4880   0028C4  6E3C               	movwf	(vfprintf@ap+1)^0,c
  4881   0028C6  ECD1  F013         	call	_vfprintf	;wreg free
  4882   0028CA  504A               	movf	(sprintf@f+3)^0,w,c
  4883   0028CC  243F               	addwf	sprintf@s^0,w,c
  4884   0028CE  6ED9               	movwf	fsr2l,c
  4885   0028D0  504B               	movf	(sprintf@f+4)^0,w,c
  4886   0028D2  2040               	addwfc	(sprintf@s+1)^0,w,c
  4887   0028D4  6EDA               	movwf	fsr2h,c
  4888   0028D6  6ADF               	clrf	indf2,c
  4889   0028D8  0012               	return		;funcret
  4890   0028DA                     __end_of_sprintf:
  4891                           	callstack 0
  4892                           
  4893 ;; *************** function _vfprintf *****************
  4894 ;; Defined at:
  4895 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
  4898 ;;		 -> sprintf@f(12), 
  4899 ;;  fmt             2   56[COMRAM] PTR const unsigned char 
  4900 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  4901 ;;  ap              2   58[COMRAM] PTR PTR void 
  4902 ;;		 -> sprintf@ap(2), 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;  cfmt            2   60[COMRAM] PTR unsigned char 
  4905 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  2   54[COMRAM] int 
  4908 ;; Registers used:
  4909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4915 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4919 ;;Total ram usage:        8 bytes
  4920 ;; Hardware stack levels used: 1
  4921 ;; Hardware stack levels required when called: 6
  4922 ;; This function calls:
  4923 ;;		_vfpfcnvrt
  4924 ;; This function is called by:
  4925 ;;		_sprintf
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           	psect	text35
  4930   0027A2                     __ptext35:
  4931                           	callstack 0
  4932   0027A2                     _vfprintf:
  4933                           	callstack 14
  4934   0027A2                     
  4935                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  4936   0027A2  C039  F03D         	movff	vfprintf@fmt,vfprintf@cfmt
  4937   0027A6  C03A  F03E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4938                           
  4939                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  4940   0027AA  EFE5  F013         	goto	i2l2811
  4941   0027AE                     i2l2809:
  4942                           
  4943                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4944   0027AE  C037  F029         	movff	vfprintf@fp,vfpfcnvrt@fp
  4945   0027B2  C038  F02A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4946   0027B6  0E3D               	movlw	low vfprintf@cfmt
  4947   0027B8  6E2B               	movwf	vfpfcnvrt@fmt^0,c
  4948   0027BA  0E00               	movlw	high vfprintf@cfmt
  4949   0027BC  6E2C               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4950   0027BE  C03B  F02D         	movff	vfprintf@ap,vfpfcnvrt@ap
  4951   0027C2  C03C  F02E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4952   0027C6  ECC5  F00A         	call	_vfpfcnvrt	;wreg free
  4953   0027CA                     i2l2811:
  4954                           
  4955                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  4956   0027CA  C03D  FFF6         	movff	vfprintf@cfmt,tblptrl
  4957   0027CE  C03E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4958   0027D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4959   0027D2  6AF8               	clrf	tblptru,c
  4960   0027D4                     	endif
  4961   0027D4                     	if	0	;tblptru may be non-zero
  4962   0027D4                     	endif
  4963   0027D4  0008               	tblrd		*
  4964   0027D6  50F5               	movf	tablat,w,c
  4965   0027D8  0900               	iorlw	0
  4966   0027DA  A4D8               	btfss	status,2,c
  4967   0027DC  EFF2  F013         	goto	i2u221_41
  4968   0027E0  EFF4  F013         	goto	i2u221_40
  4969   0027E4                     i2u221_41:
  4970   0027E4  EFD7  F013         	goto	i2l2809
  4971   0027E8                     i2u221_40:
  4972   0027E8                     
  4973                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  4974   0027E8  0E00               	movlw	0
  4975   0027EA  6E38               	movwf	(?_vfprintf+1)^0,c
  4976   0027EC  0E00               	movlw	0
  4977   0027EE  6E37               	movwf	?_vfprintf^0,c
  4978   0027F0  0012               	return		;funcret
  4979   0027F2                     __end_of_vfprintf:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function _vfpfcnvrt *****************
  4983 ;; Defined at:
  4984 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
  4987 ;;		 -> sprintf@f(12), 
  4988 ;;  fmt             2   42[COMRAM] PTR PTR unsigned char 
  4989 ;;		 -> vfprintf@cfmt(2), 
  4990 ;;  ap              2   44[COMRAM] PTR PTR void 
  4991 ;;		 -> sprintf@ap(2), 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  convarg         4   48[COMRAM] struct .
  4994 ;;  cp              2   52[COMRAM] PTR unsigned char 
  4995 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  4996 ;;  i               2    0        int 
  4997 ;;  done            2    0        int 
  4998 ;;  c               1    0        unsigned char 
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      void 
  5001 ;; Registers used:
  5002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5008 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;Total ram usage:       14 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; Hardware stack levels required when called: 5
  5015 ;; This function calls:
  5016 ;;		_dtoa
  5017 ;;		_fputc
  5018 ;; This function is called by:
  5019 ;;		_vfprintf
  5020 ;; This function uses a non-reentrant model
  5021 ;;
  5022                           
  5023                           	psect	text36
  5024   00158A                     __ptext36:
  5025                           	callstack 0
  5026   00158A                     _vfpfcnvrt:
  5027                           	callstack 14
  5028   00158A                     
  5029                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  5030   00158A  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5031   00158E  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5032   001592  CFDE FFF6          	movff	postinc2,tblptrl
  5033   001596  CFDD FFF7          	movff	postdec2,tblptrh
  5034   00159A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5035   00159A  6AF8               	clrf	tblptru,c
  5036   00159C                     	endif
  5037   00159C                     	if	0	;tblptru may be non-zero
  5038   00159C                     	endif
  5039   00159C  0008               	tblrd		*
  5040   00159E  50F5               	movf	tablat,w,c
  5041   0015A0  0A25               	xorlw	37
  5042   0015A2  A4D8               	btfss	status,2,c
  5043   0015A4  EFD6  F00A         	goto	i2u210_41
  5044   0015A8  EFD8  F00A         	goto	i2u210_40
  5045   0015AC                     i2u210_41:
  5046   0015AC  EF44  F00B         	goto	i2l2755
  5047   0015B0                     i2u210_40:
  5048   0015B0                     
  5049                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  5050   0015B0  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5051   0015B4  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5052   0015B8  2ADE               	incf	postinc2,f,c
  5053   0015BA  0E00               	movlw	0
  5054   0015BC  22DD               	addwfc	postdec2,f,c
  5055   0015BE                     
  5056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  5057   0015BE  0E00               	movlw	0
  5058   0015C0  6E74               	movwf	(_width+1)^0,c
  5059   0015C2  0E00               	movlw	0
  5060   0015C4  6E73               	movwf	_width^0,c
  5061   0015C6  C073  F079         	movff	_width,_flags
  5062   0015CA                     
  5063                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  5064   0015CA  6875               	setf	_prec^0,c
  5065   0015CC  6876               	setf	(_prec+1)^0,c
  5066   0015CE                     
  5067                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  5068   0015CE  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5069   0015D2  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5070   0015D6  CFDE F035          	movff	postinc2,vfpfcnvrt@cp
  5071   0015DA  CFDD F036          	movff	postdec2,vfpfcnvrt@cp+1
  5072   0015DE                     
  5073                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5074   0015DE  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5075   0015E2  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5076   0015E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5077   0015E6  6AF8               	clrf	tblptru,c
  5078   0015E8                     	endif
  5079   0015E8                     	if	0	;tblptru may be non-zero
  5080   0015E8                     	endif
  5081   0015E8  0008               	tblrd		*
  5082   0015EA  50F5               	movf	tablat,w,c
  5083   0015EC  0A64               	xorlw	100
  5084   0015EE  B4D8               	btfsc	status,2,c
  5085   0015F0  EFFC  F00A         	goto	i2u211_41
  5086   0015F4  EFFE  F00A         	goto	i2u211_40
  5087   0015F8                     i2u211_41:
  5088   0015F8  EF0D  F00B         	goto	i2l2745
  5089   0015FC                     i2u211_40:
  5090   0015FC  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5091   001600  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  5092   001604                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5093   001604  6AF8               	clrf	tblptru,c
  5094   001606                     	endif
  5095   001606                     	if	0	;tblptru may be non-zero
  5096   001606                     	endif
  5097   001606  0008               	tblrd		*
  5098   001608  50F5               	movf	tablat,w,c
  5099   00160A  0A69               	xorlw	105
  5100   00160C  A4D8               	btfss	status,2,c
  5101   00160E  EF0B  F00B         	goto	i2u212_41
  5102   001612  EF0D  F00B         	goto	i2u212_40
  5103   001616                     i2u212_41:
  5104   001616  EF3B  F00B         	goto	i2l2751
  5105   00161A                     i2u212_40:
  5106   00161A                     i2l2745:
  5107                           
  5108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5109   00161A  C02D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5110   00161E  C02E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5111   001622  CFDF F02F          	movff	indf2,??_vfpfcnvrt
  5112   001626  0E02               	movlw	2
  5113   001628  26DE               	addwf	postinc2,f,c
  5114   00162A  CFDF F030          	movff	indf2,??_vfpfcnvrt+1
  5115   00162E  0E00               	movlw	0
  5116   001630  22DD               	addwfc	postdec2,f,c
  5117   001632  C02F  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5118   001636  C030  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5119   00163A  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg
  5120   00163E  CFDD F032          	movff	postdec2,vfpfcnvrt@convarg+1
  5121                           
  5122                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  5123   001642  0E01               	movlw	1
  5124   001644  2435               	addwf	vfpfcnvrt@cp^0,w,c
  5125   001646  6E2F               	movwf	??_vfpfcnvrt^0,c
  5126   001648  0E00               	movlw	0
  5127   00164A  2036               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  5128   00164C  6E30               	movwf	(??_vfpfcnvrt+1)^0,c
  5129   00164E  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5130   001652  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5131   001656  C02F  FFDE         	movff	??_vfpfcnvrt,postinc2
  5132   00165A  C030  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  5133   00165E                     
  5134                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5135   00165E  C029  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5136   001662  C02A  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5137   001666  C031  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  5138   00166A  C032  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  5139   00166E  EC0D  F008         	call	_dtoa	;wreg free
  5140   001672  EF59  F00B         	goto	i2l1271
  5141   001676                     i2l2751:
  5142                           
  5143                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  5144   001676  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5145   00167A  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5146   00167E  2ADE               	incf	postinc2,f,c
  5147   001680  0E00               	movlw	0
  5148   001682  22DD               	addwfc	postdec2,f,c
  5149   001684  EF59  F00B         	goto	i2l1271
  5150   001688                     i2l2755:
  5151                           
  5152                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  5153   001688  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5154   00168C  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5155   001690  CFDE FFF6          	movff	postinc2,tblptrl
  5156   001694  CFDD FFF7          	movff	postdec2,tblptrh
  5157   001698                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5158   001698  6AF8               	clrf	tblptru,c
  5159   00169A                     	endif
  5160   00169A                     	if	0	;tblptru may be non-zero
  5161   00169A                     	endif
  5162   00169A  0008               	tblrd		*
  5163   00169C  50F5               	movf	tablat,w,c
  5164   00169E  6E01               	movwf	fputc@c^0,c
  5165   0016A0  6A02               	clrf	(fputc@c+1)^0,c
  5166   0016A2  C029  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5167   0016A6  C02A  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5168   0016AA  EC4A  F00D         	call	_fputc	;wreg free
  5169   0016AE  EF3B  F00B         	goto	i2l2751
  5170   0016B2                     i2l1271:
  5171   0016B2  0012               	return		;funcret
  5172   0016B4                     __end_of_vfpfcnvrt:
  5173                           	callstack 0
  5174                           
  5175 ;; *************** function _dtoa *****************
  5176 ;; Defined at:
  5177 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5180 ;;		 -> sprintf@f(12), 
  5181 ;;  d               2   29[COMRAM] int 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;  i               2   37[COMRAM] int 
  5184 ;;  w               2   35[COMRAM] int 
  5185 ;;  p               2   33[COMRAM] int 
  5186 ;;  s               1   39[COMRAM] unsigned char 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5199 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5200 ;;Total ram usage:       13 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; Hardware stack levels required when called: 4
  5203 ;; This function calls:
  5204 ;;		___awdiv
  5205 ;;		___awmod
  5206 ;;		_abs
  5207 ;;		_pad
  5208 ;; This function is called by:
  5209 ;;		_vfpfcnvrt
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text37
  5214   00101A                     __ptext37:
  5215                           	callstack 0
  5216   00101A                     _dtoa:
  5217                           	callstack 14
  5218   00101A                     
  5219                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  5220   00101A  BE1F               	btfsc	(dtoa@d+1)^0,7,c
  5221   00101C  EF12  F008         	goto	i2u194_41
  5222   001020  EF15  F008         	goto	i2u194_40
  5223   001024                     i2u194_41:
  5224   001024  0E01               	movlw	1
  5225   001026  EF16  F008         	goto	i2u195_40
  5226   00102A                     i2u194_40:
  5227   00102A  0E00               	movlw	0
  5228   00102C                     i2u195_40:
  5229   00102C  6E28               	movwf	dtoa@s^0,c
  5230   00102E                     
  5231                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  5232   00102E  5028               	movf	dtoa@s^0,w,c
  5233   001030  B4D8               	btfsc	status,2,c
  5234   001032  EF1D  F008         	goto	i2u196_41
  5235   001036  EF1F  F008         	goto	i2u196_40
  5236   00103A                     i2u196_41:
  5237   00103A  EF23  F008         	goto	i2l2667
  5238   00103E                     i2u196_40:
  5239   00103E                     
  5240                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  5241   00103E  6C1E               	negf	dtoa@d^0,c
  5242   001040  1E1F               	comf	(dtoa@d+1)^0,f,c
  5243   001042  B0D8               	btfsc	status,0,c
  5244   001044  2A1F               	incf	(dtoa@d+1)^0,f,c
  5245   001046                     i2l2667:
  5246                           
  5247                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  5248   001046  BE76               	btfsc	(_prec+1)^0,7,c
  5249   001048  EF2A  F008         	goto	i2u197_40
  5250   00104C  EF28  F008         	goto	i2u197_41
  5251   001050                     i2u197_41:
  5252   001050  EF30  F008         	goto	i2l1250
  5253   001054                     i2u197_40:
  5254   001054  0E00               	movlw	0
  5255   001056  6E23               	movwf	(dtoa@p+1)^0,c
  5256   001058  0E01               	movlw	1
  5257   00105A  6E22               	movwf	dtoa@p^0,c
  5258   00105C  EF34  F008         	goto	i2l1252
  5259   001060                     i2l1250:
  5260   001060  C075  F022         	movff	_prec,dtoa@p
  5261   001064  C076  F023         	movff	_prec+1,dtoa@p+1
  5262   001068                     i2l1252:
  5263                           
  5264                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  5265   001068  C073  F024         	movff	_width,dtoa@w
  5266   00106C  C074  F025         	movff	_width+1,dtoa@w+1
  5267   001070                     
  5268                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  5269   001070  5028               	movf	dtoa@s^0,w,c
  5270   001072  B4D8               	btfsc	status,2,c
  5271   001074  EF3E  F008         	goto	i2u198_41
  5272   001078  EF40  F008         	goto	i2u198_40
  5273   00107C                     i2u198_41:
  5274   00107C  EF57  F008         	goto	i2l1253
  5275   001080                     i2u198_40:
  5276   001080                     
  5277                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  5278   001080  0624               	decf	dtoa@w^0,f,c
  5279   001082  A0D8               	btfss	status,0,c
  5280   001084  0625               	decf	(dtoa@w+1)^0,f,c
  5281   001086                     
  5282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  5283   001086  5028               	movf	dtoa@s^0,w,c
  5284   001088  A4D8               	btfss	status,2,c
  5285   00108A  EF49  F008         	goto	i2u199_41
  5286   00108E  EF4B  F008         	goto	i2u199_40
  5287   001092                     i2u199_41:
  5288   001092  EF51  F008         	goto	i2l2679
  5289   001096                     i2u199_40:
  5290   001096  0E00               	movlw	0
  5291   001098  6E21               	movwf	(_dtoa$1640+1)^0,c
  5292   00109A  0E2B               	movlw	43
  5293   00109C  6E20               	movwf	_dtoa$1640^0,c
  5294   00109E  EF55  F008         	goto	i2l2681
  5295   0010A2                     i2l2679:
  5296   0010A2  0E00               	movlw	0
  5297   0010A4  6E21               	movwf	(_dtoa$1640+1)^0,c
  5298   0010A6  0E2D               	movlw	45
  5299   0010A8  6E20               	movwf	_dtoa$1640^0,c
  5300   0010AA                     i2l2681:
  5301   0010AA  C020  F028         	movff	_dtoa$1640,dtoa@s
  5302   0010AE                     i2l1253:
  5303                           
  5304                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  5305   0010AE  0E00               	movlw	0
  5306   0010B0  6E27               	movwf	(dtoa@i+1)^0,c
  5307   0010B2  0E1F               	movlw	31
  5308   0010B4  6E26               	movwf	dtoa@i^0,c
  5309   0010B6                     
  5310                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  5311   0010B6  0E00               	movlw	0
  5312   0010B8  0101               	movlb	1	; () banked
  5313   0010BA  6F1F               	movwf	(_dbuf+31)& (0+255),b
  5314                           
  5315                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  5316   0010BC  EF90  F008         	goto	i2l2695
  5317   0010C0                     i2l2685:
  5318                           
  5319                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  5320   0010C0  0626               	decf	dtoa@i^0,f,c
  5321   0010C2  A0D8               	btfss	status,0,c
  5322   0010C4  0627               	decf	(dtoa@i+1)^0,f,c
  5323   0010C6                     
  5324                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  5325   0010C6  0E00               	movlw	low _dbuf
  5326   0010C8  2426               	addwf	dtoa@i^0,w,c
  5327   0010CA  6ED9               	movwf	fsr2l,c
  5328   0010CC  0E01               	movlw	high _dbuf
  5329   0010CE  2027               	addwfc	(dtoa@i+1)^0,w,c
  5330   0010D0  6EDA               	movwf	fsr2h,c
  5331   0010D2  C01E  F001         	movff	dtoa@d,___awmod@dividend
  5332   0010D6  C01F  F002         	movff	dtoa@d+1,___awmod@dividend+1
  5333   0010DA  0E00               	movlw	0
  5334   0010DC  6E04               	movwf	(___awmod@divisor+1)^0,c
  5335   0010DE  0E0A               	movlw	10
  5336   0010E0  6E03               	movwf	___awmod@divisor^0,c
  5337   0010E2  ECC7  F00E         	call	___awmod	;wreg free
  5338   0010E6  C001  F007         	movff	?___awmod,abs@a
  5339   0010EA  C002  F008         	movff	?___awmod+1,abs@a+1
  5340   0010EE  ECD5  F014         	call	_abs	;wreg free
  5341   0010F2  5007               	movf	?_abs^0,w,c
  5342   0010F4  0F30               	addlw	48
  5343   0010F6  6EDF               	movwf	indf2,c
  5344   0010F8                     
  5345                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  5346   0010F8  0622               	decf	dtoa@p^0,f,c
  5347   0010FA  A0D8               	btfss	status,0,c
  5348   0010FC  0623               	decf	(dtoa@p+1)^0,f,c
  5349   0010FE                     
  5350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  5351   0010FE  0624               	decf	dtoa@w^0,f,c
  5352   001100  A0D8               	btfss	status,0,c
  5353   001102  0625               	decf	(dtoa@w+1)^0,f,c
  5354   001104                     
  5355                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  5356   001104  C01E  F001         	movff	dtoa@d,___awdiv@dividend
  5357   001108  C01F  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  5358   00110C  0E00               	movlw	0
  5359   00110E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5360   001110  0E0A               	movlw	10
  5361   001112  6E03               	movwf	___awdiv@divisor^0,c
  5362   001114  ECAF  F00D         	call	___awdiv	;wreg free
  5363   001118  C001  F01E         	movff	?___awdiv,dtoa@d
  5364   00111C  C002  F01F         	movff	?___awdiv+1,dtoa@d+1
  5365   001120                     i2l2695:
  5366                           
  5367                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  5368   001120  BE27               	btfsc	(dtoa@i+1)^0,7,c
  5369   001122  EF9B  F008         	goto	i2u200_41
  5370   001126  5027               	movf	(dtoa@i+1)^0,w,c
  5371   001128  E108               	bnz	i2u200_40
  5372   00112A  0426               	decf	dtoa@i^0,w,c
  5373   00112C  A0D8               	btfss	status,0,c
  5374   00112E  EF9B  F008         	goto	i2u200_41
  5375   001132  EF9D  F008         	goto	i2u200_40
  5376   001136                     i2u200_41:
  5377   001136  EFB3  F008         	goto	i2l2701
  5378   00113A                     i2u200_40:
  5379   00113A  501E               	movf	dtoa@d^0,w,c
  5380   00113C  101F               	iorwf	(dtoa@d+1)^0,w,c
  5381   00113E  A4D8               	btfss	status,2,c
  5382   001140  EFA4  F008         	goto	i2u201_41
  5383   001144  EFA6  F008         	goto	i2u201_40
  5384   001148                     i2u201_41:
  5385   001148  EF60  F008         	goto	i2l2685
  5386   00114C                     i2u201_40:
  5387   00114C  BE23               	btfsc	(dtoa@p+1)^0,7,c
  5388   00114E  EFB3  F008         	goto	i2u202_40
  5389   001152  5023               	movf	(dtoa@p+1)^0,w,c
  5390   001154  E106               	bnz	i2u202_41
  5391   001156  0422               	decf	dtoa@p^0,w,c
  5392   001158  B0D8               	btfsc	status,0,c
  5393   00115A  EFB1  F008         	goto	i2u202_41
  5394   00115E  EFB3  F008         	goto	i2u202_40
  5395   001162                     i2u202_41:
  5396   001162  EF60  F008         	goto	i2l2685
  5397   001166                     i2u202_40:
  5398   001166                     i2l2701:
  5399                           
  5400                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  5401   001166  5028               	movf	dtoa@s^0,w,c
  5402   001168  B4D8               	btfsc	status,2,c
  5403   00116A  EFB9  F008         	goto	i2u203_41
  5404   00116E  EFBB  F008         	goto	i2u203_40
  5405   001172                     i2u203_41:
  5406   001172  EFC6  F008         	goto	i2l2707
  5407   001176                     i2u203_40:
  5408   001176                     
  5409                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  5410   001176  0626               	decf	dtoa@i^0,f,c
  5411   001178  A0D8               	btfss	status,0,c
  5412   00117A  0627               	decf	(dtoa@i+1)^0,f,c
  5413   00117C                     
  5414                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  5415   00117C  0E00               	movlw	low _dbuf
  5416   00117E  2426               	addwf	dtoa@i^0,w,c
  5417   001180  6ED9               	movwf	fsr2l,c
  5418   001182  0E01               	movlw	high _dbuf
  5419   001184  2027               	addwfc	(dtoa@i+1)^0,w,c
  5420   001186  6EDA               	movwf	fsr2h,c
  5421   001188  C028  FFDF         	movff	dtoa@s,indf2
  5422   00118C                     i2l2707:
  5423                           
  5424                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5425   00118C  C01C  F011         	movff	dtoa@fp,pad@fp
  5426   001190  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5427   001194  0E00               	movlw	low _dbuf
  5428   001196  2426               	addwf	dtoa@i^0,w,c
  5429   001198  6E13               	movwf	pad@buf^0,c
  5430   00119A  0E01               	movlw	high _dbuf
  5431   00119C  2027               	addwfc	(dtoa@i+1)^0,w,c
  5432   00119E  6E14               	movwf	(pad@buf+1)^0,c
  5433   0011A0  C024  F015         	movff	dtoa@w,pad@p
  5434   0011A4  C025  F016         	movff	dtoa@w+1,pad@p+1
  5435   0011A8  ECF7  F011         	call	_pad	;wreg free
  5436   0011AC  0012               	return		;funcret
  5437   0011AE                     __end_of_dtoa:
  5438                           	callstack 0
  5439                           
  5440 ;; *************** function _pad *****************
  5441 ;; Defined at:
  5442 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5445 ;;		 -> sprintf@f(12), 
  5446 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5447 ;;		 -> dbuf(32), 
  5448 ;;  p               2   20[COMRAM] int 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  w               2   25[COMRAM] int 
  5451 ;;  i               2   23[COMRAM] int 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5461 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;Total ram usage:       11 bytes
  5466 ;; Hardware stack levels used: 1
  5467 ;; Hardware stack levels required when called: 3
  5468 ;; This function calls:
  5469 ;;		_fputc
  5470 ;;		_fputs
  5471 ;; This function is called by:
  5472 ;;		_dtoa
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text38
  5477   0023EE                     __ptext38:
  5478                           	callstack 0
  5479   0023EE                     _pad:
  5480                           	callstack 14
  5481   0023EE                     
  5482                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  5483   0023EE  BE16               	btfsc	(pad@p+1)^0,7,c
  5484   0023F0  EFFC  F011         	goto	i2u191_41
  5485   0023F4  EFFE  F011         	goto	i2u191_40
  5486   0023F8                     i2u191_41:
  5487   0023F8  EF04  F012         	goto	i2l2647
  5488   0023FC                     i2u191_40:
  5489   0023FC  C015  F01A         	movff	pad@p,pad@w
  5490   002400  C016  F01B         	movff	pad@p+1,pad@w+1
  5491   002404  EF08  F012         	goto	i2l1241
  5492   002408                     i2l2647:
  5493   002408  0E00               	movlw	0
  5494   00240A  6E1B               	movwf	(pad@w+1)^0,c
  5495   00240C  0E00               	movlw	0
  5496   00240E  6E1A               	movwf	pad@w^0,c
  5497   002410                     i2l1241:
  5498                           
  5499                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  5500   002410  0E00               	movlw	0
  5501   002412  6E19               	movwf	(pad@i+1)^0,c
  5502   002414  0E00               	movlw	0
  5503   002416  6E18               	movwf	pad@i^0,c
  5504                           
  5505                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  5506   002418  EF1A  F012         	goto	i2l2653
  5507   00241C                     i2l2649:
  5508                           
  5509                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  5510   00241C  0E00               	movlw	0
  5511   00241E  6E02               	movwf	(fputc@c+1)^0,c
  5512   002420  0E20               	movlw	32
  5513   002422  6E01               	movwf	fputc@c^0,c
  5514   002424  C011  F003         	movff	pad@fp,fputc@fp
  5515   002428  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5516   00242C  EC4A  F00D         	call	_fputc	;wreg free
  5517   002430                     
  5518                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  5519   002430  4A18               	infsnz	pad@i^0,f,c
  5520   002432  2A19               	incf	(pad@i+1)^0,f,c
  5521   002434                     i2l2653:
  5522                           
  5523                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  5524   002434  501A               	movf	pad@w^0,w,c
  5525   002436  5C18               	subwf	pad@i^0,w,c
  5526   002438  5019               	movf	(pad@i+1)^0,w,c
  5527   00243A  0A80               	xorlw	128
  5528   00243C  6E17               	movwf	??_pad^0,c
  5529   00243E  501B               	movf	(pad@w+1)^0,w,c
  5530   002440  0A80               	xorlw	128
  5531   002442  5817               	subwfb	??_pad^0,w,c
  5532   002444  A0D8               	btfss	status,0,c
  5533   002446  EF27  F012         	goto	i2u192_41
  5534   00244A  EF29  F012         	goto	i2u192_40
  5535   00244E                     i2u192_41:
  5536   00244E  EF0E  F012         	goto	i2l2649
  5537   002452                     i2u192_40:
  5538   002452                     
  5539                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  5540   002452  C013  F00A         	movff	pad@buf,fputs@s
  5541   002456  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5542   00245A  C011  F00C         	movff	pad@fp,fputs@fp
  5543   00245E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5544   002462  ECB3  F014         	call	_fputs	;wreg free
  5545   002466  0012               	return		;funcret
  5546   002468                     __end_of_pad:
  5547                           	callstack 0
  5548                           
  5549 ;; *************** function _fputs *****************
  5550 ;; Defined at:
  5551 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5554 ;;		 -> dbuf(32), 
  5555 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5556 ;;		 -> sprintf@f(12), 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  i               2   14[COMRAM] int 
  5559 ;;  c               1   13[COMRAM] unsigned char 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  2    9[COMRAM] int 
  5562 ;; Registers used:
  5563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5570 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;Total ram usage:        7 bytes
  5574 ;; Hardware stack levels used: 1
  5575 ;; Hardware stack levels required when called: 2
  5576 ;; This function calls:
  5577 ;;		_fputc
  5578 ;; This function is called by:
  5579 ;;		_pad
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text39
  5584   002966                     __ptext39:
  5585                           	callstack 0
  5586   002966                     _fputs:
  5587                           	callstack 14
  5588   002966  0E00               	movlw	0
  5589   002968  6E10               	movwf	(fputs@i+1)^0,c
  5590   00296A  0E00               	movlw	0
  5591   00296C  6E0F               	movwf	fputs@i^0,c
  5592   00296E  EFC4  F014         	goto	i2l2561
  5593   002972                     i2l2557:
  5594   002972  C00E  F001         	movff	fputs@c,fputc@c
  5595   002976  6A02               	clrf	(fputc@c+1)^0,c
  5596   002978  C00C  F003         	movff	fputs@fp,fputc@fp
  5597   00297C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5598   002980  EC4A  F00D         	call	_fputc	;wreg free
  5599   002984  4A0F               	infsnz	fputs@i^0,f,c
  5600   002986  2A10               	incf	(fputs@i+1)^0,f,c
  5601   002988                     i2l2561:
  5602   002988  500F               	movf	fputs@i^0,w,c
  5603   00298A  240A               	addwf	fputs@s^0,w,c
  5604   00298C  6ED9               	movwf	fsr2l,c
  5605   00298E  5010               	movf	(fputs@i+1)^0,w,c
  5606   002990  200B               	addwfc	(fputs@s+1)^0,w,c
  5607   002992  6EDA               	movwf	fsr2h,c
  5608   002994  50DF               	movf	indf2,w,c
  5609   002996  6E0E               	movwf	fputs@c^0,c
  5610   002998  500E               	movf	fputs@c^0,w,c
  5611   00299A  A4D8               	btfss	status,2,c
  5612   00299C  EFD2  F014         	goto	i2u178_41
  5613   0029A0  EFD4  F014         	goto	i2u178_40
  5614   0029A4                     i2u178_41:
  5615   0029A4  EFB9  F014         	goto	i2l2557
  5616   0029A8                     i2u178_40:
  5617   0029A8  0012               	return		;funcret
  5618   0029AA                     __end_of_fputs:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function _fputc *****************
  5622 ;; Defined at:
  5623 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;  c               2    0[COMRAM] int 
  5626 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5627 ;;		 -> sprintf@f(12), 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;		None
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  2    0[COMRAM] int 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;Total ram usage:        9 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; Hardware stack levels required when called: 1
  5646 ;; This function calls:
  5647 ;;		_putch
  5648 ;; This function is called by:
  5649 ;;		_pad
  5650 ;;		_vfpfcnvrt
  5651 ;;		_fputs
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text40
  5656   001A94                     __ptext40:
  5657                           	callstack 0
  5658   001A94                     _fputc:
  5659                           	callstack 17
  5660   001A94  5003               	movf	fputc@fp^0,w,c
  5661   001A96  1004               	iorwf	(fputc@fp+1)^0,w,c
  5662   001A98  B4D8               	btfsc	status,2,c
  5663   001A9A  EF51  F00D         	goto	i2u174_41
  5664   001A9E  EF53  F00D         	goto	i2u174_40
  5665   001AA2                     i2u174_41:
  5666   001AA2  EF5C  F00D         	goto	i2l2545
  5667   001AA6                     i2u174_40:
  5668   001AA6  5003               	movf	fputc@fp^0,w,c
  5669   001AA8  1004               	iorwf	(fputc@fp+1)^0,w,c
  5670   001AAA  A4D8               	btfss	status,2,c
  5671   001AAC  EF5A  F00D         	goto	i2u175_41
  5672   001AB0  EF5C  F00D         	goto	i2u175_40
  5673   001AB4                     i2u175_41:
  5674   001AB4  EF61  F00D         	goto	i2l2547
  5675   001AB8                     i2u175_40:
  5676   001AB8                     i2l2545:
  5677   001AB8  5001               	movf	fputc@c^0,w,c
  5678   001ABA  EC91  F015         	call	_putch
  5679   001ABE  EFAE  F00D         	goto	i2l1296
  5680   001AC2                     i2l2547:
  5681   001AC2  EE20 F00A          	lfsr	2,10
  5682   001AC6  5003               	movf	fputc@fp^0,w,c
  5683   001AC8  26D9               	addwf	fsr2l,f,c
  5684   001ACA  5004               	movf	(fputc@fp+1)^0,w,c
  5685   001ACC  22DA               	addwfc	fsr2h,f,c
  5686   001ACE  50DE               	movf	postinc2,w,c
  5687   001AD0  10DE               	iorwf	postinc2,w,c
  5688   001AD2  B4D8               	btfsc	status,2,c
  5689   001AD4  EF6E  F00D         	goto	i2u176_41
  5690   001AD8  EF70  F00D         	goto	i2u176_40
  5691   001ADC                     i2u176_41:
  5692   001ADC  EF8B  F00D         	goto	i2l2551
  5693   001AE0                     i2u176_40:
  5694   001AE0  EE20 F00A          	lfsr	2,10
  5695   001AE4  5003               	movf	fputc@fp^0,w,c
  5696   001AE6  26D9               	addwf	fsr2l,f,c
  5697   001AE8  5004               	movf	(fputc@fp+1)^0,w,c
  5698   001AEA  22DA               	addwfc	fsr2h,f,c
  5699   001AEC  EE10 F003          	lfsr	1,3
  5700   001AF0  5003               	movf	fputc@fp^0,w,c
  5701   001AF2  26E1               	addwf	fsr1l,f,c
  5702   001AF4  5004               	movf	(fputc@fp+1)^0,w,c
  5703   001AF6  22E2               	addwfc	fsr1h,f,c
  5704   001AF8  50DE               	movf	postinc2,w,c
  5705   001AFA  5CE6               	subwf	postinc1,w,c
  5706   001AFC  50E6               	movf	postinc1,w,c
  5707   001AFE  0A80               	xorlw	128
  5708   001B00  6E09               	movwf	(??_fputc+4)^0,c
  5709   001B02  50DE               	movf	postinc2,w,c
  5710   001B04  0A80               	xorlw	128
  5711   001B06  5809               	subwfb	(??_fputc+4)^0,w,c
  5712   001B08  B0D8               	btfsc	status,0,c
  5713   001B0A  EF89  F00D         	goto	i2u177_41
  5714   001B0E  EF8B  F00D         	goto	i2u177_40
  5715   001B12                     i2u177_41:
  5716   001B12  EFAE  F00D         	goto	i2l1296
  5717   001B16                     i2u177_40:
  5718   001B16                     i2l2551:
  5719   001B16  EE20 F003          	lfsr	2,3
  5720   001B1A  5003               	movf	fputc@fp^0,w,c
  5721   001B1C  26D9               	addwf	fsr2l,f,c
  5722   001B1E  5004               	movf	(fputc@fp+1)^0,w,c
  5723   001B20  22DA               	addwfc	fsr2h,f,c
  5724   001B22  CFDE F005          	movff	postinc2,??_fputc
  5725   001B26  CFDD F006          	movff	postdec2,??_fputc+1
  5726   001B2A  C003  FFD9         	movff	fputc@fp,fsr2l
  5727   001B2E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5728   001B32  CFDE F007          	movff	postinc2,??_fputc+2
  5729   001B36  CFDD F008          	movff	postdec2,??_fputc+3
  5730   001B3A  5005               	movf	??_fputc^0,w,c
  5731   001B3C  2407               	addwf	(??_fputc+2)^0,w,c
  5732   001B3E  6ED9               	movwf	fsr2l,c
  5733   001B40  5006               	movf	(??_fputc+1)^0,w,c
  5734   001B42  2008               	addwfc	(??_fputc+3)^0,w,c
  5735   001B44  6EDA               	movwf	fsr2h,c
  5736   001B46  C001  FFDF         	movff	fputc@c,indf2
  5737   001B4A  EE20 F003          	lfsr	2,3
  5738   001B4E  5003               	movf	fputc@fp^0,w,c
  5739   001B50  26D9               	addwf	fsr2l,f,c
  5740   001B52  5004               	movf	(fputc@fp+1)^0,w,c
  5741   001B54  22DA               	addwfc	fsr2h,f,c
  5742   001B56  2ADE               	incf	postinc2,f,c
  5743   001B58  0E00               	movlw	0
  5744   001B5A  22DD               	addwfc	postdec2,f,c
  5745   001B5C                     i2l1296:
  5746   001B5C  0012               	return		;funcret
  5747   001B5E                     __end_of_fputc:
  5748                           	callstack 0
  5749                           
  5750 ;; *************** function _putch *****************
  5751 ;; Defined at:
  5752 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;  c               1    wreg     unsigned char 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  c               1    0[COMRAM] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;Total ram usage:        0 bytes
  5771 ;; Hardware stack levels used: 1
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_fputc
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text41
  5780   002B22                     __ptext41:
  5781                           	callstack 0
  5782   002B22                     _putch:
  5783                           	callstack 17
  5784   002B22  0012               	return		;funcret
  5785   002B24                     __end_of_putch:
  5786                           	callstack 0
  5787                           
  5788 ;; *************** function _abs *****************
  5789 ;; Defined at:
  5790 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  a               2    6[COMRAM] int 
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;		None
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  2    6[COMRAM] int 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5807 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5808 ;;Total ram usage:        4 bytes
  5809 ;; Hardware stack levels used: 1
  5810 ;; This function calls:
  5811 ;;		Nothing
  5812 ;; This function is called by:
  5813 ;;		_dtoa
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           	psect	text42
  5818   0029AA                     __ptext42:
  5819                           	callstack 0
  5820   0029AA                     _abs:
  5821                           	callstack 17
  5822   0029AA  BE08               	btfsc	(abs@a+1)^0,7,c
  5823   0029AC  EFE2  F014         	goto	i2u193_40
  5824   0029B0  5008               	movf	(abs@a+1)^0,w,c
  5825   0029B2  E106               	bnz	i2u193_41
  5826   0029B4  0407               	decf	abs@a^0,w,c
  5827   0029B6  B0D8               	btfsc	status,0,c
  5828   0029B8  EFE0  F014         	goto	i2u193_41
  5829   0029BC  EFE2  F014         	goto	i2u193_40
  5830   0029C0                     i2u193_41:
  5831   0029C0  EFF0  F014         	goto	i2l1281
  5832   0029C4                     i2u193_40:
  5833   0029C4  C007  F009         	movff	abs@a,??_abs
  5834   0029C8  C008  F00A         	movff	abs@a+1,??_abs+1
  5835   0029CC  1E09               	comf	??_abs^0,f,c
  5836   0029CE  1E0A               	comf	(??_abs+1)^0,f,c
  5837   0029D0  4A09               	infsnz	??_abs^0,f,c
  5838   0029D2  2A0A               	incf	(??_abs+1)^0,f,c
  5839   0029D4  C009  F007         	movff	??_abs,?_abs
  5840   0029D8  C00A  F008         	movff	??_abs+1,?_abs+1
  5841   0029DC  EFF4  F014         	goto	i2l1284
  5842   0029E0                     i2l1281:
  5843   0029E0  C007  F007         	movff	abs@a,?_abs
  5844   0029E4  C008  F008         	movff	abs@a+1,?_abs+1
  5845   0029E8                     i2l1284:
  5846   0029E8  0012               	return		;funcret
  5847   0029EA                     __end_of_abs:
  5848                           	callstack 0
  5849                           
  5850 ;; *************** function ___awmod *****************
  5851 ;; Defined at:
  5852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  5853 ;; Parameters:    Size  Location     Type
  5854 ;;  dividend        2    0[COMRAM] int 
  5855 ;;  divisor         2    2[COMRAM] int 
  5856 ;; Auto vars:     Size  Location     Type
  5857 ;;  sign            1    5[COMRAM] unsigned char 
  5858 ;;  counter         1    4[COMRAM] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  2    0[COMRAM] int 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;Total ram usage:        6 bytes
  5873 ;; Hardware stack levels used: 1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_dtoa
  5878 ;; This function uses a non-reentrant model
  5879 ;;
  5880                           
  5881                           	psect	text43
  5882   001D8E                     __ptext43:
  5883                           	callstack 0
  5884   001D8E                     ___awmod:
  5885                           	callstack 17
  5886   001D8E  0E00               	movlw	0
  5887   001D90  6E06               	movwf	___awmod@sign^0,c
  5888   001D92  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5889   001D94  EFD0  F00E         	goto	i2u185_40
  5890   001D98  EFCE  F00E         	goto	i2u185_41
  5891   001D9C                     i2u185_41:
  5892   001D9C  EFD6  F00E         	goto	i2l2615
  5893   001DA0                     i2u185_40:
  5894   001DA0  6C01               	negf	___awmod@dividend^0,c
  5895   001DA2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5896   001DA4  B0D8               	btfsc	status,0,c
  5897   001DA6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5898   001DA8  0E01               	movlw	1
  5899   001DAA  6E06               	movwf	___awmod@sign^0,c
  5900   001DAC                     i2l2615:
  5901   001DAC  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5902   001DAE  EFDD  F00E         	goto	i2u186_40
  5903   001DB2  EFDB  F00E         	goto	i2u186_41
  5904   001DB6                     i2u186_41:
  5905   001DB6  EFE1  F00E         	goto	i2l2619
  5906   001DBA                     i2u186_40:
  5907   001DBA  6C03               	negf	___awmod@divisor^0,c
  5908   001DBC  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5909   001DBE  B0D8               	btfsc	status,0,c
  5910   001DC0  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5911   001DC2                     i2l2619:
  5912   001DC2  5003               	movf	___awmod@divisor^0,w,c
  5913   001DC4  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5914   001DC6  B4D8               	btfsc	status,2,c
  5915   001DC8  EFE8  F00E         	goto	i2u187_41
  5916   001DCC  EFEA  F00E         	goto	i2u187_40
  5917   001DD0                     i2u187_41:
  5918   001DD0  EF0E  F00F         	goto	i2l2635
  5919   001DD4                     i2u187_40:
  5920   001DD4  0E01               	movlw	1
  5921   001DD6  6E05               	movwf	___awmod@counter^0,c
  5922   001DD8  EFF2  F00E         	goto	i2l2625
  5923   001DDC                     i2l2623:
  5924   001DDC  90D8               	bcf	status,0,c
  5925   001DDE  3603               	rlcf	___awmod@divisor^0,f,c
  5926   001DE0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5927   001DE2  2A05               	incf	___awmod@counter^0,f,c
  5928   001DE4                     i2l2625:
  5929   001DE4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5930   001DE6  EFF7  F00E         	goto	i2u188_41
  5931   001DEA  EFF9  F00E         	goto	i2u188_40
  5932   001DEE                     i2u188_41:
  5933   001DEE  EFEE  F00E         	goto	i2l2623
  5934   001DF2                     i2u188_40:
  5935   001DF2                     i2l2627:
  5936   001DF2  5003               	movf	___awmod@divisor^0,w,c
  5937   001DF4  5C01               	subwf	___awmod@dividend^0,w,c
  5938   001DF6  5004               	movf	(___awmod@divisor+1)^0,w,c
  5939   001DF8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5940   001DFA  A0D8               	btfss	status,0,c
  5941   001DFC  EF02  F00F         	goto	i2u189_41
  5942   001E00  EF04  F00F         	goto	i2u189_40
  5943   001E04                     i2u189_41:
  5944   001E04  EF08  F00F         	goto	i2l2631
  5945   001E08                     i2u189_40:
  5946   001E08  5003               	movf	___awmod@divisor^0,w,c
  5947   001E0A  5E01               	subwf	___awmod@dividend^0,f,c
  5948   001E0C  5004               	movf	(___awmod@divisor+1)^0,w,c
  5949   001E0E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5950   001E10                     i2l2631:
  5951   001E10  90D8               	bcf	status,0,c
  5952   001E12  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5953   001E14  3203               	rrcf	___awmod@divisor^0,f,c
  5954   001E16  2E05               	decfsz	___awmod@counter^0,f,c
  5955   001E18  EFF9  F00E         	goto	i2l2627
  5956   001E1C                     i2l2635:
  5957   001E1C  5006               	movf	___awmod@sign^0,w,c
  5958   001E1E  B4D8               	btfsc	status,2,c
  5959   001E20  EF14  F00F         	goto	i2u190_41
  5960   001E24  EF16  F00F         	goto	i2u190_40
  5961   001E28                     i2u190_41:
  5962   001E28  EF1A  F00F         	goto	i2l2639
  5963   001E2C                     i2u190_40:
  5964   001E2C  6C01               	negf	___awmod@dividend^0,c
  5965   001E2E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5966   001E30  B0D8               	btfsc	status,0,c
  5967   001E32  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5968   001E34                     i2l2639:
  5969   001E34  C001  F001         	movff	___awmod@dividend,?___awmod
  5970   001E38  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5971   001E3C  0012               	return		;funcret
  5972   001E3E                     __end_of___awmod:
  5973                           	callstack 0
  5974                           
  5975 ;; *************** function ___awdiv *****************
  5976 ;; Defined at:
  5977 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  dividend        2    0[COMRAM] int 
  5980 ;;  divisor         2    2[COMRAM] int 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  quotient        2    6[COMRAM] int 
  5983 ;;  sign            1    5[COMRAM] unsigned char 
  5984 ;;  counter         1    4[COMRAM] unsigned char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  2    0[COMRAM] int 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5994 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;Total ram usage:        8 bytes
  5999 ;; Hardware stack levels used: 1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_dtoa
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text44
  6008   001B5E                     __ptext44:
  6009                           	callstack 0
  6010   001B5E                     ___awdiv:
  6011                           	callstack 17
  6012   001B5E  0E00               	movlw	0
  6013   001B60  6E06               	movwf	___awdiv@sign^0,c
  6014   001B62  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6015   001B64  EFB8  F00D         	goto	i2u179_40
  6016   001B68  EFB6  F00D         	goto	i2u179_41
  6017   001B6C                     i2u179_41:
  6018   001B6C  EFBE  F00D         	goto	i2l2571
  6019   001B70                     i2u179_40:
  6020   001B70  6C03               	negf	___awdiv@divisor^0,c
  6021   001B72  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6022   001B74  B0D8               	btfsc	status,0,c
  6023   001B76  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6024   001B78  0E01               	movlw	1
  6025   001B7A  6E06               	movwf	___awdiv@sign^0,c
  6026   001B7C                     i2l2571:
  6027   001B7C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6028   001B7E  EFC5  F00D         	goto	i2u180_40
  6029   001B82  EFC3  F00D         	goto	i2u180_41
  6030   001B86                     i2u180_41:
  6031   001B86  EFCB  F00D         	goto	i2l2577
  6032   001B8A                     i2u180_40:
  6033   001B8A  6C01               	negf	___awdiv@dividend^0,c
  6034   001B8C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6035   001B8E  B0D8               	btfsc	status,0,c
  6036   001B90  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6037   001B92  0E01               	movlw	1
  6038   001B94  1A06               	xorwf	___awdiv@sign^0,f,c
  6039   001B96                     i2l2577:
  6040   001B96  0E00               	movlw	0
  6041   001B98  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6042   001B9A  0E00               	movlw	0
  6043   001B9C  6E07               	movwf	___awdiv@quotient^0,c
  6044   001B9E  5003               	movf	___awdiv@divisor^0,w,c
  6045   001BA0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6046   001BA2  B4D8               	btfsc	status,2,c
  6047   001BA4  EFD6  F00D         	goto	i2u181_41
  6048   001BA8  EFD8  F00D         	goto	i2u181_40
  6049   001BAC                     i2u181_41:
  6050   001BAC  EF00  F00E         	goto	i2l2599
  6051   001BB0                     i2u181_40:
  6052   001BB0  0E01               	movlw	1
  6053   001BB2  6E05               	movwf	___awdiv@counter^0,c
  6054   001BB4  EFE0  F00D         	goto	i2l2585
  6055   001BB8                     i2l2583:
  6056   001BB8  90D8               	bcf	status,0,c
  6057   001BBA  3603               	rlcf	___awdiv@divisor^0,f,c
  6058   001BBC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6059   001BBE  2A05               	incf	___awdiv@counter^0,f,c
  6060   001BC0                     i2l2585:
  6061   001BC0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6062   001BC2  EFE5  F00D         	goto	i2u182_41
  6063   001BC6  EFE7  F00D         	goto	i2u182_40
  6064   001BCA                     i2u182_41:
  6065   001BCA  EFDC  F00D         	goto	i2l2583
  6066   001BCE                     i2u182_40:
  6067   001BCE                     i2l2587:
  6068   001BCE  90D8               	bcf	status,0,c
  6069   001BD0  3607               	rlcf	___awdiv@quotient^0,f,c
  6070   001BD2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6071   001BD4  5003               	movf	___awdiv@divisor^0,w,c
  6072   001BD6  5C01               	subwf	___awdiv@dividend^0,w,c
  6073   001BD8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6074   001BDA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6075   001BDC  A0D8               	btfss	status,0,c
  6076   001BDE  EFF3  F00D         	goto	i2u183_41
  6077   001BE2  EFF5  F00D         	goto	i2u183_40
  6078   001BE6                     i2u183_41:
  6079   001BE6  EFFA  F00D         	goto	i2l2595
  6080   001BEA                     i2u183_40:
  6081   001BEA  5003               	movf	___awdiv@divisor^0,w,c
  6082   001BEC  5E01               	subwf	___awdiv@dividend^0,f,c
  6083   001BEE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6084   001BF0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6085   001BF2  8007               	bsf	___awdiv@quotient^0,0,c
  6086   001BF4                     i2l2595:
  6087   001BF4  90D8               	bcf	status,0,c
  6088   001BF6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6089   001BF8  3203               	rrcf	___awdiv@divisor^0,f,c
  6090   001BFA  2E05               	decfsz	___awdiv@counter^0,f,c
  6091   001BFC  EFE7  F00D         	goto	i2l2587
  6092   001C00                     i2l2599:
  6093   001C00  5006               	movf	___awdiv@sign^0,w,c
  6094   001C02  B4D8               	btfsc	status,2,c
  6095   001C04  EF06  F00E         	goto	i2u184_41
  6096   001C08  EF08  F00E         	goto	i2u184_40
  6097   001C0C                     i2u184_41:
  6098   001C0C  EF0C  F00E         	goto	i2l2603
  6099   001C10                     i2u184_40:
  6100   001C10  6C07               	negf	___awdiv@quotient^0,c
  6101   001C12  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6102   001C14  B0D8               	btfsc	status,0,c
  6103   001C16  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6104   001C18                     i2l2603:
  6105   001C18  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6106   001C1C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6107   001C20  0012               	return		;funcret
  6108   001C22                     __end_of___awdiv:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function _memset *****************
  6112 ;; Defined at:
  6113 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  dest            2    0[COMRAM] PTR void 
  6116 ;;		 -> arr(11), 
  6117 ;;  c               2    2[COMRAM] int 
  6118 ;;  n               2    4[COMRAM] unsigned int 
  6119 ;; Auto vars:     Size  Location     Type
  6120 ;;  s               2   10[COMRAM] PTR unsigned char 
  6121 ;;		 -> arr(11), 
  6122 ;;  k               2    8[COMRAM] unsigned int 
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  2    0[COMRAM] PTR void 
  6125 ;; Registers used:
  6126 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6132 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;Total ram usage:       12 bytes
  6137 ;; Hardware stack levels used: 1
  6138 ;; This function calls:
  6139 ;;		Nothing
  6140 ;; This function is called by:
  6141 ;;		_cnvert_uint32_to_string
  6142 ;;		_cnvert_uint8_to_string
  6143 ;;		_cnvert_uint16_to_string
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text45
  6148   0011AE                     __ptext45:
  6149                           	callstack 0
  6150   0011AE                     _memset:
  6151                           	callstack 21
  6152   0011AE  C001  F00B         	movff	memset@dest,memset@s
  6153   0011B2  C002  F00C         	movff	memset@dest+1,memset@s+1
  6154   0011B6  5005               	movf	memset@n^0,w,c
  6155   0011B8  1006               	iorwf	(memset@n+1)^0,w,c
  6156   0011BA  A4D8               	btfss	status,2,c
  6157   0011BC  EFE2  F008         	goto	i2u226_41
  6158   0011C0  EFE4  F008         	goto	i2u226_40
  6159   0011C4                     i2u226_41:
  6160   0011C4  EFE6  F008         	goto	i2l2873
  6161   0011C8                     i2u226_40:
  6162   0011C8  EF91  F009         	goto	i2l1206
  6163   0011CC                     i2l2873:
  6164   0011CC  C00B  FFD9         	movff	memset@s,fsr2l
  6165   0011D0  C00C  FFDA         	movff	memset@s+1,fsr2h
  6166   0011D4  C003  FFDF         	movff	memset@c,indf2
  6167   0011D8  5005               	movf	memset@n^0,w,c
  6168   0011DA  240B               	addwf	memset@s^0,w,c
  6169   0011DC  6E07               	movwf	??_memset^0,c
  6170   0011DE  5006               	movf	(memset@n+1)^0,w,c
  6171   0011E0  200C               	addwfc	(memset@s+1)^0,w,c
  6172   0011E2  6E08               	movwf	(??_memset+1)^0,c
  6173   0011E4  0EFF               	movlw	255
  6174   0011E6  2407               	addwf	??_memset^0,w,c
  6175   0011E8  6ED9               	movwf	fsr2l,c
  6176   0011EA  0EFF               	movlw	255
  6177   0011EC  2008               	addwfc	(??_memset+1)^0,w,c
  6178   0011EE  6EDA               	movwf	fsr2h,c
  6179   0011F0  C003  FFDF         	movff	memset@c,indf2
  6180   0011F4  5006               	movf	(memset@n+1)^0,w,c
  6181   0011F6  E107               	bnz	i2u227_41
  6182   0011F8  0E03               	movlw	3
  6183   0011FA  5C05               	subwf	memset@n^0,w,c
  6184   0011FC  B0D8               	btfsc	status,0,c
  6185   0011FE  EF03  F009         	goto	i2u227_41
  6186   001202  EF05  F009         	goto	i2u227_40
  6187   001206                     i2u227_41:
  6188   001206  EF07  F009         	goto	i2l2879
  6189   00120A                     i2u227_40:
  6190   00120A  EF91  F009         	goto	i2l1206
  6191   00120E                     i2l2879:
  6192   00120E  EE20 F001          	lfsr	2,1
  6193   001212  500B               	movf	memset@s^0,w,c
  6194   001214  26D9               	addwf	fsr2l,f,c
  6195   001216  500C               	movf	(memset@s+1)^0,w,c
  6196   001218  22DA               	addwfc	fsr2h,f,c
  6197   00121A  C003  FFDF         	movff	memset@c,indf2
  6198   00121E  EE20 F002          	lfsr	2,2
  6199   001222  500B               	movf	memset@s^0,w,c
  6200   001224  26D9               	addwf	fsr2l,f,c
  6201   001226  500C               	movf	(memset@s+1)^0,w,c
  6202   001228  22DA               	addwfc	fsr2h,f,c
  6203   00122A  C003  FFDF         	movff	memset@c,indf2
  6204   00122E  5005               	movf	memset@n^0,w,c
  6205   001230  240B               	addwf	memset@s^0,w,c
  6206   001232  6E07               	movwf	??_memset^0,c
  6207   001234  5006               	movf	(memset@n+1)^0,w,c
  6208   001236  200C               	addwfc	(memset@s+1)^0,w,c
  6209   001238  6E08               	movwf	(??_memset+1)^0,c
  6210   00123A  0EFE               	movlw	254
  6211   00123C  2407               	addwf	??_memset^0,w,c
  6212   00123E  6ED9               	movwf	fsr2l,c
  6213   001240  0EFF               	movlw	255
  6214   001242  2008               	addwfc	(??_memset+1)^0,w,c
  6215   001244  6EDA               	movwf	fsr2h,c
  6216   001246  C003  FFDF         	movff	memset@c,indf2
  6217   00124A  5005               	movf	memset@n^0,w,c
  6218   00124C  240B               	addwf	memset@s^0,w,c
  6219   00124E  6E07               	movwf	??_memset^0,c
  6220   001250  5006               	movf	(memset@n+1)^0,w,c
  6221   001252  200C               	addwfc	(memset@s+1)^0,w,c
  6222   001254  6E08               	movwf	(??_memset+1)^0,c
  6223   001256  0EFD               	movlw	253
  6224   001258  2407               	addwf	??_memset^0,w,c
  6225   00125A  6ED9               	movwf	fsr2l,c
  6226   00125C  0EFF               	movlw	255
  6227   00125E  2008               	addwfc	(??_memset+1)^0,w,c
  6228   001260  6EDA               	movwf	fsr2h,c
  6229   001262  C003  FFDF         	movff	memset@c,indf2
  6230   001266  5006               	movf	(memset@n+1)^0,w,c
  6231   001268  E107               	bnz	i2u228_41
  6232   00126A  0E07               	movlw	7
  6233   00126C  5C05               	subwf	memset@n^0,w,c
  6234   00126E  B0D8               	btfsc	status,0,c
  6235   001270  EF3C  F009         	goto	i2u228_41
  6236   001274  EF3E  F009         	goto	i2u228_40
  6237   001278                     i2u228_41:
  6238   001278  EF40  F009         	goto	i2l2885
  6239   00127C                     i2u228_40:
  6240   00127C  EF91  F009         	goto	i2l1206
  6241   001280                     i2l2885:
  6242   001280  EE20 F003          	lfsr	2,3
  6243   001284  500B               	movf	memset@s^0,w,c
  6244   001286  26D9               	addwf	fsr2l,f,c
  6245   001288  500C               	movf	(memset@s+1)^0,w,c
  6246   00128A  22DA               	addwfc	fsr2h,f,c
  6247   00128C  C003  FFDF         	movff	memset@c,indf2
  6248   001290  5005               	movf	memset@n^0,w,c
  6249   001292  240B               	addwf	memset@s^0,w,c
  6250   001294  6E07               	movwf	??_memset^0,c
  6251   001296  5006               	movf	(memset@n+1)^0,w,c
  6252   001298  200C               	addwfc	(memset@s+1)^0,w,c
  6253   00129A  6E08               	movwf	(??_memset+1)^0,c
  6254   00129C  0EFC               	movlw	252
  6255   00129E  2407               	addwf	??_memset^0,w,c
  6256   0012A0  6ED9               	movwf	fsr2l,c
  6257   0012A2  0EFF               	movlw	255
  6258   0012A4  2008               	addwfc	(??_memset+1)^0,w,c
  6259   0012A6  6EDA               	movwf	fsr2h,c
  6260   0012A8  C003  FFDF         	movff	memset@c,indf2
  6261   0012AC  5006               	movf	(memset@n+1)^0,w,c
  6262   0012AE  E107               	bnz	i2u229_41
  6263   0012B0  0E09               	movlw	9
  6264   0012B2  5C05               	subwf	memset@n^0,w,c
  6265   0012B4  B0D8               	btfsc	status,0,c
  6266   0012B6  EF5F  F009         	goto	i2u229_41
  6267   0012BA  EF61  F009         	goto	i2u229_40
  6268   0012BE                     i2u229_41:
  6269   0012BE  EF63  F009         	goto	i2l2891
  6270   0012C2                     i2u229_40:
  6271   0012C2  EF91  F009         	goto	i2l1206
  6272   0012C6                     i2l2891:
  6273   0012C6  C00B  F007         	movff	memset@s,??_memset
  6274   0012CA  C00C  F008         	movff	memset@s+1,??_memset+1
  6275   0012CE  1E07               	comf	??_memset^0,f,c
  6276   0012D0  1E08               	comf	(??_memset+1)^0,f,c
  6277   0012D2  4A07               	infsnz	??_memset^0,f,c
  6278   0012D4  2A08               	incf	(??_memset+1)^0,f,c
  6279   0012D6  0E03               	movlw	3
  6280   0012D8  1407               	andwf	??_memset^0,w,c
  6281   0012DA  6E09               	movwf	memset@k^0,c
  6282   0012DC  6A0A               	clrf	(memset@k+1)^0,c
  6283   0012DE  5009               	movf	memset@k^0,w,c
  6284   0012E0  260B               	addwf	memset@s^0,f,c
  6285   0012E2  500A               	movf	(memset@k+1)^0,w,c
  6286   0012E4  220C               	addwfc	(memset@s+1)^0,f,c
  6287   0012E6  5009               	movf	memset@k^0,w,c
  6288   0012E8  5E05               	subwf	memset@n^0,f,c
  6289   0012EA  500A               	movf	(memset@k+1)^0,w,c
  6290   0012EC  5A06               	subwfb	(memset@n+1)^0,f,c
  6291   0012EE  0EFC               	movlw	252
  6292   0012F0  1605               	andwf	memset@n^0,f,c
  6293   0012F2  0EFF               	movlw	255
  6294   0012F4  1606               	andwf	(memset@n+1)^0,f,c
  6295   0012F6  EF88  F009         	goto	i2l2899
  6296   0012FA                     i2l2893:
  6297   0012FA  C00B  FFD9         	movff	memset@s,fsr2l
  6298   0012FE  C00C  FFDA         	movff	memset@s+1,fsr2h
  6299   001302  C003  FFDF         	movff	memset@c,indf2
  6300   001306  0605               	decf	memset@n^0,f,c
  6301   001308  A0D8               	btfss	status,0,c
  6302   00130A  0606               	decf	(memset@n+1)^0,f,c
  6303   00130C  4A0B               	infsnz	memset@s^0,f,c
  6304   00130E  2A0C               	incf	(memset@s+1)^0,f,c
  6305   001310                     i2l2899:
  6306   001310  5005               	movf	memset@n^0,w,c
  6307   001312  1006               	iorwf	(memset@n+1)^0,w,c
  6308   001314  A4D8               	btfss	status,2,c
  6309   001316  EF8F  F009         	goto	i2u230_41
  6310   00131A  EF91  F009         	goto	i2u230_40
  6311   00131E                     i2u230_41:
  6312   00131E  EF7D  F009         	goto	i2l2893
  6313   001322                     i2u230_40:
  6314   001322                     i2l1206:
  6315   001322  0012               	return		;funcret
  6316   001324                     __end_of_memset:
  6317                           	callstack 0
  6318                           
  6319 ;; *************** function _Timer1_write_value *****************
  6320 ;; Defined at:
  6321 ;;		line 80 in file "MCAL_layer/TIMER1/timer1.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  timer1          2    0[COMRAM] PTR struct .
  6324 ;;		 -> timer1_obj(9), 
  6325 ;;  value           2    2[COMRAM] unsigned short 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  ret             1    0        unsigned char 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  1    wreg      unsigned char 
  6330 ;; Registers used:
  6331 ;;		wreg, status,2, status,0
  6332 ;; Tracked objects:
  6333 ;;		On entry : 0/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;Total ram usage:        4 bytes
  6342 ;; Hardware stack levels used: 1
  6343 ;; This function calls:
  6344 ;;		Nothing
  6345 ;; This function is called by:
  6346 ;;		_SET_FLAG
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350                           	psect	text46
  6351   002AFC                     __ptext46:
  6352                           	callstack 0
  6353   002AFC                     _Timer1_write_value:
  6354                           	callstack 22
  6355   002AFC                     
  6356                           ;MCAL_layer/TIMER1/timer1.c: 82:     if(((void*)0) == timer1)
  6357   002AFC  5001               	movf	Timer1_write_value@timer1^0,w,c
  6358   002AFE  1002               	iorwf	(Timer1_write_value@timer1+1)^0,w,c
  6359   002B00  A4D8               	btfss	status,2,c
  6360   002B02  EF85  F015         	goto	i2u275_41
  6361   002B06  EF87  F015         	goto	i2u275_40
  6362   002B0A                     i2u275_41:
  6363   002B0A  EF89  F015         	goto	i2l441
  6364   002B0E                     i2u275_40:
  6365   002B0E  EF8E  F015         	goto	i2l443
  6366   002B12                     i2l441:
  6367                           
  6368                           ;MCAL_layer/TIMER1/timer1.c: 85:     {;MCAL_layer/TIMER1/timer1.c: 86:         (T1CONbit
      +                          s.RD16 = 0);
  6369   002B12  9ECD               	bcf	205,7,c	;volatile
  6370   002B14                     
  6371                           ;MCAL_layer/TIMER1/timer1.c: 87:         TMR1H = value >> 8;
  6372   002B14  5004               	movf	(Timer1_write_value@value+1)^0,w,c
  6373   002B16  6ECF               	movwf	207,c	;volatile
  6374   002B18                     
  6375                           ;MCAL_layer/TIMER1/timer1.c: 88:         TMR1L = (uint8)value;
  6376   002B18  C003  FFCE         	movff	Timer1_write_value@value,4046	;volatile
  6377   002B1C                     i2l443:
  6378   002B1C  0012               	return		;funcret
  6379   002B1E                     __end_of_Timer1_write_value:
  6380                           	callstack 0
  6381                           
  6382 ;; *************** function _Timer1_read_value *****************
  6383 ;; Defined at:
  6384 ;;		line 92 in file "MCAL_layer/TIMER1/timer1.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  timer1          2    0[COMRAM] PTR struct .
  6387 ;;		 -> timer1_obj(9), 
  6388 ;;  value           2    2[COMRAM] PTR unsigned short 
  6389 ;;		 -> freq(2), 
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;  ret             1    0        unsigned char 
  6392 ;;  tmr1H           1    9[COMRAM] unsigned char 
  6393 ;;  tmr1L           1    8[COMRAM] unsigned char 
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      unsigned char 
  6396 ;; Registers used:
  6397 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;Total ram usage:       10 bytes
  6408 ;; Hardware stack levels used: 1
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_SET_FLAG
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text47
  6417   002920                     __ptext47:
  6418                           	callstack 0
  6419   002920                     _Timer1_read_value:
  6420                           	callstack 22
  6421   002920                     
  6422                           ;MCAL_layer/TIMER1/timer1.c: 94:     uint8 tmr1L = 0, tmr1H = 0;
  6423   002920  0E00               	movlw	0
  6424   002922  6E09               	movwf	Timer1_read_value@tmr1L^0,c
  6425   002924  0E00               	movlw	0
  6426   002926  6E0A               	movwf	Timer1_read_value@tmr1H^0,c
  6427   002928                     
  6428                           ;MCAL_layer/TIMER1/timer1.c: 95:     if(((void*)0) == timer1)
  6429   002928  5001               	movf	Timer1_read_value@timer1^0,w,c
  6430   00292A  1002               	iorwf	(Timer1_read_value@timer1+1)^0,w,c
  6431   00292C  A4D8               	btfss	status,2,c
  6432   00292E  EF9B  F014         	goto	i2u276_41
  6433   002932  EF9D  F014         	goto	i2u276_40
  6434   002936                     i2u276_41:
  6435   002936  EF9F  F014         	goto	i2l446
  6436   00293A                     i2u276_40:
  6437   00293A  EFB2  F014         	goto	i2l448
  6438   00293E                     i2l446:
  6439   00293E  50CE               	movf	206,w,c	;volatile
  6440   002940  50CF               	movf	207,w,c	;volatile
  6441   002942                     
  6442                           ;MCAL_layer/TIMER1/timer1.c: 102:         *value = (uint16)(TMR1L + (TMR1H << 8));
  6443   002942  50CF               	movf	207,w,c	;volatile
  6444   002944  6E06               	movwf	(??_Timer1_read_value+1)^0,c
  6445   002946  6A05               	clrf	??_Timer1_read_value^0,c
  6446   002948  50CE               	movf	206,w,c	;volatile
  6447   00294A  2405               	addwf	??_Timer1_read_value^0,w,c
  6448   00294C  6E07               	movwf	(??_Timer1_read_value+2)^0,c
  6449   00294E  0E00               	movlw	0
  6450   002950  2006               	addwfc	(??_Timer1_read_value+1)^0,w,c
  6451   002952  6E08               	movwf	(??_Timer1_read_value+3)^0,c
  6452   002954  C003  FFD9         	movff	Timer1_read_value@value,fsr2l
  6453   002958  C004  FFDA         	movff	Timer1_read_value@value+1,fsr2h
  6454   00295C  C007  FFDE         	movff	??_Timer1_read_value+2,postinc2
  6455   002960  C008  FFDD         	movff	??_Timer1_read_value+3,postdec2
  6456   002964                     i2l448:
  6457   002964  0012               	return		;funcret
  6458   002966                     __end_of_Timer1_read_value:
  6459                           	callstack 0
  6460                           
  6461                           	psect	text48
  6462   000000                     __ptext48:
  6463                           	callstack 0
  6464   000000                     
  6465                           	psect	rparam
  6466   000000                     
  6467                           	psect	temp
  6468   00007D                     btemp:
  6469                           	callstack 0
  6470   00007D                     	ds	1
  6471   000000                     int$flags	set	btemp
  6472   000000                     wtemp8	set	btemp+1
  6473   000000                     ttemp5	set	btemp+1
  6474   000000                     ttemp6	set	btemp+4
  6475   000000                     ttemp7	set	btemp+8
  6476                           
  6477                           	psect	config
  6478                           
  6479                           ; Padding undefined space
  6480   300000                     	org	3145728
  6481   300000  FF                 	db	255
  6482                           
  6483                           ;Config register CONFIG1H @ 0x300001
  6484                           ;	Oscillator Selection bits
  6485                           ;	OSC = HS, HS oscillator
  6486                           ;	Fail-Safe Clock Monitor Enable bit
  6487                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6488                           ;	Internal/External Oscillator Switchover bit
  6489                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6490   300001                     	org	3145729
  6491   300001  02                 	db	2
  6492                           
  6493                           ;Config register CONFIG2L @ 0x300002
  6494                           ;	Power-up Timer Enable bit
  6495                           ;	PWRT = OFF, PWRT disabled
  6496                           ;	Brown-out Reset Enable bits
  6497                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6498                           ;	Brown Out Reset Voltage bits
  6499                           ;	BORV = 1, 
  6500   300002                     	org	3145730
  6501   300002  09                 	db	9
  6502                           
  6503                           ;Config register CONFIG2H @ 0x300003
  6504                           ;	Watchdog Timer Enable bit
  6505                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6506                           ;	Watchdog Timer Postscale Select bits
  6507                           ;	WDTPS = 32768, 1:32768
  6508   300003                     	org	3145731
  6509   300003  1E                 	db	30
  6510                           
  6511                           ; Padding undefined space
  6512   300004                     	org	3145732
  6513   300004  FF                 	db	255
  6514                           
  6515                           ;Config register CONFIG3H @ 0x300005
  6516                           ;	CCP2 MUX bit
  6517                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6518                           ;	PORTB A/D Enable bit
  6519                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6520                           ;	Low-Power Timer1 Oscillator Enable bit
  6521                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6522                           ;	MCLR Pin Enable bit
  6523                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6524   300005                     	org	3145733
  6525   300005  81                 	db	129
  6526                           
  6527                           ;Config register CONFIG4L @ 0x300006
  6528                           ;	Stack Full/Underflow Reset Enable bit
  6529                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6530                           ;	Single-Supply ICSP Enable bit
  6531                           ;	LVP = OFF, Single-Supply ICSP disabled
  6532                           ;	Extended Instruction Set Enable bit
  6533                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6534                           ;	Background Debugger Enable bit
  6535                           ;	DEBUG = 0x1, unprogrammed default
  6536   300006                     	org	3145734
  6537   300006  81                 	db	129
  6538                           
  6539                           ; Padding undefined space
  6540   300007                     	org	3145735
  6541   300007  FF                 	db	255
  6542                           
  6543                           ;Config register CONFIG5L @ 0x300008
  6544                           ;	Code Protection bit
  6545                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6546                           ;	Code Protection bit
  6547                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6548                           ;	Code Protection bit
  6549                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6550                           ;	Code Protection bit
  6551                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6552   300008                     	org	3145736
  6553   300008  0F                 	db	15
  6554                           
  6555                           ;Config register CONFIG5H @ 0x300009
  6556                           ;	Boot Block Code Protection bit
  6557                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6558                           ;	Data EEPROM Code Protection bit
  6559                           ;	CPD = OFF, Data EEPROM not code-protected
  6560   300009                     	org	3145737
  6561   300009  C0                 	db	192
  6562                           
  6563                           ;Config register CONFIG6L @ 0x30000A
  6564                           ;	Write Protection bit
  6565                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6566                           ;	Write Protection bit
  6567                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6568                           ;	Write Protection bit
  6569                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6570                           ;	Write Protection bit
  6571                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6572   30000A                     	org	3145738
  6573   30000A  0F                 	db	15
  6574                           
  6575                           ;Config register CONFIG6H @ 0x30000B
  6576                           ;	Configuration Register Write Protection bit
  6577                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6578                           ;	Boot Block Write Protection bit
  6579                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6580                           ;	Data EEPROM Write Protection bit
  6581                           ;	WRTD = OFF, Data EEPROM not write-protected
  6582   30000B                     	org	3145739
  6583   30000B  E0                 	db	224
  6584                           
  6585                           ;Config register CONFIG7L @ 0x30000C
  6586                           ;	Table Read Protection bit
  6587                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6588                           ;	Table Read Protection bit
  6589                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6590                           ;	Table Read Protection bit
  6591                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6592                           ;	Table Read Protection bit
  6593                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6594   30000C                     	org	3145740
  6595   30000C  0F                 	db	15
  6596                           
  6597                           ;Config register CONFIG7H @ 0x30000D
  6598                           ;	Boot Block Table Read Protection bit
  6599                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6600   30000D                     	org	3145741
  6601   30000D  40                 	db	64
  6602                           tosu	equ	0xFFF
  6603                           tosh	equ	0xFFE
  6604                           tosl	equ	0xFFD
  6605                           stkptr	equ	0xFFC
  6606                           pclatu	equ	0xFFB
  6607                           pclath	equ	0xFFA
  6608                           pcl	equ	0xFF9
  6609                           tblptru	equ	0xFF8
  6610                           tblptrh	equ	0xFF7
  6611                           tblptrl	equ	0xFF6
  6612                           tablat	equ	0xFF5
  6613                           prodh	equ	0xFF4
  6614                           prodl	equ	0xFF3
  6615                           indf0	equ	0xFEF
  6616                           postinc0	equ	0xFEE
  6617                           postdec0	equ	0xFED
  6618                           preinc0	equ	0xFEC
  6619                           plusw0	equ	0xFEB
  6620                           fsr0h	equ	0xFEA
  6621                           fsr0l	equ	0xFE9
  6622                           wreg	equ	0xFE8
  6623                           indf1	equ	0xFE7
  6624                           postinc1	equ	0xFE6
  6625                           postdec1	equ	0xFE5
  6626                           preinc1	equ	0xFE4
  6627                           plusw1	equ	0xFE3
  6628                           fsr1h	equ	0xFE2
  6629                           fsr1l	equ	0xFE1
  6630                           bsr	equ	0xFE0
  6631                           indf2	equ	0xFDF
  6632                           postinc2	equ	0xFDE
  6633                           postdec2	equ	0xFDD
  6634                           preinc2	equ	0xFDC
  6635                           plusw2	equ	0xFDB
  6636                           fsr2h	equ	0xFDA
  6637                           fsr2l	equ	0xFD9
  6638                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        45
    BSS         85
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    110     124
    BANK0           128     31     115
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1613$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> cnvert_uint32_to_string@Temp_String(COMRAM[11]), cnvert_uint16_to_string@Temp_String(COMRAM[6]), cnvert_uint8_to_string@Temp_String(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1560$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1560$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 11
		 -> arr(BANK0[11]), 

    memset@s	PTR unsigned char  size(2) Largest target is 11
		 -> arr(BANK0[11]), 

    timer1_obj.interrupt_timer1	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    timer0_obj.interrupt_timer0	PTR FTN()void  size(2) Largest target is 1
		 -> SET_FLAG(), 

    set_TIMER1_interrupt@timer1.interrupt_timer1	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMER1_HUNDLER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    set_TIMER1_interrupt@timer1	PTR struct . size(2) Largest target is 9
		 -> timer1_obj(BANK0[9]), 

    select_prescaler_timer@timer1.interrupt_timer1	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    select_prescaler_timer@timer1	PTR struct . size(2) Largest target is 9
		 -> timer1_obj(BANK0[9]), 

    select_timer_mode@timer1$F836@timer1.interrupt_timer1	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    select_timer_mode@timer1$F836@timer1	PTR struct . size(2) Largest target is 9
		 -> timer1_obj(BANK0[9]), 

    Timer1_read_value@value	PTR unsigned short  size(2) Largest target is 2
		 -> freq(COMRAM[2]), 

    Timer1_read_value@timer1	PTR struct . size(2) Largest target is 9
		 -> timer1_obj(BANK0[9]), 

    Timer1_write_value@timer1	PTR struct . size(2) Largest target is 9
		 -> timer1_obj(BANK0[9]), 

    S778$interrupt_timer1	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer1_init@timer1.interrupt_timer1	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer1_init@timer1	PTR struct . size(2) Largest target is 9
		 -> timer1_obj(BANK0[9]), 

    set_TIMER0_interrupt@timer0.interrupt_timer0	PTR FTN()void  size(2) Largest target is 1
		 -> SET_FLAG(), 

    TIMER0_HUNDLER	PTR FTN()void  size(2) Largest target is 1
		 -> SET_FLAG(), NULL(), 

    set_TIMER0_interrupt@timer0	PTR struct . size(2) Largest target is 9
		 -> timer0_obj(BANK0[9]), 

    prescaler_timer_status@timer0.interrupt_timer0	PTR FTN()void  size(2) Largest target is 1
		 -> SET_FLAG(), 

    prescaler_timer_status@timer0	PTR struct . size(2) Largest target is 9
		 -> timer0_obj(BANK0[9]), 

    select_timer_mode@timer0.interrupt_timer0	PTR FTN()void  size(2) Largest target is 1
		 -> SET_FLAG(), 

    select_timer_mode@timer0	PTR struct . size(2) Largest target is 9
		 -> timer0_obj(BANK0[9]), 

    select_cnt_reg_size@timer0.interrupt_timer0	PTR FTN()void  size(2) Largest target is 1
		 -> SET_FLAG(), 

    select_cnt_reg_size@timer0	PTR struct . size(2) Largest target is 9
		 -> timer0_obj(BANK0[9]), 

    S591$interrupt_timer0	PTR FTN()void  size(2) Largest target is 1
		 -> SET_FLAG(), 

    Timer0_init@timer0.interrupt_timer0	PTR FTN()void  size(2) Largest target is 1
		 -> SET_FLAG(), 

    Timer0_init@timer0	PTR struct . size(2) Largest target is 9
		 -> timer0_obj(BANK0[9]), 

    gpio_pin_intialize@Pin_Config	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit.lcd_pin(BANK0[4]), lcd_4bit(BANK0[6]), 

    gpio_pin_write_logic@Pin_Config	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit.lcd_pin(BANK0[4]), lcd_4bit(BANK0[6]), 

    gpio_pin_direction_intialize@Pin_Config	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit.lcd_pin(BANK0[4]), lcd_4bit(BANK0[6]), 

    port_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_reg	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRhll[1]), TRISD(BITBIGSFRhll[1]), TRISC(BITBIGSFRhll[1]), TRISB(BITBIGSFRhll[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    cnvert_uint32_to_string@str	PTR unsigned char  size(2) Largest target is 11
		 -> arr(BANK0[11]), 

    sp__memset	PTR void  size(2) Largest target is 11
		 -> arr(BANK0[11]), 

    lcd_4_bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    send_4_bit_help@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    send_4_bit_string_data_pos@data	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[13]), arr(BANK0[11]), 

    send_4_bit_string_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    send_4_bit_string_data@data	PTR unsigned char  size(2) Largest target is 8
		 -> STR_4(CODE[8]), 

    send_4_bit_string_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    send_4_bit_char_data_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    send_4_bit_enable@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    send_4_bit_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    send_4_bit_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 

    lcd_pins_4_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd_4bit(BANK0[6]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    _SET_FLAG->_cnvert_uint32_to_string
    _send_4_bit_string_data_pos->i2_lcd_4_bit_set_cursor
    i2_send_4_bit_char_data->i2_send_4_bit_help
    i2_lcd_4_bit_set_cursor->i2_send_4_bit_command
    i2_send_4_bit_command->i2_send_4_bit_help
    i2_send_4_bit_help->i2_gpio_pin_write_logic
    i2_send_4_bit_enable->i2_gpio_pin_write_logic
    _cnvert_uint32_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod

Critical Paths under _main in BANK0

    _main->_send_4_bit_char_data_pos
    _send_4_bit_string_data->_send_4_bit_char_data
    _send_4_bit_char_data_pos->_lcd_4_bit_set_cursor
    _send_4_bit_char_data->_send_4_bit_help
    _lcd_4_bit_set_cursor->_send_4_bit_command
    _application_initialize->_lcd_pins_4_initialize
    _lcd_pins_4_initialize->_send_4_bit_command
    _send_4_bit_command->_send_4_bit_help
    _send_4_bit_help->_gpio_pin_write_logic
    _send_4_bit_enable->_gpio_pin_write_logic
    _gpio_pin_intialize->_gpio_pin_write_logic
    _Timer1_init->_select_prescaler_timer
    _Timer1_init->_select_timer_mode@timer1$F836
    _Timer0_init->_prescaler_timer_status
    _Timer0_init->_select_cnt_reg_size
    _Timer0_init->_select_timer_mode

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   47925
                                             29 BANK0      2     2      0
             _application_initialize
           _send_4_bit_char_data_pos
             _send_4_bit_string_data
 ---------------------------------------------------------------------------------
 (1) _send_4_bit_string_data                               5     1      4    9618
                                             18 BANK0      4     0      4
               _send_4_bit_char_data
 ---------------------------------------------------------------------------------
 (1) _send_4_bit_char_data_pos                             6     1      5   21851
                                             23 BANK0      6     1      5
               _lcd_4_bit_set_cursor
               _send_4_bit_char_data
 ---------------------------------------------------------------------------------
 (2) _send_4_bit_char_data                                 4     1      3    9368
                                             14 BANK0      4     1      3
               _gpio_pin_write_logic
                  _send_4_bit_enable
                    _send_4_bit_help
 ---------------------------------------------------------------------------------
 (2) _lcd_4_bit_set_cursor                                 5     1      4   11733
                                             18 BANK0      5     1      4
                 _send_4_bit_command
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   16387
                        _Timer0_init
                        _Timer1_init
              _lcd_pins_4_initialize
 ---------------------------------------------------------------------------------
 (2) _lcd_pins_4_initialize                                6     4      2   14795
                                             18 BANK0      6     4      2
                 _gpio_pin_intialize
                 _send_4_bit_command
 ---------------------------------------------------------------------------------
 (3) _send_4_bit_command                                   4     1      3   11040
                                             14 BANK0      4     1      3
               _gpio_pin_write_logic
                  _send_4_bit_enable
                    _send_4_bit_help
 ---------------------------------------------------------------------------------
 (3) _send_4_bit_help                                      4     1      3    3293
                                             10 BANK0      4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _send_4_bit_enable                                    3     1      2    2855
                                             10 BANK0      3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_intialize                                   4     2      2    3306
                                             10 BANK0      4     2      2
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                10     7      3    2459
                                              0 BANK0     10     7      3
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_direction_intialize                         9     7      2     255
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (2) _Timer1_init                                          5     3      2     710
                                              3 BANK0      4     2      2
             _select_prescaler_timer
      _select_timer_mode@timer1$F836
               _set_TIMER1_interrupt
 ---------------------------------------------------------------------------------
 (3) _set_TIMER1_interrupt                                 3     1      2     128
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _select_timer_mode@timer1$F836                        4     2      2     194
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _select_prescaler_timer                               4     2      2     128
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_init                                          5     3      2     882
                                              3 BANK0      4     2      2
             _prescaler_timer_status
                _select_cnt_reg_size
                  _select_timer_mode
               _set_TIMER0_interrupt
 ---------------------------------------------------------------------------------
 (3) _set_TIMER0_interrupt                                 3     1      2     128
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _select_timer_mode                                    4     2      2     194
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _select_cnt_reg_size                                  4     2      2     150
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _prescaler_timer_status                               4     2      2     172
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManager                                    12    12      0   17697
                                             98 COMRAM    12    12      0
                         _TIMER0_ISR
                         _TIMER1_ISR
 ---------------------------------------------------------------------------------
 (7) _TIMER1_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TIMER0_ISR                                           0     0      0   17697
                                NULL *
                           _SET_FLAG *
 ---------------------------------------------------------------------------------
 (8) _SET_FLAG                                             0     0      0   17697
                  _Timer1_read_value
                 _Timer1_write_value
            _cnvert_uint32_to_string
         _send_4_bit_string_data_pos
               i2_send_4_bit_command
 ---------------------------------------------------------------------------------
 (9) _send_4_bit_string_data_pos                           7     1      6    6718
                                             23 COMRAM     6     0      6
             i2_lcd_4_bit_set_cursor
             i2_send_4_bit_char_data
 ---------------------------------------------------------------------------------
 (10) i2_send_4_bit_char_data                              4     1      3    2672
                                             14 COMRAM     4     1      3
             i2_gpio_pin_write_logic
                i2_send_4_bit_enable
                  i2_send_4_bit_help
 ---------------------------------------------------------------------------------
 (10) i2_lcd_4_bit_set_cursor                              5     1      4    3273
                                             18 COMRAM     5     1      4
               i2_send_4_bit_command
 ---------------------------------------------------------------------------------
 (9) i2_send_4_bit_command                                 4     1      3    2880
                                             14 COMRAM     4     1      3
             i2_gpio_pin_write_logic
                i2_send_4_bit_enable
                  i2_send_4_bit_help
 ---------------------------------------------------------------------------------
 (10) i2_send_4_bit_help                                   4     1      3    1029
                                             10 COMRAM     4     1      3
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (10) i2_send_4_bit_enable                                 3     1      2     791
                                             10 COMRAM     3     1      2
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (11) i2_gpio_pin_write_logic                             10     7      3     595
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (9) _cnvert_uint32_to_string                             17    13      4    7665
                                             82 COMRAM    16    12      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (10) _sprintf                                            22    16      6    5851
                                             62 COMRAM    20    14      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (11) _vfprintf                                            8     2      6    5196
                                             54 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (12) _vfpfcnvrt                                          19    13      6    4846
                                             40 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (13) _dtoa                                               13     9      4    3626
                                             27 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (14) _pad                                                11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (15) _fputs                                               7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (13) _fputc                                               9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (14) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (14) _abs                                                 4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) ___awdiv                                             8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (10) _memset                                             12     6      6    1403
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (9) _Timer1_write_value                                   5     1      4     226
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _Timer1_read_value                                   11     7      4     208
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_initialize
     _Timer0_init
       _prescaler_timer_status
       _select_cnt_reg_size
       _select_timer_mode
       _set_TIMER0_interrupt
     _Timer1_init
       _select_prescaler_timer
       _select_timer_mode@timer1$F836
       _set_TIMER1_interrupt
     _lcd_pins_4_initialize
       _gpio_pin_intialize
         _gpio_pin_direction_intialize
         _gpio_pin_write_logic
       _send_4_bit_command
         _gpio_pin_write_logic
         _send_4_bit_enable
           _gpio_pin_write_logic
         _send_4_bit_help
           _gpio_pin_write_logic
   _send_4_bit_char_data_pos
     _lcd_4_bit_set_cursor
       _send_4_bit_command
     _send_4_bit_char_data
       _gpio_pin_write_logic
       _send_4_bit_enable
       _send_4_bit_help
   _send_4_bit_string_data
     _send_4_bit_char_data

 _InterruptManager (ROOT)
   _TIMER0_ISR
     NULL(Fake) *
     _SET_FLAG *
       _Timer1_read_value
       _Timer1_write_value
       _cnvert_uint32_to_string
         _memset
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___awdiv
                 ___awmod
                 _abs
                   ___awmod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
               _fputc
       _send_4_bit_string_data_pos
         i2_lcd_4_bit_set_cursor
           i2_send_4_bit_command
             i2_gpio_pin_write_logic
             i2_send_4_bit_enable
               i2_gpio_pin_write_logic
             i2_send_4_bit_help
               i2_gpio_pin_write_logic
         i2_send_4_bit_char_data
           i2_gpio_pin_write_logic
           i2_send_4_bit_enable
           i2_send_4_bit_help
       i2_send_4_bit_command
   _TIMER1_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1F      73       5       89.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     6E      7C       1       98.4%
BITBIGSFRhlhll      2E      0       0      40        0.0%
BITBIGSFRhlhhh      1A      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRhll         6      0       0      41        0.0%
BITBIGSFRhlhlhh      5      0       0      39        0.0%
BITBIGSFRlh          4      0       0      42        0.0%
BITBIGSFRll          4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      12        0.0%
DATA                 0      0     10F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Oct 11 13:40:59 2023

                    ??_InterruptManager 0063          send_4_bit_char_data_pos@column 00EE  
                    _send_4_bit_command 2370                ??_prescaler_timer_status 00D6  
                    ?_send_4_bit_enable 00DE      __end_of_send_4_bit_string_data_pos 2152  
            _send_4_bit_string_data_pos 20BC                                      l31 145E  
                                    l41 236E                                      l51 291E  
                                    l36 23EC                                      l46 27A0  
                                    l72 21E2                                      l59 26F2  
                                    l84 19C8                                      l78 19C6  
                ?_lcd_pins_4_initialize 00E6                            ___awdiv@sign 0006  
                   ?_send_4_bit_command 00E2                    _lcd_4_bit_set_cursor 18F6  
                                   l401 2AFA                                     l234 1588  
                                   l252 17D6                                     l229 1586  
                                   l342 2284                                     l247 17D4  
                                   l344 22F0                                     l433 1CDA  
                                   l273 254C                                     l428 1C3A  
                                   l524 2AA6                                     l454 1F80  
                                   l518 2692                                     l383 201E  
                                   l464 2A1E                                     l377 274C  
                                   l459 1F80                                     l396 24DA  
                                   l388 201E                                     l469 2AD0  
                   ??_send_4_bit_enable 00E0                                     _abs 29AA  
                                   _arr 00C0                                     _pad 23EE  
                          ___awmod@sign 0006                    _set_TIMER0_interrupt 2AD2  
                                   prod 0FF3                                     tosl 0FFD  
                                   wreg 0FE8                                    ?_abs 0007  
                                  l3101 247C                                    l3111 24D8  
                                  l3103 2480                                    l3105 249C  
                                  l3113 2AD2                                    l3201 1364  
                                  l3107 249E                                    l3115 2AD2  
                                  l3131 1F18                                    l3123 1EE4  
                                  l3211 13B8                                    l3203 1380  
                                  l3109 24BC                                    l3061 1F82  
                                  l3117 2AE6                                    l3141 1F5E  
                                  l3133 1F1E                                    l3125 1EE4  
                                  l3221 1416                                    l3213 13DA  
                                  l3205 1384                                    l3071 1FBC  
                                  l3063 1F82                                    l3119 2AEA  
                                  l3151 2A02                                    l3143 1F7A  
                                  l3135 1F3A                                    l3127 1EF8  
                                  l3223 1428                                    l3215 13E0  
                                  l3207 1394                                    l3231 22F2  
                                  l3081 2018                                    l3073 1FD8  
                                  l3065 1F96                                    l3145 29EA  
                                  l3137 1F3C                                    l3129 1EFC  
                                  l3161 2AC0                                    l3225 143A  
                                  l3217 13F2                                    l3209 13A6  
                                  l3233 22F2                                    l3401 28F2  
                                  l3091 2728                                    l3083 26F4  
                                  l3075 1FDA                                    l3067 1F9A  
                                  l3331 2292                                    l3323 226C  
                                  l3147 29EA                                    l3139 1F58  
                                  l3155 2AA8                                    l3227 144C  
                                  l3219 1404                                    l3251 1918  
                                  l3243 18F6                                    l3235 2306  
                                  l3411 26B2                                    l3093 272E  
                                  l3085 26F4                                    l3077 1FF6  
                                  l3069 1FB6                                    l3341 22E0  
                                  l3333 22B2                                    l3325 226C  
                                  l3149 29FE                                    l3157 2AA8  
                                  l3261 1980                                    l3253 1928  
                                  l3245 18FC                                    l3237 230E  
                                  l3413 26CE                                    l3405 269A  
                                  l3095 274A                                    l3087 2708  
                                  l3079 1FFC                                    l3343 22EE  
                                  l3335 22DA                                    l3327 2280  
                                  l3159 2ABC                                    l3351 1C36  
                                  l3191 1338                                    l3263 199A  
                                  l3255 1942                                    l3247 18FE  
                                  l3239 236C                                    l3415 26D4  
                                  l3407 269A                                    l3097 2468  
                                  l3089 270C                                    l3337 22DC  
                                  l3329 2286                                    l3361 1C7C  
                                  l3353 1C3C                                    l3193 133C  
                                  l3265 19AC                                    l3257 1954  
                                  l3249 1910                                    l3409 26AE  
                                  l3099 2468                                    l3339 22DE  
                                  l3371 1CC8                                    l3363 1C94  
                                  l3355 1C58                                    l3347 1C22  
                                  l3195 1360                                    l3187 1324  
                                  l3259 196E                                    l3267 19C6  
                                  l3373 1CCA                                    l3365 1CB4  
                                  l3357 1C5E                                    l3349 1C22  
                                  l3189 1324                                    l3437 2A7C  
                                  l3375 1CD8                                    l3367 1CC4  
                                  l3359 1C7A                                    l2831 2152  
                                  l3439 2A98                                    l3703 2632  
                                  l3369 1CC6                                    l2921 14A2  
                                  l2913 1460                                    l2841 274E  
                                  l2833 2166                                    l3721 2682  
                                  l3705 2632                                    l2923 14B8  
                                  l2915 1466                                    l2851 279E  
                                  l2843 274E                                    l2835 216E  
                                  l3395 28DA                                    l3715 2652  
                                  l3707 2636                                    l2925 151C  
                                  l2917 1478                                    l2845 2762  
                                  l2837 21E0                                    l2829 2152  
                                  l3397 28DA                                    l3717 266C  
                                  l3709 264C                                    ?_pad 0011  
                                  l2919 149A                                    l2791 16CC  
                                  l2847 276A                                    l3399 28EE  
                                  l3719 267E                                    l2793 16EE  
                                  l2849 277E                                    l2795 16F6  
                                  l2787 16B4                                    l2797 1706  
                                  l2789 16BA                                    l2981 251A  
                                  l2973 24DC                                    l2799 1764  
                                  l2983 254A                                    l2975 24DC  
                                  l2991 2384                                    l2977 24F0  
                                  l2993 238C                                    l2979 2512  
                                  l2995 23EA                                    l2987 2370  
                                  l2989 2370                                    STR_1 1016  
                                  STR_3 1016                                    STR_4 100E  
                                  STR_5 1001              ??_send_4_bit_char_data_pos 00F0  
                  i2send_4_bit_help@lcd 000B                                    u2200 17D4  
                                  u3000 26F2                                    u2201 17D0  
                                  u3001 26EE                                    _LATA 0F89  
                                  u2310 1478                                    u2150 16CC  
                                  u2230 2166                                    _LATB 0F8A  
                                  u2311 1474                                    u2151 16C8  
                                  u2231 2162                                    _LATC 0F8B  
                                  u2320 149A                                    u2160 16EE  
                                  u2240 2762                                    _LATD 0F8C  
                                  u2321 1496                                    u2161 16EA  
                                  u2241 275E                                    _LATE 0F8D  
                                  u2330 14B8                                    u2170 1706  
                                  u2331 14B4                                    u2171 1702  
                                  u2430 24F0                                    u2431 24EC  
                                  u2600 2018                                    u2360 1586  
                                  u2344 14D8                                    u2184 1726  
                                  u2440 2512                                    u3400 2692  
                  i2send_4_bit_help@ret 000E                                    u2601 2014  
                                  u2361 1582                                    u2345 14D4  
                                  u2185 1722                                    u2441 250E  
                                  u3401 268E                                    u2610 2708  
                                  u2354 153C                                    u2194 1784  
                                  u2450 2384                                    u2611 2704  
                                  u2355 1538                                    u2195 1780  
                                  u2451 2380                                    u2620 2728  
                                  u2700 1F3A                                    u2621 2724  
                                  u2701 1F36                                    u2630 274A  
                                  u2710 1F58                                    u2631 2746  
                                  u2711 1F54                                    u2640 247C  
                                  u2560 1F96                                    u2720 1F7A  
                                  u2800 1910                                    u2641 2478  
                                  u2561 1F92                                    u2721 1F76  
                                  u2801 190C                                    u3417 2674  
                                  u2650 249C                                    u2570 1FB6  
                                  u2730 29FE                                    u2810 1928  
                                  u2651 2498                                    u2571 1FB2  
                                  u2731 29FA                                    u3427 139C  
                                  u2811 1924                                    u2660 24D8  
                                  u2580 1FD8                                    u2740 2ABC  
                                  u2820 1954                                    u2661 24D4  
                                  u2581 1FD4                                    u2741 2AB8  
                                  u3437 13C0                                    u2821 1950  
                                  u2590 1FF6                                    u2670 2AE6  
                                  u2830 1980                                    u2591 1FF2  
                                  u2671 2AE2                                    u3447 13DC  
                                  u2831 197C                                    u2680 1EF8  
                                  u2840 19AC                                    u2681 1EF4  
                                  u2841 19A8                                    u2930 2280  
                                  u2690 1F18                                    u2770 1338  
                                  u2931 227C                                    u2691 1F14  
                                  u2771 1334                                    u2940 1C36  
                                  u2780 1394                                    u2941 1C32  
                                  u2781 1390                                    u2950 1C58  
                                  u2790 2306                                    u2951 1C54  
                                  u2791 2302                                    u2960 1C7A  
                                  u2961 1C76                                    u2980 28EE  
                                  u2981 28EA                                    u2990 26AE  
                                  u2991 26AA                                    i2l41 25BE  
                  _set_TIMER1_interrupt 2AA8                                    i2l36 2630  
                                  i2l46 288C                                    i2l72 226A  
                                  i2l67 2150                                    i2l84 1A92  
                                  i2l78 1A90                   ?_send_4_bit_char_data 00E2  
                  ??_send_4_bit_command 00E5                                    abs@a 0007  
                                  _dbuf 0100                                    _flag 007A  
                                  _main 2632                                    _dtoa 101A  
                                  _freq 007B                                    _prec 0075  
                                  pad@i 0018                                    pad@p 0015  
                                  fsr1h 0FE2                                    fsr2h 0FDA  
                                  indf1 0FE7                                    indf2 0FDF  
                                  fsr1l 0FE1                                    pad@w 001A  
                                  fsr2l 0FD9                                    btemp 007D  
                                  prodh 0FF4                                    prodl 0FF3  
             __end_of_send_4_bit_enable 27A2                                    start 000E  
                          ___param_bank 0000               send_4_bit_string_data@lcd 00E6  
                                 ??_abs 0009                    _gpio_pin_write_logic 16B4  
                           ?_TIMER0_ISR 0001                             ?_TIMER1_ISR 0001  
                                 ??_pad 0017               select_cnt_reg_size@timer0 00D4  
                Timer1_read_value@tmr1H 000A                  Timer1_read_value@tmr1L 0009  
                Timer1_read_value@value 0003                          _TIMER0_HUNDLER 0077  
                 ?_lcd_4_bit_set_cursor 00E6                                   ?_main 0001  
                                 ?_dtoa 001C                ??_application_initialize 00EC  
                        _TIMER1_HUNDLER 00BE                         __end_of___awdiv 1C22  
                       __end_of___awmod 1E3E                         ___awdiv@divisor 0003  
                                 i2l321 1EB0                                   i2l252 18F4  
                                 i2l405 2A4C                                   i2l318 1E90  
                                 i2l247 18F2                                   i2l441 2B12  
                                 i2l443 2B1C                                   i2l187 1D8C  
                                 i2l446 293E                                   i2l448 2964  
                                 i2l528 20BA                                   i2l473 2B20  
                                 i2l762 1C20                                   i2l775 1E3C  
                       ___awdiv@counter 0005                            vfpfcnvrt@fmt 002B  
                                 _TMR0H 0FD7                                   _TMR1H 0FCF  
                                 _TMR0L 0FD6                                   _TMR1L 0FCE  
                 ?_set_TIMER0_interrupt 00D4                                   _PORTA 0F80  
                                 _PORTB 0F81                                   _PORTC 0F82  
                                 _PORTD 0F83                                   _PORTE 0F84  
                                 _TRISA 0F92                                   _TRISB 0F93  
                                 _TRISC 0F94                                   _TRISD 0F95  
                                 _TRISE 0F96                        __end_of_SET_FLAG 20BC  
            set_TIMER1_interrupt@timer1 00D4            select_prescaler_timer@timer1 00D4  
                                 _flags 0079                                   _fputc 1A94  
                                 _fputs 2966                                   pad@fp 0011  
                                 _width 0073                   ?_set_TIMER1_interrupt 00D4  
                                 _putch 2B22                                   main@i 00F2  
                                 dtoa@d 001E                                   dtoa@i 0026  
                                 dtoa@p 0022                                   dtoa@s 0028  
                                 dtoa@w 0024                                   pclath 0FFA  
                                 pclatu 0FFB                                   tablat 0FF5  
           __end_ofi2_send_4_bit_enable 288E             i2send_4_bit_command@command 0011  
                                 plusw1 0FE3                                   plusw2 0FDB  
               __end_of_send_4_bit_help 21E4                                   ttemp5 007E  
                                 ttemp6 0081                                   ttemp7 0085  
                                 status 0FD8                                   wtemp8 007E  
                       __end_of_sprintf 28DA                         __initialization 27F2  
                          __end_of_main 269A                            __end_of_dtoa 11AE  
             i2gpio_pin_write_logic@ret 000A                   ?_gpio_pin_write_logic 00D4  
        ?_select_timer_mode@timer1$F838 00D4           i2send_4_bit_help@data_command 000D  
           i2gpio_pin_write_logic@logic 0003                                  ??_main 00F1  
                                ??_dtoa 0020                           __activetblptr 0003  
              ??_send_4_bit_string_data 00EA                 Timer1_read_value@timer1 0001  
      send_4_bit_string_data_pos@column 001B                  i2send_4_bit_enable@lcd 000B  
                i2send_4_bit_enable@ret 000D                                  ?_fputc 0001  
                                ?_fputs 000A                        ___awdiv@dividend 0001  
                                ?_putch 0001                  ??_send_4_bit_char_data 00E5  
                                i2l1206 1322                                  i2l1304 29A8  
                                i2l1241 2410                                  i2l3001 20BC  
                                i2l1250 1060                                  i2l1307 2B22  
                                i2l1219 28D8                                  i2l3011 211E  
                                i2l3003 20CE                                  i2l1252 1068  
                                i2l1245 2466                                  i2l1253 10AE  
                                i2l3005 20D2                                  i2l1271 16B2  
                                i2l3007 20EA                                  i2l1264 11AC  
                                i2l1281 29E0                                  i2l3041 1CDC  
                                i2l3009 211A                                  i2l3051 1D24  
                                i2l3043 1CEE                                  i2l1284 29E8  
                                i2l1277 27F0                                  i2l3053 1D32  
                                i2l3045 1CF2                                  i2l3055 1D52  
                                i2l3047 1D04                                  i2l3039 1CDC  
                                i2l1296 1B5C                                  i2l2601 1C10  
                                i2l3057 1D6E                                  i2l3049 1D08  
                                i2l3171 2B14                                  i2l2603 1C18  
                                i2l2611 1DA0                                  i2l3059 1D70  
                                i2l3181 293A                                  i2l3173 2B18  
                                i2l3165 2AFC                                  i2l2621 1DD4  
                                i2l2613 1DA8                                  i2l2541 1A94  
                                i2l2701 1166                                  i2l3183 2942  
                                i2l3167 2AFC                                  i2l2631 1E10  
                                i2l2623 1DDC                                  i2l2615 1DAC  
                                i2l2607 1D8E                                  i2l2551 1B16  
                                i2l2543 1AA6                                  i2l2703 1176  
                                i2l2711 17D8                                  i2l3431 2A34  
                                i2l3177 2920                                  i2l3169 2B0E  
                                i2l2633 1E16                                  i2l2625 1DE4  
                                i2l2617 1DBA                                  i2l2609 1D92  
                                i2l2545 1AB8                                  i2l2561 2988  
                                i2l2705 117C                                  i2l2721 1828  
                                i2l2713 17DC                                  i2l3433 2B1E  
                                i2l3179 2928                                  i2l2571 1B7C  
                                i2l2563 1B5E                                  i2l2627 1DF2  
                                i2l2635 1E1C                                  i2l2619 1DC2  
                                i2l2547 1AC2                                  i2l2555 2966  
                                i2l2651 2430                                  i2l2643 23EE  
                                i2l2707 118C                                  i2l2731 158A  
                                i2l2811 27CA                                  i2l2723 1884  
                                i2l2715 17EE                                  i2l3427 2A20  
                                i2l2581 1BB0                                  i2l2573 1B8A  
                                i2l2565 1B62                                  i2l2637 1E2C  
                                i2l2629 1E08                                  i2l2549 1AE0  
                                i2l2557 2972                                  i2l2653 2434  
                                i2l2645 23FC                                  i2l2661 101A  
                                i2l2741 15DE                                  i2l2733 15B0  
                                i2l2813 27E8                                  i2l2901 288E  
                                i2l2717 1810                                  i2l2821 25D2  
                                i2l3381 2022                                  i2l3429 2A22  
                                i2l3701 1EAC                                  i2l2591 1BEA  
                                i2l2583 1BB8                                  i2l2575 1B92  
                                i2l2567 1B70                                  i2l2639 1E34  
                                i2l2559 2984                                  i2l2655 2452  
                                i2l2647 2408                                  i2l2671 1070  
                                i2l2663 102E                                  i2l2751 1676  
                                i2l2743 15FC                                  i2l2735 15BE  
                                i2l2807 27A2                                  i2l2903 289E  
                                i2l2719 1818                                  i2l2823 25DA  
                                i2l3391 208A                                  i2l3383 2036  
                                i2l2593 1BF2                                  i2l2585 1BC0  
                                i2l2577 1B96                                  i2l2569 1B78  
                                i2l2657 29AA                                  i2l2649 241C  
                                i2l2681 10AA                                  i2l2673 1080  
                                i2l2665 103E                                  i2l2745 161A  
                                i2l2737 15CA                                  i2l2809 27AE  
                                i2l2905 28A6                                  i2l2761 2840  
                                i2l2825 262E                                  i2l2817 25C0  
                                i2l3393 20A6                                  i2l3385 204E  
                                i2l2595 1BF4                                  i2l2587 1BCE  
                                i2l2579 1B9E                                  i2l2659 29C4  
                                i2l2691 10FE                                  i2l2683 10B6  
                                i2l2675 1086                                  i2l2667 1046  
                                i2l2747 165E                                  i2l2739 15CE  
                                i2l2755 1688                                  i2l2907 28AE  
                                i2l2771 288A                                  i2l2763 2840  
                                i2l2819 25C0                                  i2l3387 205E  
                                i2l3379 2020                                  i2l2597 1BFA  
                                i2l2589 1BD4                                  i2l2693 1104  
                                i2l2685 10C0                                  i2l2677 1096  
                                i2l2669 1054                                  i2l2909 28CA  
                                i2l2765 2852                                  i2l2781 21FE  
                                i2l2941 25BC                                  i2l2933 254E  
                                i2l3389 206E                                  i2l2599 1C00  
                                i2l2687 10C6                                  i2l2695 1120  
                                i2l2679 10A2                                  i2l2767 285A  
                                i2l2783 2268                                  i2l2775 21E4  
                                i2l2951 19E2                                  i2l2935 254E  
                     _select_timer_mode 1F82                                  i2l2881 1266  
                                i2l2873 11CC                                  i2l2697 113A  
                                i2l2689 10F8                                  i2l2769 286E  
                                i2l2777 21E4                                  i2l2961 1A3C  
                                i2l2953 19EA                                  i2l2945 19CA  
                                i2l2937 2560                                  i2l2891 12C6  
                                i2l2875 11D8                                  i2l2699 114C  
                                i2l2779 21F6                                  i2l2963 1A4E  
                                i2l2955 19FA                                  i2l2947 19CE  
                                i2l2939 2568                                  i2l2893 12FA  
                                i2l2885 1280                                  i2l2869 11AE  
                                i2l2965 1A66                                  i2l2957 1A12  
                                i2l2949 19D0                                  i2l3693 1E70  
                                i2l2895 1306                                  i2l2887 12AC  
                                i2l2879 120E                                  i2l2967 1A78  
                                i2l2959 1A24                                  i2l3695 1E7E  
                                i2l2897 130C                                  i2l2969 1A90  
                                i2l3697 1E8C                                  i2l2899 1310  
                                i2l3699 1E9E                                  i2l2999 20BC  
    cnvert_uint32_to_string@Temp_String 0057                      ?_select_timer_mode 00D4  
                 send_4_bit_command@lcd 00E2                   send_4_bit_command@ret 00E5  
                         ??_Timer0_init 00D9                           ??_Timer1_init 00D9  
                          vfprintf@cfmt 003D            send_4_bit_char_data_pos@data 00EF  
                   ??_select_timer_mode 00D6                               ??___awdiv 0005  
                             ??___awmod 0005                  ??_lcd_4_bit_set_cursor 00EA  
                                _memset 11AE                                  clear_0 2818  
                                clear_1 2824                                  clear_2 2830  
                      ___awdiv@quotient 0007                         ___awmod@divisor 0003  
                                isa$std 0001                         ___awmod@counter 0005  
                                pad@buf 0013                  ??_set_TIMER0_interrupt 00D6  
                                dtoa@fp 001C                                  fputc@c 0001  
                                fputs@c 000E                                  fputs@i 000F  
                                fputs@s 000A                            __mediumconst 0000  
          __end_ofi2_send_4_bit_command 2632                                  tblptrh 0FF7  
                                tblptrl 0FF6                                  tblptru 0FF8  
                                putch@c 0001                  ??_set_TIMER1_interrupt 00D6  
                      __end_of_vfprintf 27F2               __end_of_select_timer_mode 2020  
                _prescaler_timer_status 2468                               ??_sprintf 0045  
      __end_of_send_4_bit_char_data_pos 2920                              __accesstop 0080  
               __end_of__initialization 2836                        ?_send_4_bit_help 00DE  
                         ___rparam_used 0001               i2lcd_4_bit_set_cursor@lcd 0013  
             i2lcd_4_bit_set_cursor@ret 0017               i2lcd_4_bit_set_cursor@row 0015  
                ??_gpio_pin_write_logic 00D7                 ??_lcd_pins_4_initialize 00E8  
                   _select_cnt_reg_size 26F4                          __pcstackCOMRAM 0001  
              lcd_pins_4_initialize@lcd 00E6                lcd_pins_4_initialize@ret 00EA  
                          __pidataBANK0 2A4E                               ?_SET_FLAG 0001  
                         __end_of_fputc 1B5E                           __end_of_fputs 29AA  
           ?_send_4_bit_string_data_pos 0018                           __end_of_putch 2B24  
               _cnvert_uint32_to_string 1CDC                     __end_of_Timer0_init 22F2  
                   __end_of_Timer1_init 1CDC                    ?_select_cnt_reg_size 00D4  
                               ??_fputc 0005                                 ??_fputs 000E  
           send_4_bit_char_data_pos@lcd 00EB             send_4_bit_char_data_pos@ret 00F0  
           send_4_bit_char_data_pos@row 00ED                                 ??_putch 0001  
                            __pbssBANK0 00AD                              __pbssBANK1 0100  
                _application_initialize 2A7C            prescaler_timer_status@timer0 00D4  
                            ??_SET_FLAG 0063                            ??_TIMER0_ISR 0063  
                          ??_TIMER1_ISR 0001                                 ?_memset 0001  
              ??i2_send_4_bit_char_data 0012                 send_4_bit_char_data@lcd 00E2  
               send_4_bit_char_data@ret 00E5                   ??_select_cnt_reg_size 00D6  
      i2gpio_pin_write_logic@Pin_Config 0001          gpio_pin_write_logic@Pin_Config 00D4  
              ??_select_prescaler_timer 00D6                      __end_of_TIMER0_ISR 2A4E  
              ??i2_lcd_4_bit_set_cursor 0017                      __end_of_TIMER1_ISR 2B22  
               i2send_4_bit_command@lcd 000F                 i2send_4_bit_command@ret 0012  
                _send_4_bit_string_data 269A                                 __Hparam 0000  
          lcd_pins_4_initialize@cnt_pin 00EB                                 __Lparam 0000  
            __end_of_Timer1_write_value 2B1E                             _Timer0_init 226C  
                           _Timer1_init 1C22                    i2_send_4_bit_command 25C0  
             ??_cnvert_uint32_to_string 0057                                 ___awdiv 1B5E  
                               ___awmod 1D8E               ?_send_4_bit_char_data_pos 00EB  
                             ?_vfprintf 0037                            __psmallconst 1000  
            __end_of_gpio_pin_intialize 254E                                 __pcinit 27F2  
                               __ramtop 1000                                 __ptext0 2632  
                               __ptext1 269A                                 __ptext2 28DA  
                               __ptext3 22F2                                 __ptext4 18F6  
                               __ptext5 2A7C                                 __ptext6 1324  
                               __ptext7 2370                                 __ptext8 2152  
                               __ptext9 274E                               _T0CONbits 0FD5  
                             _T1CONbits 0FCD                                 _lat_reg 008A  
                      ___awmod@dividend 0001                ??i2_gpio_pin_write_logic 0004  
                               _sprintf 288E              i2send_4_bit_char_data@data 0011  
                        __pintcode_body 1E3E                    end_of_initialization 2836  
                               fputc@fp 0003                                 memset@c 0003  
                               memset@k 0009                                 memset@n 0005  
   select_timer_mode@timer1$F836@timer1 00D4                                 memset@s 000B  
                               int_func 1E3E                                 fputs@fp 000C  
                 gpio_pin_intialize@ret 00E1                   ?i2_send_4_bit_command 000F  
                     __end_of_vfpfcnvrt 16B4                              _timer0_obj 009E  
                            _timer1_obj 00CB                                 postdec1 0FE5  
                               postdec2 0FDD                                 postinc0 0FEE  
                               postinc1 0FE6                                 postinc2 0FDE  
                      vfpfcnvrt@convarg 0031                              ??_vfprintf 003D  
                      _InterruptManager 0008                 ?_prescaler_timer_status 00D4  
  __end_of_gpio_pin_direction_intialize 158A            _gpio_pin_direction_intialize 1460  
       __end_of_cnvert_uint32_to_string 1D8E          send_4_bit_string_data_pos@data 001C  
         __end_of_lcd_pins_4_initialize 1460                             vfpfcnvrt@ap 002D  
                           vfpfcnvrt@cp 0035                             vfpfcnvrt@fp 0029  
                        __end_of_memset 1324          __end_of_prescaler_timer_status 24DC  
                   start_initialization 27F2                             __end_of_abs 29EA  
                           __end_of_pad 2468           ?_gpio_pin_direction_intialize 00D4  
          gpio_pin_intialize@Pin_Config 00DE                    send_4_bit_enable@lcd 00DE  
                  send_4_bit_enable@ret 00E0                 ?_application_initialize 0001  
                i2_send_4_bit_char_data 254E                  ??i2_send_4_bit_command 0012  
                           vfprintf@fmt 0039                  _select_prescaler_timer 29EA  
                           __pdataBANK0 0080                                ??_memset 0007  
          cnvert_uint16_to_string@F3221 00B8            cnvert_uint32_to_string@F3228 00AD  
                            memset@dest 0001                  i2_lcd_4_bit_set_cursor 19CA  
                           __pbssCOMRAM 006F                           __pcstackBANK0 00D4  
        __end_of_application_initialize 2AA8            cnvert_uint32_to_string@value 0053  
gpio_pin_direction_intialize@Pin_Config 00D4                       Timer0_init@timer0 00D7  
                    send_4_bit_help@lcd 00DE                 ?_send_4_bit_string_data 00E6  
                    send_4_bit_help@ret 00E1               send_4_bit_command@command 00E4  
       gpio_pin_direction_intialize@ret 00DC                 select_timer_mode@timer0 00D4  
                             _dtoa$1640 0020                            ?_Timer0_init 00D7  
                          ?_Timer1_init 00D7                               __pintcode 0008  
                i2_gpio_pin_write_logic 17D8                                ?___awdiv 0001  
                              ?___awmod 0001                       i2_send_4_bit_help 21E4  
           __end_of_select_cnt_reg_size 274E               gpio_pin_write_logic@logic 00D6  
                    ?i2_send_4_bit_help 000B                             __smallconst 1000  
                    _Timer1_write_value 2AFC             send_4_bit_help@data_command 00E0  
                   ??i2_send_4_bit_help 000E                     i2_send_4_bit_enable 2840  
        __end_of_send_4_bit_string_data 26F4                Timer1_write_value@timer1 0001  
                              ?_sprintf 003F                      _gpio_pin_intialize 24DC  
                   ?_Timer1_write_value 0001                send_4_bit_char_data@data 00E4  
            __end_of_send_4_bit_command 23EE                       Timer1_init@timer1 00D7  
                     _Timer1_read_value 2920          ??_gpio_pin_direction_intialize 00D6  
             i2send_4_bit_char_data@lcd 000F               i2send_4_bit_char_data@ret 0012  
                    ?_Timer1_read_value 0001                     ?_gpio_pin_intialize 00DE  
              __end_of_InterruptManager 1EE4                                _PIE1bits 0F9D  
                              i2u200_40 113A                                i2u200_41 1136  
                              i2u201_40 114C                                i2u201_41 1148  
                              i2u202_40 1166                                i2u210_40 15B0  
                              i2u202_41 1162                                i2u210_41 15AC  
                              i2u203_40 1176                                i2u211_40 15FC  
                              i2u203_41 1172                                i2u211_41 15F8  
                              i2u212_40 161A                                i2u204_40 17EE  
                              i2u212_41 1616                                i2u204_41 17EA  
                              i2u221_40 27E8                                i2u205_40 1810  
                              i2u213_40 2852                                i2u221_41 27E4  
                              i2u205_41 180C                                i2u213_41 284E  
                              i2u230_40 1322                                i2u206_40 1828  
                              i2u214_40 21F6                                i2u222_40 25D2  
                              i2u302_40 2A34                                i2u230_41 131E  
                              i2u206_41 1824                                i2u214_41 21F2  
                              i2u222_41 25CE                                i2u302_41 2A30  
                              i2u207_44 1848                                i2u207_45 1844  
                              i2u240_40 1A24                                i2u303_48 2A3A  
                              i2u240_41 1A20                                i2u303_49 2A4C  
                              i2u208_44 18A4                                i2u208_45 18A0  
                              i2u209_40 18F2                                i2u241_40 1A4E  
                              i2u209_41 18EE                                i2u241_41 1A4A  
                              i2u226_40 11C8                                i2u242_40 1A78  
                              i2u226_41 11C4                                i2u242_41 1A74  
                              i2u227_40 120A                                i2u227_41 1206  
                              i2u228_40 127C                                i2u180_40 1B8A  
                              i2u228_41 1278                                i2u180_41 1B86  
                              i2u229_40 12C2                                i2u181_40 1BB0  
                              i2u237_40 2560                                i2u229_41 12BE  
                              i2u181_41 1BAC                                i2u253_41 1CE6  
                              i2u237_41 255C                                i2u182_40 1BCE  
                              i2u190_40 1E2C                                i2u174_40 1AA6  
                              i2u254_40 1D04                                i2u238_40 19E2  
                              i2u246_40 20CE                                i2u182_41 1BCA  
                              i2u190_41 1E28                                i2u174_41 1AA2  
                              i2u254_41 1D00                                i2u238_41 19DE  
                              i2u246_41 20CA                                i2u183_40 1BEA  
                              i2u175_40 1AB8                                i2u191_40 23FC  
                              i2u255_40 1D8C                                i2u239_40 19FA  
                              i2u247_40 2114                                i2u183_41 1BE6  
                              i2u175_41 1AB4                                i2u191_41 23F8  
                              i2u255_41 1D88                                i2u239_41 19F6  
                              i2u247_47 210A                    ?i2_send_4_bit_enable 000B  
                              i2u184_40 1C10                                i2u176_40 1AE0  
                              i2u192_40 2452                                i2u248_40 2140  
                              i2u336_40 1E7E                                i2u184_41 1C0C  
                              i2u176_41 1ADC                                i2u192_41 244E  
                              i2u336_41 1E7A                                i2u248_47 2136  
                              i2u185_40 1DA0                                i2u193_40 29C4  
                              i2u177_40 1B16                                i2u249_40 2150  
                              i2u337_40 1E8C                                i2u185_41 1D9C  
                              i2u193_41 29C0                                i2u177_41 1B12  
                              i2u249_41 214C                                i2u337_41 1E88  
                              _PIR1bits 0F9E                                i2u186_40 1DBA  
                              i2u178_40 29A8                                i2u194_40 102A  
                              i2u338_40 1E9E                                i2u186_41 1DB6  
                              i2u178_41 29A4                                i2u194_41 1024  
                              i2u338_41 1E9A                                i2u275_40 2B0E  
                              i2u179_40 1B70                                i2u187_40 1DD4  
                              i2u195_40 102C                                i2u339_40 1EAC  
                              i2u275_41 2B0A                                i2u179_41 1B6C  
                              i2u187_41 1DD0                                i2u339_41 1EA8  
                              i2u276_40 293A                                i2u188_40 1DF2  
                              i2u196_40 103E                                i2u276_41 2936  
                              i2u188_41 1DEE                                i2u196_41 103A  
                              i2u189_40 1E08                                i2u197_40 1054  
                              i2u189_41 1E04                                i2u197_41 1050  
                              i2u198_40 1080                                i2u198_41 107C  
                              i2u199_40 1096                                i2u199_41 1092  
                              i2u297_40 205E                                i2u297_41 205A  
             __end_ofi2_send_4_bit_help 226C                                _SET_FLAG 2020  
                   ??_Timer1_read_value 0005              send_4_bit_string_data@data 00E8  
                  ??_Timer1_write_value 0005                               _vfpfcnvrt 158A  
                  ??_gpio_pin_intialize 00E0                       ??_send_4_bit_help 00E1  
            cnvert_uint32_to_string@str 0055           send_4_bit_string_data_pos@lcd 0018  
         send_4_bit_string_data_pos@row 001A                 gpio_pin_write_logic@ret 00DD  
             __end_of_Timer1_read_value 2966                               copy_data0 2806  
              ?_cnvert_uint32_to_string 0053                   ??i2_send_4_bit_enable 000D  
                              __Hrparam 0000                _send_4_bit_char_data_pos 28DA  
                            vfprintf@ap 003B                                __Lrparam 0000  
                            vfprintf@fp 0037                              ?_vfpfcnvrt 0029  
          ??_send_4_bit_string_data_pos 001E            __end_of_send_4_bit_char_data 2370  
                            sprintf@fmt 0041                                _lcd_4bit 00A7  
                              __ptext10 24DC                                __ptext11 16B4  
                              __ptext20 26F4                                __ptext12 1460  
                              __ptext21 2468                                __ptext13 1C22  
                              __ptext30 21E4                                __ptext14 2AA8  
                              __ptext31 2840                                __ptext23 2B1E  
                              __ptext15 1EE4                                __ptext40 1A94  
                              __ptext32 17D8                                __ptext24 2A20  
                              __ptext16 29EA                                __ptext41 2B22  
                              __ptext33 1CDC                                __ptext25 2020  
                              __ptext17 226C                                __ptext42 29AA  
                              __ptext34 288E                                __ptext26 20BC  
                              __ptext18 2AD2                                __ptext43 1D8E  
                              __ptext35 27A2                                __ptext27 254E  
                              __ptext19 1F82                                __ptext44 1B5E  
                              __ptext36 158A                                __ptext28 19CA  
                              __ptext45 11AE                                __ptext37 101A  
                              __ptext29 25C0                                __ptext46 2AFC  
                              __ptext38 23EE                                __ptext47 2920  
                              __ptext39 2966                                __ptext48 0000  
          i2lcd_4_bit_set_cursor@column 0016                 ?i2_send_4_bit_char_data 000F  
       ??_select_timer_mode@timer1$F840 00D6            __end_of_lcd_4_bit_set_cursor 19CA  
               Timer1_write_value@value 0003             cnvert_uint8_to_string@F3214 006F  
          __end_of_set_TIMER0_interrupt 2AFC                 ?_select_prescaler_timer 00D4  
    cnvert_uint32_to_string@DataCounter 0062                                isa$xinst 0000  
               ?i2_lcd_4_bit_set_cursor 0013                                int$flags 007D  
                              _port_reg 0080            __end_of_set_TIMER1_interrupt 2AD2  
                              _vfprintf 27A2                                _tris_reg 0094  
                 _lcd_pins_4_initialize 1324                 lcd_4_bit_set_cursor@lcd 00E6  
                           fp__SET_FLAG 0000                 lcd_4_bit_set_cursor@ret 00EA  
               lcd_4_bit_set_cursor@row 00E8                              _INTCONbits 0FF2  
        __end_ofi2_send_4_bit_char_data 25C0            __end_of_gpio_pin_write_logic 17D8  
                              intlevel2 0000              lcd_4_bit_set_cursor@column 00E9  
                             sprintf@ap 0045          __end_of_select_prescaler_timer 2A20  
               ?i2_gpio_pin_write_logic 0001          __end_ofi2_lcd_4_bit_set_cursor 1A94  
            set_TIMER0_interrupt@timer0 00D4                              _TIMER0_ISR 2A20  
                            _TIMER1_ISR 2B1E                             ??_vfpfcnvrt 002F  
                              sprintf@f 0047                                sprintf@s 003F  
                  _send_4_bit_char_data 22F2          __end_ofi2_gpio_pin_write_logic 18F6  
 __end_of_select_timer_mode@timer1$F836 1F82           _select_timer_mode@timer1$F836 1EE4  
                     ?_InterruptManager 0001                       _send_4_bit_enable 274E  
                       _send_4_bit_help 2152  
